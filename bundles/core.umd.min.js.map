{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","NullInjector","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","throwError","msg","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","obj","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponent","isComponentDef","isRootView","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","nodeIndex","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","_stylingState","_stateStorage","Map","_stylingElement","STYLING_INDEX_START_VALUE","BIT_MASK_START_VALUE","getStylingState","element","readFromMap","classesBitMask","classesIndex","stylesBitMask","stylesIndex","resetStylingState","elementDepthCount","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","lView","getNativeByTNode","getNativeByTNodeOrNull","getTNode","view","loadInternal","getComponentViewByIndex","hostView","slotValue","readPatchedData","readPatchedLView","resetPreOrderHookFlags","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","getIsParent","setIsNotParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","safeToRunHooks","getSelectedIndex","_currentSanitizer","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isDifferent","a","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","Function","RendererStyleFlags3","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","updateLastDirectiveIndex","context","lastDirectiveIndex","markContextToPersistState","setConfig","getConfig","getProp","getPropConfig","isSanitizationRequired","getGuardMask","setGuardMask","maskValue","config","getValuesCount","getBindingValue","offset","getDefaultValue","allowStylingFlush","isContextLocked","stateIsPersisted","getPropValuesStartPosition","hasValueChanged","compareValueA","compareValueB","isStylingValueDefined","concatString","separator","hyphenate","replace","v","charAt","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","setMapValue","getMapValue","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","ANIMATION_PROP_PREFIX","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","prop","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","DEFAULT_GUARD_MASK_VALUE","STYLING_INDEX_FOR_MAP_BINDING","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","deferredBindingQueue","updateClassBinding","bindingIndex","deferRegistration","forceUpdate","isMapBased","state","updateBindingData","updateStyleBinding","counterIndex","sanitizationRequired","deferBindingRegistration","flushDeferredBindings","registerBinding","changed","countId","bindingValue","registered","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","firstValueIndex","lastValueIndex","maybeApplyStyling","allowFlush","bitMask","styleSetter","styleSanitizer","lockAndFinalizeContext","initialValues","updateInitialStylingOnContext","initialStyling","lockContext","contextHasUpdates","applyStyling","bindingData","bitMaskValue","applyStylingFn","normalizeBitMaskValue","stylingMapsSyncFn","getStylingMapsSyncFn","_activeStylingMapApplyFn","mapsMode","valueApplied","valuesCountUpToDefault","defaultValue","valueAppliedWithinMap","setStyle","nativeStyle","style","DashCase","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","isClassBased","stylingMapArr","NO_CHANGE","ELEMENT_MARKER","COMMENT_MARKER","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","resolveInnerMapMode","isValueAllowedToBeApplied","useDefault","valueToApply","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","activateStylingMapFeature","setStylingMapsSyncFn","currentMode","isExactMatch","innerMode","doApplyValue","addItemToStylingMap","allowOverwrite","propAtIndex","applied","stylingMapToString","attrValue","stylingMapToStringMap","stringMap","TStylingContextDebug","enumerable","configurable","entries","guardMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","TNode","tView_","propertyMetadataStartIndex","propertyMetadataEndIndex","localNames","initialInputs","tViews","projectionNext","projection","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","ɵɵselect","selectInternal","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","text","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshDescendantViews","refreshDynamicEmbeddedViews","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","viewData","selectedIndex","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","staticContentQueries","staticViewQueries","executeViewQueryFn","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentView","componentTView","checkView","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElementNS","createLView","host","tHostNode","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_previousOrParentTNode","tickRootContext","executeTemplate","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesAndLocals","localRefExtractor","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","directiveRegistry","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","resolveDirectives","findDirectiveMatches","registry","matches","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","lViewOrLContainer","markViewDirty","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","setValue","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","executeActionOnElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","nativeInsertBefore","nativeRemoveNode","destroyNode","executeActionOnContainer","renderParent","anchor","executeActionOnView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","isIcuCase","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","viewIndexInContainer","nextViewIndex","tViewNodeChild","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNodes","tProjectionNode","selectorIndex","projectedView","nodeToProject","appendProjectedNode","appendProjectedChildren","ngContainerChildTNode","projectionView","projectedTNode","nodeOrContainer","viewRootTNode","executeActionOnNode","executeActionOnElementContainerOrIcuContainer","executeActionOnProjection","componentLView","projectionTNode","projectedComponentLView","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_super","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","embeddedTView","createEmbeddedViewAndNode","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","viewAmount","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$1","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","injectorDefTypes","Set","_destroyed","dedupStack","injectorDef","processInjectorType","provider","processProvider","set","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","catchInjectorError","injectorErrorName","tokenPath","message","formatError","substr","parts","JSON","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","multiProvider","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","metadata","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","resolvedProvider","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵattribute","bound","interpolationV","isBindingUpdated","interpolation1","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵload","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵstyling","updateLastDirectiveIndex$1","getClassesContext","getStylesContext","getActiveDirectiveStylingIndex","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","_stylingProp","resolveStylePropValue","resolvedValue","deferStylingUpdate","ɵɵclassProp","defer","updated","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","ɵɵstylingApply","getRenderer","flushStyling","classesContext","stylesContext","persistState","allowFlushClasses","allowFlushStyles","classesFlushed","stylesFlushed","deleteStylingStateFromStorage","storeStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","getContext","allocTStylingContext","getActiveDirectiveSuperClassHeight","ɵɵelementStart","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextBinding","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","resetAllStylingState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_records","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","LocaleDataIndex","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","read","isStatic","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","e_3","e_3_1","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","e_4","lViewResults","embeddedLView","e_4_1","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵloadViewQuery","loadQueryInternal","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadContentQuery","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$3","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","LOCALE_ID$1","TRANSLATIONS$1","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","load","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_getStylingDebugInfo","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","debugNode","getDebugNode","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetLocaleId","ɵDEFAULT_LOCALE_ID","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.2.0-next.2+67.sha-82055b2.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n            stylingWritePersistedState: 0,\n            stylingReadPersistedState: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ɵɵdefineInjectable({ token: type, factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * // TODO(matsko): add updateMask info\n     *\n     * This file contains all state-based logic for styling in Angular.\n     *\n     * Styling in Angular is evaluated with a series of styling-specific\n     * template instructions which are called one after another each time\n     * change detection occurs in Angular.\n     *\n     * Styling makes use of various temporary, state-based variables between\n     * instructions so that it can better cache and optimize its values.\n     * These values are usually populated and cleared when an element is\n     * exited in change detection (once all the instructions are run for\n     * that element).\n     *\n     * There are, however, situations where the state-based values\n     * need to be stored and used at a later point. This ONLY occurs when\n     * there are template-level as well as host-binding-level styling\n     * instructions on the same element. The example below shows exactly\n     * what could be:\n     *\n     * ```html\n     * <!-- two sources of styling: the template and the directive -->\n     * <div [style.width]=\"width\" dir-that-sets-height></div>\n     * ```\n     *\n     * If and when this situation occurs, the current styling state is\n     * stored in a storage map value and then later accessed once the\n     * host bindings are evaluated. Once styling for the current element\n     * is over then the map entry will be cleared.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    var _stylingState = null;\n    var _stateStorage = new Map();\n    // this value is not used outside this file and is only here\n    // as a caching check for when the element changes.\n    var _stylingElement = null;\n    var STYLING_INDEX_START_VALUE = 1;\n    var BIT_MASK_START_VALUE = 0;\n    function getStylingState(element, readFromMap) {\n        if (!_stylingElement || element !== _stylingElement) {\n            _stylingElement = element;\n            if (readFromMap) {\n                _stylingState = _stateStorage.get(element) || null;\n                ngDevMode && ngDevMode.stylingReadPersistedState++;\n            }\n            _stylingState = _stylingState || {\n                classesBitMask: BIT_MASK_START_VALUE,\n                classesIndex: STYLING_INDEX_START_VALUE,\n                stylesBitMask: BIT_MASK_START_VALUE,\n                stylesIndex: STYLING_INDEX_START_VALUE,\n            };\n        }\n        return _stylingState;\n    }\n    function resetStylingState() {\n        _stylingState = null;\n        _stylingElement = null;\n    }\n    function storeStylingState(element, state) {\n        ngDevMode && ngDevMode.stylingWritePersistedState++;\n        _stateStorage.set(element, state);\n    }\n    function deleteStylingStateFromStorage(element) {\n        _stateStorage.delete(element);\n    }\n    function resetAllStylingState() {\n        resetStylingState();\n        _stateStorage.clear();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        var index = tNode.index;\n        var node = index == -1 ? null : unwrapRNode(lView[index]);\n        ngDevMode && node !== null && assertDomNode(node);\n        return node;\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex == null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n        resetAllStylingState();\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param safeToRunHooks Whether the runtime is in a state where running lifecycle hooks is valid.\n     * This is not always the case (for example, the application may have crashed and `leaveView` is\n     * being executed while unwinding the call stack).\n     */\n    function leaveView(newView, safeToRunHooks) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                safeToRunHooks && executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // we have now jumped to another element\n        // therefore the state is stale\n        resetStylingState();\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    var MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        // because map-based bindings deal with a dynamic set of values, there\n        // is no way to know ahead of time whether or not sanitization is required.\n        // For this reason the configuration will always mark sanitization as active\n        // (this means that when map-based values are applied then sanitization will\n        // be checked against each property).\n        var mapBasedConfig = 1 /* SanitizationRequired */;\n        return [\n            initialStyling || [''],\n            0 /* Initial */,\n            TEMPLATE_DIRECTIVE_INDEX,\n            mapBasedConfig,\n            0,\n            MAP_BASED_ENTRY_PROP_NAME,\n        ];\n    }\n    /**\n     * Sets the provided directive as the last directive index in the provided `TStylingContext`.\n     *\n     * Styling in Angular can be applied from the template as well as multiple sources of\n     * host bindings. This means that each binding function (the template function or the\n     * hostBindings functions) will generate styling instructions as well as a styling\n     * apply function (i.e. `stylingApply()`). Because host bindings functions and the\n     * template function are independent from one another this means that the styling apply\n     * function will be called multiple times. By tracking the last directive index (which\n     * is what happens in this function) the styling algorithm knows exactly when to flush\n     * styling (which is when the last styling apply function is executed).\n     */\n    function updateLastDirectiveIndex(context, lastDirectiveIndex) {\n        if (lastDirectiveIndex === TEMPLATE_DIRECTIVE_INDEX) {\n            var currentValue = context[2 /* LastDirectiveIndexPosition */];\n            if (currentValue > TEMPLATE_DIRECTIVE_INDEX) {\n                // This means that a directive or two contained a host bindings function, but\n                // now the template function also contains styling. When this combination of sources\n                // comes up then we need to tell the context to store the state between updates\n                // (because host bindings evaluation happens after template binding evaluation).\n                markContextToPersistState(context);\n            }\n        }\n        else {\n            context[2 /* LastDirectiveIndexPosition */] = lastDirectiveIndex;\n        }\n    }\n    function getConfig(context) {\n        return context[1 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[1 /* ConfigPosition */] = value;\n    }\n    function getProp(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigAndGuardOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) > 0;\n    }\n    function getGuardMask(context, index) {\n        var configGuardValue = context[index + 0 /* ConfigAndGuardOffset */];\n        return configGuardValue >> 1 /* TotalBits */;\n    }\n    function setGuardMask(context, index, maskValue) {\n        var config = getPropConfig(context, index);\n        var guardMask = maskValue << 1 /* TotalBits */;\n        context[index + 0 /* ConfigAndGuardOffset */] = config | guardMask;\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return (context && index === context[2 /* LastDirectiveIndexPosition */]) ? true :\n            false;\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n    function stateIsPersisted(context) {\n        return (getConfig(context) & 2 /* PersistStateValues */) > 0;\n    }\n    function markContextToPersistState(context) {\n        setConfig(context, getConfig(context) | 2 /* PersistStateValues */);\n    }\n    function getPropValuesStartPosition(context) {\n        return 6 /* MapBindingsBindingsStartPosition */ +\n            context[4 /* MapBindingsValuesCountPosition */];\n    }\n    function hasValueChanged(a, b) {\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        // these are special cases for String based values (which are created as artifacts\n        // when sanitization is bypassed on a particular value)\n        if (compareValueA instanceof String) {\n            compareValueA = compareValueA.toString();\n        }\n        if (compareValueB instanceof String) {\n            compareValueB = compareValueB.toString();\n        }\n        return isDifferent(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[0 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            value.length >= 6 /* MapBindingsBindingsStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    var ANIMATION_PROP_PREFIX = '@';\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class ABC extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    /**\n     * Default size count value for a new entry in a context.\n     *\n     * A value of `1` is used here because each entry in the context has a default\n     * property.\n     */\n    var DEFAULT_SIZE_VALUE = 1;\n    var deferredBindingQueue = [];\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, element, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, false);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular CSS class need to be\n            // applied again because on or more of the bindings for the CSS\n            // class have changed.\n            state.classesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, element, prop, bindingIndex, value, sanitizer, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        var sanitizationRequired = isMapBased ?\n            true :\n            (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular property need to be\n            // applied again because on or more of the bindings for the CSS\n            // property have changed.\n            state.stylesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     * If the binding does get registered and the `deferRegistration` flag is true then the\n     * binding data will be queued up until the context is later flushed in `applyStyling`.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            data[bindingIndex] = value;\n        }\n        return changed;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired) {\n        deferredBindingQueue.unshift(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            var sanitizationRequired = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex, sanitizationRequired);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, because they do not have a property value\n     * (since it's a map), all map-based entries are stored in an already populated area of\n     * the context at the top (which is reserved for map-based entries).\n     */\n    function registerBinding(context, countId, prop, bindingValue, sanitizationRequired) {\n        var registered = false;\n        if (prop) {\n            // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n            var found = false;\n            var i = getPropValuesStartPosition(context);\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var p = getProp(context, i);\n                found = prop <= p;\n                if (found) {\n                    // all style/class bindings are sorted by property name\n                    if (prop < p) {\n                        allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                    }\n                    addBindingIntoContext(context, false, i, bindingValue, countId);\n                    break;\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            if (!found) {\n                allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n                registered = true;\n            }\n        }\n        else {\n            // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n            // there is no need to allocate the map-based binding region into the context\n            // since it is already there when the context is first created.\n            addBindingIntoContext(context, true, 3 /* MapBindingsPosition */, bindingValue, countId);\n            registered = true;\n        }\n        return registered;\n    }\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        // 1,2: splice index locations\n        // 3: each entry gets a config value (guard mask + flags)\n        // 4. each entry gets a size value (which is always one because there is always a default binding\n        // value)\n        // 5. the property that is getting allocated into the context\n        // 6. the default binding value (usually `null`)\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n        setGuardMask(context, index, DEFAULT_GUARD_MASK_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     *\n     * Note that this function also handles map-based bindings and will insert them\n     * at the top of the context.\n     */\n    function addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        var firstValueIndex = index + 3 /* BindingsStartOffset */;\n        var lastValueIndex = firstValueIndex + valuesCount;\n        if (!isMapBased) {\n            // prop-based values all have default values, but map-based entries do not.\n            // we want to access the index for the default value in this case and not just\n            // the bindings...\n            lastValueIndex--;\n        }\n        if (typeof bindingValue === 'number') {\n            // the loop here will check to see if the binding already exists\n            // for the property in the context. Why? The reason for this is\n            // because the styling context is not \"locked\" until the first\n            // flush has occurred. This means that if a repeated element\n            // registers its styling bindings then it will register each\n            // binding more than once (since its duplicated). This check\n            // will prevent that from happening. Note that this only happens\n            // when a binding is first encountered and not each time it is\n            // updated.\n            for (var i = firstValueIndex; i <= lastValueIndex; i++) {\n                var indexAtPosition = context[i];\n                if (indexAtPosition === bindingValue)\n                    return;\n            }\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            // now that a new binding index has been added to the property\n            // the guard mask bit value (at the `countId` position) needs\n            // to be included into the existing mask value.\n            var guardMask = getGuardMask(context, index) | (1 << countId);\n            setGuardMask(context, index, guardMask);\n        }\n        else if (bindingValue !== null && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the `stylingApply()` instruction (which is run at the very end of styling\n     * change detection) and will rely on any state values that are set from when\n     * any styling bindings update.\n     *\n     * This function may be called multiple times on the same element because it can\n     * be called from the template code as well as from host bindings. In order for\n     * styling to be successfully flushed to the element (which will only happen once\n     * despite this being called multiple times), the following criteria must be met:\n     *\n     * - `flushStyling` is called from the very last directive that has styling for\n     *    the element (see `allowStylingFlush()`).\n     * - one or more bindings for classes or styles has updated (this is checked by\n     *   examining the classes or styles bit mask).\n     *\n     * If the style and class values are successfully applied to the element then\n     * the temporary state values for the element will be cleared. Otherwise, if\n     * this did not occur then the styling state is persisted (see `state.ts` for\n     * more information on how this works).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var persistState = classesContext ? stateIsPersisted(classesContext) :\n            (stylesContext ? stateIsPersisted(stylesContext) : false);\n        var allowFlushClasses = allowStylingFlush(classesContext, directiveIndex);\n        var allowFlushStyles = allowStylingFlush(stylesContext, directiveIndex);\n        // deferred bindings are bindings which are scheduled to register with\n        // the context at a later point. These bindings can only registered when\n        // the context will be 100% flushed to the element.\n        if (deferredBindingQueue.length && (allowFlushClasses || allowFlushStyles)) {\n            flushDeferredBindings();\n        }\n        var state = getStylingState(element, persistState);\n        var classesFlushed = maybeApplyStyling(renderer, element, data, classesContext, allowFlushClasses, state.classesBitMask, setClass, null);\n        var stylesFlushed = maybeApplyStyling(renderer, element, data, stylesContext, allowFlushStyles, state.stylesBitMask, setStyle, styleSanitizer);\n        if (classesFlushed && stylesFlushed) {\n            resetStylingState();\n            if (persistState) {\n                deleteStylingStateFromStorage(element);\n            }\n        }\n        else if (persistState) {\n            storeStylingState(element, state);\n        }\n    }\n    function maybeApplyStyling(renderer, element, data, context, allowFlush, bitMask, styleSetter, styleSanitizer) {\n        if (allowFlush && context) {\n            lockAndFinalizeContext(context);\n            if (contextHasUpdates(context, bitMask)) {\n                ngDevMode && (styleSanitizer ? ngDevMode.stylesApplied++ : ngDevMode.classesApplied++);\n                applyStyling(context, renderer, element, data, bitMask, styleSetter, styleSanitizer);\n                return true;\n            }\n        }\n        return allowFlush;\n    }\n    function contextHasUpdates(context, bitMask) {\n        return context && bitMask > BIT_MASK_START_VALUE;\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     */\n    function lockAndFinalizeContext(context) {\n        if (!isContextLocked(context)) {\n            var initialValues = getStylingMapArray(context);\n            if (initialValues) {\n                updateInitialStylingOnContext(context, initialValues);\n            }\n            lockContext(context);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = getStylingMapsSyncFn();\n        var mapsGuardMask = getGuardMask(context, 3 /* MapBindingsPosition */);\n        var applyAllValues = (bitMask & mapsGuardMask) > 0;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var guardMask = getGuardMask(context, i);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var valuesCountUpToDefault = valuesCount - 1;\n                var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n                // case 1: apply prop-based values\n                // try to apply the binding values and see if a non-null\n                // value gets set for the styling binding\n                for (var j = 0; j < valuesCountUpToDefault; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    var value = bindingData[bindingIndex];\n                    if (isStylingValueDefined(value)) {\n                        var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                            sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                            value;\n                        applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                        valueApplied = true;\n                        break;\n                    }\n                }\n                // case 2: apply map-based values\n                // traverse through each map-based styling binding and update all values up to\n                // the provided `prop` value. If the property was not applied in the loop above\n                // then it will be attempted to be applied in the maps sync code below.\n                if (stylingMapsSyncFn) {\n                    // determine whether or not to apply the target property or to skip it\n                    var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                        2 /* ApplyTargetProp */);\n                    var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                    valueApplied = valueApplied || valueAppliedWithinMap;\n                }\n                // case 3: apply the default value\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        // the reason why this may be `null` is either because\n        // it's a container element or it's a part of a test\n        // environment that doesn't have styling. In either\n        // case it's safe not to apply styling to the element.\n        var nativeStyle = native.style;\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.setProperty(prop, value));\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.removeProperty(prop));\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (className !== '') {\n            // the reason why this may be `null` is either because\n            // it's a container element or it's a part of a test\n            // environment that doesn't have styling. In either\n            // case it's safe not to apply styling to the element.\n            var classList = native.classList;\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    (classList && classList.add(className));\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    (classList && classList.remove(className));\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a spart\n        // of a binding (since it's static)\n        var INITIAL_STYLING_COUNT_ID = -1;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, INITIAL_STYLING_COUNT_ID, prop, value, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `select(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, 0, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var targetPropValueWasApplied = false;\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (currentMapIndex < totalMaps) {\n            var bindingIndex = getBindingValue(context, 3 /* MapBindingsPosition */, currentMapIndex);\n            var stylingMapArr = data[bindingIndex];\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            while (cursor < stylingMapArr.length) {\n                var prop = getMapProp(stylingMapArr, cursor);\n                var iteratedTooFar = targetProp && prop > targetProp;\n                var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                var value = getMapValue(stylingMapArr, cursor);\n                var valueIsDefined = isStylingValueDefined(value);\n                // the recursive code is designed to keep applying until\n                // it reaches or goes past the target prop. If and when\n                // this happens then it will stop processing values, but\n                // all other map values must also catch up to the same\n                // point. This is why a recursive call is still issued\n                // even if the code has iterated too far.\n                var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                var innerProp = iteratedTooFar ? targetProp : prop;\n                var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n                if (iteratedTooFar) {\n                    if (!targetPropValueWasApplied) {\n                        targetPropValueWasApplied = valueApplied;\n                    }\n                    break;\n                }\n                if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                    var useDefault = isTargetPropMatched && !valueIsDefined;\n                    var valueToApply = useDefault ? defaultValue : value;\n                    var bindingIndexToApply = useDefault ? bindingIndex : null;\n                    var finalValue = sanitizer ?\n                        sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                        valueToApply;\n                    applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                    valueApplied = true;\n                }\n                targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                cursor += 2 /* TupleSize */;\n            }\n            setCurrentSyncCursor(currentMapIndex, cursor);\n            // this is a fallback case in the event that the styling map is `null` for this\n            // binding but there are other map-based bindings that need to be evaluated\n            // afterwards. If the `prop` value is falsy then the intention is to cycle\n            // through all of the properties in the remaining maps as well. If the current\n            // styling map is too short then there are no values to iterate over. In either\n            // case the follow-up maps need to be iterated over.\n            if (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp) {\n                return innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map.\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n        var innerMode = currentMode;\n        if (!valueIsDefined && !(currentMode & 4 /* SkipTargetProp */) &&\n            (isExactMatch || (currentMode & 1 /* ApplyAllValues */))) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the {key:value} map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 3 /* MapBindingsPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var valuesCount = getValuesCount(context, i);\n                    // the context may contain placeholder values which are populated ahead of time,\n                    // but contain no actual binding values. In this situation there is no point in\n                    // classifying this as an \"entry\" since no real data is stored here yet.\n                    if (valuesCount) {\n                        var prop = getProp(context, i);\n                        var guardMask = getGuardMask(context, i);\n                        var defaultValue = getDefaultValue(context, i);\n                        var sanitizationRequired = isSanitizationRequired(context, i);\n                        var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                        var sources = [];\n                        for (var j = 0; j < valuesCount; j++) {\n                            sources.push(context[bindingsStartPosition + j]);\n                        }\n                        entries[prop] = { prop: prop, guardMask: guardMask, sanitizationRequired: sanitizationRequired, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    }\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = getValuesCount(this.context, 3 /* MapBindingsPosition */) > 0;\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            applyStyling(this.context, null, mockElement, this._data, true, mapFn, sanitizer);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = ngDevMode && createNamedArrayType('LView');\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyMetadataStartIndex, //\n        propertyMetadataEndIndex, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyMetadataStartIndex = propertyMetadataStartIndex;\n            this.propertyMetadataEndIndex = propertyMetadataEndIndex;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 8 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 4 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 16 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 1 /* isComponent */)\n                    flags.push('TNodeFlags.isComponent');\n                if (this.flags & 32 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 2 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    var TViewData = ngDevMode && createNamedArrayType('TViewData');\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = ngDevMode && createNamedArrayType('LViewBlueprint');\n    var MatchesArray = ngDevMode && createNamedArrayType('MatchesArray');\n    var TViewComponents = ngDevMode && createNamedArrayType('TViewComponents');\n    var TNodeLocalNames = ngDevMode && createNamedArrayType('TNodeLocalNames');\n    var TNodeInitialInputs = ngDevMode && createNamedArrayType('TNodeInitialInputs');\n    var TNodeInitialData = ngDevMode && createNamedArrayType('TNodeInitialData');\n    var LCleanup = ngDevMode && createNamedArrayType('LCleanup');\n    var TCleanup = ngDevMode && createNamedArrayType('TCleanup');\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    queries: null,\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                var styles = isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView) :\n                    null;\n                var classes = isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true) :\n                    null;\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        selectInternal(lView, index);\n    }\n    function selectInternal(lView, index) {\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        // We must materialize query results before child components are processed\n        // in case a child component has projected a container. The LContainer needs\n        // to exist so the embedded views are properly attached by the container.\n        if (!creationMode || tView.staticViewQueries) {\n            executeViewQueryFn(2 /* Update */, tView, lView[CONTEXT]);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // The first node is not always the one at index 0, in case of i18n, index 0 can be the\n        // instruction `i18nStart` and the first node has the index 1 or more\n        if (index === 0 || !tView.firstChild) {\n            tView.firstChild = tNode;\n        }\n        // Now link ourselves into the tree.\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setPreviousOrParentTNode(null, true);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor\n     * inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            // Will become true if the `try` block executes with no errors.\n            var safeToRunHooks = false;\n            try {\n                setPreviousOrParentTNode(null, true);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                executeTemplate(viewToRender, tView.template, getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n                safeToRunHooks = true;\n            }\n            finally {\n                leaveView(oldView, safeToRunHooks);\n                setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                templateFn && executeTemplate(hostView, templateFn, 1 /* Create */, context);\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && executeTemplate(hostView, templateFn, 2 /* Update */, context);\n            refreshDescendantViews(hostView);\n            safeToRunHooks = true;\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView, safeToRunHooks);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */) {\n                // When we're updating, have an inherent ɵɵselect(0) so we don't have to generate that\n                // instruction for most update blocks\n                selectInternal(lView, 0);\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new (ngDevMode ? LViewBlueprint : Array)(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // propertyMetadataStartIndex: number\n        -1, // propertyMetadataEndIndex: number\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyMetadataStartIndex: -1,\n                propertyMetadataEndIndex: -1,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(previousOrParentTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ngDevMode && createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current[ACTIVE_INDEX] === -1 && isLContainer(current)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < current.length; i++) {\n                    var dynamicViewData = current[i];\n                    // The directives and pipes are not needed here as an existing view is only being\n                    // refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(hostView) || isCreationMode(lView)) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n     */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            resetPreOrderHookFlags(hostView);\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            executeTemplate(hostView, templateFn, getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery !== null) {\n            setCurrentQueryIndex(0);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeActionOnElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped\n            // in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Insert */) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 1 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 2 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                executeActionOnContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 0 /* Insert */ : 1 /* Detach */;\n            executeActionOnView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        executeActionOnView(lView[RENDERER], 1 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                executeActionOnView(renderer, 2 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode);\n        var renderParent = parent.parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (renderParent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = parent && parent.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then its direct parent node is the renderer.\n            if (isIcuCase && parent.flags & 2 /* isProjected */) {\n                return getNativeByTNode(parent, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(renderParent, 3 /* Element */);\n            if (renderParent.flags & 1 /* isComponent */ && !isIcuCase) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[renderParent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(renderParent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_1, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            return tViewNodeChild !== null ? getNativeByTNodeOrNull(tViewNodeChild, lView) :\n                lContainer[NATIVE];\n        }\n        else {\n            return lContainer[NATIVE];\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target LView)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (!(nodeToProject.flags & 32 /* isDetached */)) {\n                    if (nodeToProject.type === 1 /* Projection */) {\n                        appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                    }\n                    else {\n                        // This flag must be set now or we won't know that this node is projected\n                        // if the nodes are inserted into a container later.\n                        nodeToProject.flags |= 2 /* isProjected */;\n                        appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                    }\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Loops over all children of a TNode container and appends them to the DOM\n     *\n     * @param ngContainerChildTNode The first child of the TNode container\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedChildren(ngContainerChildTNode, tProjectionNode, currentView, projectionView) {\n        while (ngContainerChildTNode) {\n            appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n            ngContainerChildTNode = ngContainerChildTNode.next;\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else if (projectedTNode.type === 5 /* IcuContainer */) {\n            // The node we are adding is an ICU container which is why we also need to project all the\n            // children nodes that might have been created previously and are linked to this anchor\n            var ngContainerChildTNode = projectedTNode.child;\n            appendProjectedChildren(ngContainerChildTNode, ngContainerChildTNode, projectionView, projectionView);\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                appendProjectedChildren(projectedTNode.child, tProjectionNode, currentView, projectionView);\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n    /**\n     * `executeActionOnView` performs an operation on the view as specified in `action` (insert, detach,\n     * destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. While the recursive implementation is not the\n     * most efficient one, trying to unroll the nodes non-recursively results in very complex code that\n     * is very hard (to maintain). We are sacrificing a bit of performance for readability using a\n     * recursive implementation.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        while (viewRootTNode !== null) {\n            executeActionOnNode(renderer, action, lView, viewRootTNode, renderParent, beforeNode);\n            viewRootTNode = viewRootTNode.next;\n        }\n    }\n    /**\n     * `executeActionOnProjection` performs an operation on the projection specified by `action`\n     * (insert, detach, destroy).\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode projection TNode to process\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnProjection(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode && assertDefined(componentNode.projection, 'Element nodes for which projection is processed must have projection defined.');\n        var nodeToProject = componentNode.projection[tProjectionNode.projection];\n        if (nodeToProject !== undefined) {\n            if (Array.isArray(nodeToProject)) {\n                for (var i = 0; i < nodeToProject.length; i++) {\n                    var rNode = nodeToProject[i];\n                    ngDevMode && assertDomNode(rNode);\n                    executeActionOnElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n                }\n            }\n            else {\n                var projectionTNode = nodeToProject;\n                var projectedComponentLView = componentLView[PARENT];\n                while (projectionTNode !== null) {\n                    executeActionOnNode(renderer, action, projectedComponentLView, projectionTNode, renderParent, beforeNode);\n                    projectionTNode = projectionTNode.projectionNext;\n                }\n            }\n        }\n    }\n    /**\n     * `executeActionOnContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeNodeAction)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            executeActionOnElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            executeActionOnView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n    /**\n     * `executeActionOnElementContainerOrIcuContainer` performs an operation on the ng-container node\n     * and its child nodes as specified by the `action` (insert, detach, destroy).\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tNode The TNode associated with the `ElementContainer` or `IcuContainer`.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var node = lView[tNode.index];\n        executeActionOnElementOrContainer(action, renderer, renderParent, node, beforeNode);\n        var childTNode = tNode.child;\n        while (childTNode) {\n            executeActionOnNode(renderer, action, lView, childTNode, renderParent, beforeNode);\n            childTNode = childTNode.next;\n        }\n    }\n    function executeActionOnNode(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var nodeType = tNode.type;\n        if (!(tNode.flags & 32 /* isDetached */)) {\n            if (nodeType === 4 /* ElementContainer */ || nodeType === 5 /* IcuContainer */) {\n                executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else if (nodeType === 1 /* Projection */) {\n                executeActionOnProjection(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                executeActionOnElementOrContainer(action, renderer, renderParent, lView[tNode.index], beforeNode);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createEmbeddedViewAndNode(embeddedTView, context, this._declarationView, this._declarationTContainer.injectorIndex);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderEmbeddedTemplate(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () {\n                        // Note that if there are no views, the container\n                        // length will be smaller than the header offset.\n                        var viewAmount = this._lContainer.length - CONTAINER_HEADER_OFFSET;\n                        return viewAmount > 0 ? viewAmount : 0;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponent(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$1); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef !== null) {\n            return injectableDef.factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = new Array(paramLength).fill('?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param lView Current view\n     * @param value Value to diff\n     */\n    function bind(lView, value) {\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementAttributeInternal(index, name, bound, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tContainerNode, localRefExtractor);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling() {\n        var tView = getLView()[TVIEW];\n        if (tView.firstTemplatePass) {\n            updateLastDirectiveIndex$1(getPreviousOrParentTNode(), getActiveDirectiveStylingIndex());\n        }\n    }\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `select(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(getSelectedIndex(), bindingIndex, className, value, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     */\n    function _stylingProp(elementIndex, bindingIndex, prop, value, isClassBased, defer) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var updated = false;\n        if (value !== NO_CHANGE) {\n            if (isClassBased) {\n                updated = updateClassBinding(getClassesContext(tNode), lView, native, prop, bindingIndex, value, defer, false);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updated = updateStyleBinding(getStylesContext(tNode), lView, native, prop, bindingIndex, value, sanitizer, defer, false);\n            }\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased, defer) {\n        activateStylingMapFeature();\n        var lView = getLView();\n        var valueHasChanged = false;\n        if (value !== NO_CHANGE) {\n            var tNode = getTNode(elementIndex, lView);\n            var native = getNativeByTNode(tNode, lView);\n            var oldValue = lView[bindingIndex];\n            valueHasChanged = hasValueChanged(oldValue, value);\n            var stylingMapArr = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            if (isClassBased) {\n                updateClassBinding(context, lView, native, null, bindingIndex, stylingMapArr, defer, valueHasChanged);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updateStyleBinding(context, lView, native, null, bindingIndex, stylingMapArr, sanitizer, defer, valueHasChanged);\n            }\n        }\n        return valueHasChanged;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context)) {\n                var inputs = tNode.inputs[isClassBased ? 'class' : 'style'];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n            }\n            lView[bindingIndex] = newValue;\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length > 0) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be called from the template and hostBindings\n     * functions and may be called multiple times depending whether multiple\n     * sources of styling exist. If called multiple times, only the last call\n     * to `stlyingApply()` will render styling to the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var elementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        var sanitizer = getCurrentStyleSanitizer();\n        flushStyling(renderer, lView, getClassesContext(tNode), getStylesContext(tNode), native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || [''];\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || [''];\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex$1(tNode, directiveIndex) {\n        updateLastDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateLastDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not a style/class binding update should be applied later.\n     *\n     * This function will decide whether a binding should be applied immediately\n     * or later (just before the styles/classes are flushed to the element). The\n     * reason why this feature exists is because of super/sub directive inheritance.\n     * Angular will evaluate host bindings on the super directive first and the sub\n     * directive, but the styling bindings on the sub directive are of higher priority\n     * than the super directive. For this reason all styling bindings that take place\n     * in this circumstance will need to be deferred until later so that they can be\n     * applied together and in a different order (the algorithm handles that part).\n     */\n    function deferStylingUpdate() {\n        return getActiveDirectiveSuperClassHeight() > 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name);\n        var renderer = lView[RENDERER];\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n        if (hasClassInput(tNode) && tNode.classes) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode) && tNode.styles) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = getInitialStylingValue(context) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        attachPatchData(native, lView);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        // It's always safe to run hooks here, as `leaveView` is not called during the 'finally' block\n        // of a try-catch-finally statement, so it can never be reached while unwinding the stack due to\n        // an error being thrown.\n        leaveView(lContainer[PARENT], /* safeToRunHooks */ true);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(numProjectionSlots).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation1(getLView(), prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation2(getLView(), prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation3(getLView(), prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation4(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation5(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation6(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation7(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation8(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolationV(getLView(), values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        ngDevMode && ngDevMode.rendererSetText++;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(value) {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            textBindingInternal(lView, index, renderStringify(bound));\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, true);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(benlesh): remove bind call here.\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bound, sanitizer, true, loadComponentRenderer);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵselect(0);\n     *        ɵɵtextBinding(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.2.0-next.2+67.sha-82055b2.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef));\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            // Will become true if the `try` block executes with no errors.\n            var safeToRunHooks = false;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n                safeToRunHooks = true;\n            }\n            finally {\n                leaveView(oldLView, safeToRunHooks);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(viewData, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, viewData) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            var tProjectionNode = tNode;\n            appendProjectedNodes(viewData, tProjectionNode, tProjectionNode.projection, findComponentView(viewData));\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = ɵɵload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        // Define this node as detached so that we don't risk projecting it\n        removedPhTNode.flags |= 32 /* isDetached */;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var lView = getLView();\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        var expression = bind(lView, value);\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @codeGenApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        if (placeholders !== undefined && Object.keys(placeholders).length) {\n            return input.replace(LOCALIZE_PH_REGEXP, function (_, key) { return placeholders[key] || ''; });\n        }\n        return input;\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = new Array(noOfInheritedQueries);\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries[i] = parentLQuery.clone();\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, read, isStatic) {\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.read = read;\n            this.isStatic = isStatic;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            var e_1, _a;\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.elementStart(tView, tNode);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            var e_2, _a;\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.elementEnd(tNode);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            var e_3, _a;\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.template(tView, tNode);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = new Array(tQueryMatches.length / 2);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result[i / 2] = null;\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result[i / 2] =\n                        createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read);\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var e_4, _a;\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        try {\n                            for (var _b = __values(declarationLContainer[MOVED_VIEWS]), _c = _b.next(); !_c.done; _c = _b.next()) {\n                                var embeddedLView = _c.value;\n                                collectQueryResults(embeddedLView, childQueryIndex, result);\n                            }\n                        }\n                        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                        finally {\n                            try {\n                                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                            }\n                            finally { if (e_4) throw e_4.error; }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode() === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, read, isStatic), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadViewQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, read, isStatic), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadContentQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵload': ɵɵload,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadViewQuery': ɵɵloadViewQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵloadContentQuery': ɵɵloadContentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$3)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$3)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$3,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$3);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = ɵɵdefineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = ɵɵdefineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = ɵɵdefineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                setLocaleId(localeId);\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = ɵɵdefineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element);\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _getStylingDebugInfo(element, isClassBased) {\n        if (element) {\n            var context = loadLContextFromNode(element);\n            var lView = context.lView;\n            var tData = lView[TVIEW].data;\n            var tNode = tData[context.nodeIndex];\n            if (isClassBased) {\n                return isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true).values :\n                    stylingMapToStringMap(tNode.classes);\n            }\n            else {\n                return isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView, false).values :\n                    stylingMapToStringMap(tNode.styles);\n            }\n        }\n        return {};\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            return goog.LOCALE;\n        }\n        return 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵloadViewQuery = ɵɵloadViewQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadContentQuery = ɵɵloadContentQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵload = ɵɵload;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}