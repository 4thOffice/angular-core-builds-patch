{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","USE_VALUE$2","EMPTY_ARRAY","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","render2CompileInjectable","injectableType","throwMultipleComponentError","tNode","tagName","throwMixedMultiProviderError","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$1","NULL_INJECTOR","getNullInjector","createInjector","defType","parent","additionalProviders","R3Injector","_this","records","Map","injectorDefTypes","Set","onDestroy","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","set","makeRecord","isRootInjector","has","enumerable","configurable","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","ngModule","defName","isDuplicate","add","imported","pop","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","input","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","slice","NULL_INJECTOR$1","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multiProvider","multiProviderMixError","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ɵChangeDetectorStatus","ViewEncapsulation","componentNeedsResolution","old","response","noSideEffects","EMPTY_OBJ","EMPTY_ARRAY$2","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","throwError","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","NATIVE","CONTAINER_HEADER_OFFSET","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","getNativeByIndex","lView","getNativeByTNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","tView","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","elementDepthCount","stylingContext","setCachedStylingContext","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","ɵɵenableBindings","ɵɵdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","getSelectedIndex","RendererStyleFlags3","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","DEFAULT_TEMPLATE_DIRECTIVE_INDEX","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","sanitizer","initialStyles","initialClasses","allocateOrUpdateDirectiveIntoContext","singlePropValuesIndex","styleSanitizer","directiveRegistry","limit","propValuesStartPosition","getStylingContextFromLView","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrsLength","accumulatedClasses","trim","accumulatedStyles","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","warn","sanitizeSrcset","srcset","split","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","ELEMENT_MARKER","COMMENT_MARKER","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","bindingIndex","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","attrValue","NO_CHANGE","enqueueHostInstruction","priority","instructionFn","instructionFnArgs","buffer","findNextInsertionIndex","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","updateClassMap","classesInput","updateStylingMap","updateStyleMap","stylesInput","entryIsClassBased","isMultiValueCacheHit","newValue","readCachedMapValue","propNames","playerBuilder","ClassAndStylePlayerBuilder","playerBuilderPosition","playerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","setPlayerBuilder","applyAll","getMultiClassesStartIndex","getMultiStylesStartIndex","patchStylingMapIntoContext","ctxStart","ctxEnd","cacheValue","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setContextPlayersDirty","updateClassProp","offset","forceOverride","updateSingleStylingValue","updateStyleProp","isClassBased","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","value_1","currPlayerIndex","newIndex","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","store","DashCase","removeStyle","removeProperty","className","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","initialValue","a","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","keyValues","dirs","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","registerMultiMapEntry","count","staticStyles","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","isSelectorInSelectorList","list","selectorListLoop","currentSelectorInList","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","selectedIndex","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentView","componentTView","checkView","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElementNS","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","executeTemplate","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","setNodeStylingTemplate","attrsStartIndex","stylingAttrsStartIndex","executeContentQueries","isContentQueryHost","createDirectivesAndLocals","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","propertyMetadataStartIndex","propertyMetadataEndIndex","initialInputs","tViews","projectionNext","projection","onElementCreationFns","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","privateName","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","lViewOrLContainer","markViewDirty","parent_2","scheduleTick","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","applyOnCreateInstructions","fns","ɵɵallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","markDirty","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","firstView","lContainer","head","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","detachView","removeIndex","viewToDetach","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","ɵɵcontainer","containerInternal","addTContainerToQueries","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","insertNodeBeforeViews","addNode","comment","createComment","ɵɵreference","getContextLView","ɵɵload","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵstyling","classBindingNames","styleBindingNames","directiveStylingIndex","getActiveDirectiveStylingIndex","initstyling","registerHostDirective","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","staticModeOnly","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","ɵɵstyleProp","styleIndex","valueToAdd","resolveStylePropValue","getStylingContext","ɵɵclassProp","classIndex","booleanOrNull","ɵɵstyleMap","styleInputVal","forceStylesAsString","ɵɵclassMap","classes","classInputVal","forceClassesAsString","ɵɵstylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","allowFlush","flushQueue","isContextDirty","flushPlayerBuilders","multiStartIndex","directiveIndex_1","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","getCachedStylingContext","ɵɵelementStart","initialStylesIndex","initialClassesIndex","getElementDepthCount","increaseElementDepthCount","currentQueries","clone","ɵɵelementEnd","decreaseElementDepthCount","getInitialStyleStringValue","initialStyleValues","styleString","ɵɵelement","ɵɵelementAttribute","strValue","ɵɵelementHostAttrs","hostElementIndex","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","cleanupFn","listen","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","ɵɵprojection","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵbind","ɵɵelementProperty","ɵɵcomponentHostSyntheticProperty","ɵɵinterpolationV","ɵɵinterpolation1","v0","ɵɵinterpolation2","i0","v1","ɵɵinterpolation3","i1","v2","ɵɵinterpolation4","i2","v3","ɵɵinterpolation5","i3","v4","ɵɵinterpolation6","i4","v5","ɵɵinterpolation7","i5","v6","ɵɵinterpolation8","i6","v7","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","interpolatedValue","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵselect","ɵɵtext","textNative","ɵɵtextBinding","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","componentFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","componentRef","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","test","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","addAllToArray","items","flatten","mapFn","ngI18nClosureMode","goog","getMsg","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","cursor","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","shift","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","ɵɵi18nExp","expression","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","insertBeforeContainer","addMatch","matchingValue","insertBeforeViewMatches","createPredicate","_valuesTree","_static","storeCleanupWithContext","ɵɵqueryRefresh","queryListImpl","ɵɵstaticViewQuery","ɵɵviewQuery","ɵɵloadViewQuery","ɵɵcontentQuery","contentQuery","tViewContentQueries","ɵɵstaticContentQuery","ɵɵloadContentQuery","ɵɵtemplateRefExtractor","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","registerNgModuleType","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","angularCoreEnv","ɵregisterNgModuleType","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","_loop_1","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNodeChildrenInContainerR3","nextLView","childView","debugNode","getDebugNode","_nativeNodeToDebugNode","getDebugNode__PRE_R3__","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS$1","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_f","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_b","ɵangular_packages_core_core_a","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bp","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bq","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","viewAmount","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-rc.0+123.sha-3aff79c.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$4 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$4);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            if (parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n                parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n                    parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NULL_INJECTOR$1 = Injector.NULL;\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$5 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$5, Query);\n    var ɵ1$1 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$1, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            stylingProp: 0,\n            stylingPropCacheMiss: 0,\n            stylingApply: 0,\n            stylingApplyCacheMiss: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        _global['ngDevMode'] = newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$2 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$2,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ɵɵdefineInjectable({ factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$2,\n            declarations: def.declarations || EMPTY_ARRAY$2,\n            imports: def.imports || EMPTY_ARRAY$2,\n            exports: def.exports || EMPTY_ARRAY$2,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY$2;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY$2;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY$2;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'function')\n            return value.name || value;\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type;\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, QUERIES and T_HOST are indices 3, 4, 5 and 6.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 7;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    var stylingContext = null;\n    /**\n     * Gets the most recent styling context value.\n     *\n     * Note that only one styling context is stored at a given time.\n     */\n    function getCachedStylingContext() {\n        return stylingContext;\n    }\n    /**\n     * Sets the most recent styling context value.\n     *\n     * Note that only one styling context is stored at a given time.\n     *\n     * @param context The styling context value that will be stored\n     */\n    function setCachedStylingContext(context) {\n        stylingContext = context;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex == null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        setCachedStylingContext(null);\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // remove the styling context from the cache\n        // because we are now on a different element\n        setCachedStylingContext(null);\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements no `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$6 = function (hostElement, rendererType) { return document; };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$6\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$2;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The default directive styling index value for template-based bindings.\n     *\n     * All host-level bindings (e.g. `hostStyleProp` and `hostStyleMap`) are\n     * assigned a directive styling index value based on the current directive\n     * uniqueId and the directive super-class inheritance depth. But for template\n     * bindings they always have the same directive styling index value.\n     */\n    var DEFAULT_TEMPLATE_DIRECTIVE_INDEX = 0;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateOrUpdateDirectiveIntoContext(context, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropValuesIndex, styleSanitizer) {\n        if (singlePropValuesIndex === void 0) { singlePropValuesIndex = -1; }\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        var limit = index + 2 /* Size */;\n        for (var i = directiveRegistry.length; i < limit; i += 2 /* Size */) {\n            // -1 is used to signal that the directive has been allocated, but\n            // no actual style or class bindings have been registered yet...\n            directiveRegistry.push(-1, null);\n        }\n        var propValuesStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        if (singlePropValuesIndex >= 0 && directiveRegistry[propValuesStartPosition] === -1) {\n            directiveRegistry[propValuesStartPosition] = singlePropValuesIndex;\n            directiveRegistry[index + 1 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 10 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `styling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContextFromLView(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContextFromLView(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[9 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[9 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([\\w\\W]*)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return ɵɵsanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /*\n     * This file contains the logic to defer all hostBindings-related styling code to run\n     * at a later point, instead of immediately (as is the case with how template-level\n     * styling instructions are run).\n     *\n     * Certain styling instructions, present within directives, components and sub-classed\n     * directives, are evaluated at different points (depending on priority) and will therefore\n     * not be applied to the styling context of an element immediately. They are instead\n     * designed to be applied just before styling is applied to an element.\n     *\n     * (The priority for when certain host-related styling operations are executed is discussed\n     * more within `interfaces/styling.ts`.)\n     */\n    function registerHostDirective(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (!buffer) {\n            buffer = context[8 /* HostInstructionsQueue */] = [DEFAULT_TEMPLATE_DIRECTIVE_INDEX];\n        }\n        buffer[0 /* LastRegisteredDirectiveIndexPosition */] = directiveIndex;\n    }\n    /**\n     * Queues a styling instruction to be run just before `renderStyling()` is executed.\n     */\n    function enqueueHostInstruction(context, priority, instructionFn, instructionFnArgs) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        var index = findNextInsertionIndex(buffer, priority);\n        buffer.splice(index, 0, priority, instructionFn, instructionFnArgs);\n    }\n    /**\n     * Figures out where exactly to to insert the next host instruction queue entry.\n     */\n    function findNextInsertionIndex(buffer, priority) {\n        for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n            var p = buffer[i + 0 /* DirectiveIndexOffset */];\n            if (p > priority) {\n                return i;\n            }\n        }\n        return buffer.length;\n    }\n    /**\n     * Iterates through the host instructions queue (if present within the provided\n     * context) and executes each queued instruction entry.\n     */\n    function flushQueue(context) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n                var fn = buffer[i + 1 /* InstructionFnOffset */];\n                var args = buffer[i + 2 /* ParamsOffset */];\n                fn.apply(this, args);\n            }\n            buffer.length = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Determines whether or not to allow the host instructions queue to be flushed or not.\n     *\n     * Because the hostBindings function code is unaware of the presence of other host bindings\n     * (as well as the template function) then styling is evaluated multiple times per element.\n     * To prevent style and class values from being applied to the element multiple times, a\n     * flush is only allowed when the last directive (the directive that was registered into\n     * the styling context) attempts to render its styling.\n     */\n    function allowFlush(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            return buffer[0 /* LastRegisteredDirectiveIndexPosition */] ===\n                directiveIndex;\n        }\n        return true;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveIndex);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveIndex) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex);\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveIndex, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var isNewDirective = findOrPatchDirectiveIntoRegistry(context, directiveIndex, false, styleSanitizer);\n        if (!isNewDirective) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 10 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `styleProp`\n        // and the `classProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveIndex, staticModeOnly, styleSanitizer) {\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        var singlePropStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        // this means that the directive has already been registered into the registry\n        if (index < directiveRegistry.length &&\n            directiveRegistry[singlePropStartPosition] >= 0)\n            return false;\n        var singlePropsStartIndex = staticModeOnly ? -1 : context[5 /* SinglePropOffsetPositions */].length;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropsStartIndex, styleSanitizer);\n        return true;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi class values to the context.\n     *\n     * This function will iterate over the provided `classesInput` values and\n     * insert/update or remove them from the context at exactly the right spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngClass` and `[class]`\n     * both update the `foo` className value at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. (This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateClassMap(context, classesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateStylingMap(context, classesInput, true, directiveIndex);\n    }\n    /**\n     * Registers the provided multi style values to the context.\n     *\n     * This function will iterate over the provided `stylesInput` values and\n     * insert/update or remove them from the context at exactly the right spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. (This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStyleMap(context, stylesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateStylingMap(context, stylesInput, false, directiveIndex);\n    }\n    function updateStylingMap(context, input, entryIsClassBased, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        ngDevMode && (entryIsClassBased ? ngDevMode.classMap++ : ngDevMode.styleMap++);\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, input))\n            return;\n        input =\n            input === NO_CHANGE ? readCachedMapValue(context, entryIsClassBased, directiveIndex) : input;\n        var element = context[0 /* ElementPosition */];\n        var playerBuilder = input instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(input, element, entryIsClassBased ? 1 /* Class */ : 2 /* Style */) :\n            null;\n        var rawValue = playerBuilder ? input.value : input;\n        // the position is always the same, but whether the player builder gets set\n        // at all (depending if its set) will be reflected in the index value below...\n        var playerBuilderPosition = entryIsClassBased ? 1 /* ClassMapPlayerBuilderPosition */ :\n            3 /* StyleMapPlayerBuilderPosition */;\n        var playerBuilderIndex = playerBuilder ? playerBuilderPosition : 0;\n        var playerBuildersAreDirty = false;\n        if (hasPlayerBuilderChanged(context, playerBuilder, playerBuilderPosition)) {\n            setPlayerBuilder(context, playerBuilder, playerBuilderPosition);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        var startIndex;\n        var endIndex;\n        var propNames;\n        var applyAll = false;\n        if (entryIsClassBased) {\n            if (typeof rawValue == 'string') {\n                propNames = rawValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a className string implies that all those classes are added\n                applyAll = true;\n            }\n            else {\n                propNames = rawValue ? Object.keys(rawValue) : EMPTY_ARRAY$2;\n            }\n            startIndex = getMultiClassesStartIndex(context);\n            endIndex = context.length;\n        }\n        else {\n            startIndex = getMultiStylesStartIndex(context);\n            endIndex = getMultiClassesStartIndex(context);\n            propNames = rawValue ? Object.keys(rawValue) : EMPTY_ARRAY$2;\n        }\n        var values = (rawValue || EMPTY_OBJ);\n        patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, startIndex, endIndex, propNames, applyAll || values, input, entryIsClassBased);\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n        ngDevMode && (entryIsClassBased ? ngDevMode.classMapCacheMiss++ : ngDevMode.styleMapCacheMiss++);\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, true, directiveIndex, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, false, directiveIndex, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveIndex, forceOverride) {\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        ngDevMode && ngDevMode.stylingProp++;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n            ngDevMode && ngDevMode.stylingPropCacheMiss++;\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var totalPlayersQueued = 0;\n        ngDevMode && ngDevMode.stylingApply++;\n        // this prevents multiple attempts to render style/class values on\n        // the same element...\n        if (allowFlush(context, directiveIndex)) {\n            // all styling instructions present within any hostBindings functions\n            // do not update the context immediately when called. They are instead\n            // queued up and applied to the context right at this point. Why? This\n            // is because Angular evaluates component/directive and directive\n            // sub-class code at different points and it's important that the\n            // styling values are applied to the context in the right order\n            // (see `interfaces/styling.ts` for more information).\n            flushQueue(context);\n            if (isContextDirty(context)) {\n                ngDevMode && ngDevMode.stylingApplyCacheMiss++;\n                // this is here to prevent things like <ng-container [style] [class]>...</ng-container>\n                // or if there are any host style or class bindings present in a directive set on\n                // a container node\n                var native = context[0 /* ElementPosition */];\n                var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n                var multiStartIndex = getMultiStylesStartIndex(context);\n                for (var i = 10 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                    // there is no point in rendering styles that have not changed on screen\n                    if (isDirty(context, i)) {\n                        var flag = getPointers(context, i);\n                        var directiveIndex_1 = getDirectiveIndexFromEntry(context, i);\n                        var prop = getProp(context, i);\n                        var value = getValue(context, i);\n                        var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex_1) : null;\n                        var playerBuilder = getPlayerBuilder(context, i);\n                        var isClassBased = flag & 2 /* Class */ ? true : false;\n                        var isInSingleRegion = i < multiStartIndex;\n                        var valueToApply = value;\n                        // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                        // this check implies that a single value was removed and we\n                        // should now defer to a multi value and use that (if set).\n                        if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                            // single values ALWAYS have a reference to a multi index\n                            var multiIndex = getMultiOrSingleIndex(flag);\n                            valueToApply = getValue(context, multiIndex);\n                        }\n                        // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                        // the initial value will always be a string or null,\n                        // therefore we can safely adopt it in case there's nothing else\n                        // note that this should always be a falsy check since `false` is used\n                        // for both class and style comparisons (styles can't be false and false\n                        // classes are turned off and should therefore defer to their initial values)\n                        // Note that we ignore class-based deferals because otherwise a class can never\n                        // be removed in the case that it exists as true in the initial classes list...\n                        if (!valueExists(valueToApply, isClassBased)) {\n                            valueToApply = getInitialValue(context, flag);\n                        }\n                        // if the first render is true then we do not want to start applying falsy\n                        // values to the DOM element's styling. Otherwise then we know there has\n                        // been a change and even if it's falsy then it's removing something that\n                        // was truthy before.\n                        var doApplyValue = renderer && (isFirstRender ? valueToApply : true);\n                        if (doApplyValue) {\n                            if (isClassBased) {\n                                setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                            }\n                            else {\n                                setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                            }\n                        }\n                        setDirty(context, i, false);\n                    }\n                }\n                if (flushPlayerBuilders) {\n                    var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                    var playerContext = getPlayerContext(context);\n                    var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                    for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                        var builder = playerContext[i];\n                        var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                        var oldPlayer = playerContext[playerInsertionIndex];\n                        if (builder) {\n                            var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                            if (player !== undefined) {\n                                if (player != null) {\n                                    var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                    wasQueued && totalPlayersQueued++;\n                                }\n                                if (oldPlayer) {\n                                    oldPlayer.destroy();\n                                }\n                            }\n                        }\n                        else if (oldPlayer) {\n                            // the player builder has been removed ... therefore we should delete the associated\n                            // player\n                            oldPlayer.destroy();\n                        }\n                    }\n                    setContextPlayersDirty(context, false);\n                }\n                setContextDirty(context, false);\n            }\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 10 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[9 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[9 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[9 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 2 /* Size */) +\n            0 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 2 /* Size */ +\n            1 /* StyleSanitizerOffset */] ||\n            dirs[1 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n    function assertValidDirectiveIndex(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        if (index >= dirs.length ||\n            dirs[index + 0 /* SinglePropValuesIndexOffset */] === -1) {\n            throw new Error('The provided directive is not registered with the styling context');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the parsed ngProjectAs selector from the node's attributes.\n     * If present, it will check whether the ngProjectAs selector matches any of the projection\n     * selectors.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                executeTemplate(tView.template, getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                templateFn && executeTemplate(templateFn, 1 /* Create */, context);\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && executeTemplate(templateFn, 2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    function executeTemplate(templateFn, rf, context) {\n        ɵɵnamespaceHTML();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Appropriately sets `stylingTemplate` on a TNode\n     *\n     * Does not apply styles to DOM nodes\n     *\n     * @param tNode The node whose `stylingTemplate` to set\n     * @param attrs The attribute array source to set the attributes from\n     * @param attrsStartIndex Optional start index to start processing the `attrs` from\n     */\n    function setNodeStylingTemplate(tView, tNode, attrs, attrsStartIndex) {\n        if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, attrsStartIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n            }\n        }\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n    * Mapping between attributes names that don't correspond to their element property names.\n    */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            tNode,\n            native,\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current[ACTIVE_INDEX] === -1 && isLContainer(current)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < current.length; i++) {\n                    var dynamicViewData = current[i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(hostView) || isCreationMode(lView)) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            executeTemplate(templateFn, getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                    var firstView = nodeOrContainer[CONTAINER_HEADER_OFFSET];\n                    if (firstView) {\n                        currentView = firstView;\n                        nextTNode = currentView[TVIEW].node;\n                        // When the walker enters a container, then the beforeNode has to become the local native\n                        // comment node.\n                        beforeNode = nodeOrContainer[NATIVE];\n                    }\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                var firstView = lContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView) {\n                    currentView = firstView;\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                if (tNode.flags & 2 /* isProjected */) {\n                    nextTNode = tNode.projectionNext;\n                }\n                else if (tNode.type === 4 /* ElementContainer */) {\n                    nextTNode = tNode.child || tNode.next;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or find a lContainer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            if (isLContainer(currentView)) {\n                                tNode = currentView[T_HOST];\n                                currentView = currentView[PARENT];\n                                beforeNode = currentView[tNode.index][NATIVE];\n                                break;\n                            }\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.type === 4 /* ElementContainer */ && tNode.child || tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            lContainer.splice(CONTAINER_HEADER_OFFSET + index, 0, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            lContainer.splice(CONTAINER_HEADER_OFFSET + removeIndex, 1);\n            addRemoveViewFromContainer(viewToDetach, false);\n            if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n                !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n                viewToDetach[QUERIES].removeView();\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, lContainer) {\n        var containerNative = lContainer[NATIVE];\n        if (index + 1 < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            var view = lContainer[CONTAINER_HEADER_OFFSET + index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n    * Reporting a TContainer node queries is a 2-step process as we need to:\n    * - check if the container node itself is matching (query might match a <ng-template> node);\n    * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n    * container.\n    *\n    * Those 2 operations need to happen in the specific order (match the container node itself, then\n    * prepare space for nodes from views).\n    */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            var lContainer = lView[tContainerNode.index];\n            if (lContainer[QUERIES]) {\n                // Query container should only exist if it was created through a dynamic view\n                // in a directive constructor. In this case, we must splice the template\n                // matches in before the view matches to ensure query results in embedded views\n                // don't clobber query results on the template node itself.\n                queries.insertNodeBeforeViews(tContainerNode);\n            }\n            else {\n                queries.addNode(tContainerNode);\n                lContainer[QUERIES] = queries.container();\n            }\n        }\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /*\n     * The contents of this file include the instructions for all styling-related\n     * operations in Angular.\n     *\n     * The instructions present in this file are:\n     *\n     * Template level styling instructions:\n     * - styling\n     * - styleMap\n     * - classMap\n     * - styleProp\n     * - classProp\n     * - stylingApply\n     */\n    /**\n     * Allocates style and class binding properties on the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note that this is only used\n     * for binding values (see `elementStart` to learn how to assign static styling\n     * values to an element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `classProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `styleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *\n     * Note that this will allocate the provided style/class bindings to the host element if\n     * this function is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        if (directiveStylingIndex) {\n            // despite the binding being applied in a queue (below), the allocation\n            // of the directive into the context happens right away. The reason for\n            // this is to retain the ordering of the directives (which is important\n            // for the prioritization of bindings).\n            allocateOrUpdateDirectiveIntoContext(tNode.stylingTemplate, directiveStylingIndex);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () {\n                initstyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex);\n                registerHostDirective(tNode.stylingTemplate, directiveStylingIndex);\n            });\n        }\n        else {\n            // calling the function below ensures that the template's binding values\n            // are applied as the first set of bindings into the context. If any other\n            // styling bindings are set on the same element (by directives and/or\n            // components) then they will be applied at the end of the `elementEnd`\n            // instruction (because directives are created first before styling is\n            // executed for a new element).\n            initstyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        }\n    }\n    function initstyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex) {\n        updateContextWithBindings(tNode.stylingTemplate, directiveStylingIndex, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param value New value to write (falsy to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(styleIndex, value, suffix, forceOverride) {\n        var index = getSelectedIndex();\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        var stylingContext = getStylingContext(index, getLView());\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, styleIndex, valueToAdd, directiveStylingIndex, forceOverride];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleProp, args);\n        }\n        else {\n            updateStyleProp(stylingContext, styleIndex, valueToAdd, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n        }\n    }\n    function resolveStylePropValue(value, suffix) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        return valueToAdd;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `styling` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the styling priority structure.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(classIndex, value, forceOverride) {\n        var index = getSelectedIndex();\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var stylingContext = getStylingContext(index, getLView());\n        if (directiveStylingIndex) {\n            var args = [stylingContext, classIndex, input, directiveStylingIndex, forceOverride];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassProp, args);\n        }\n        else {\n            updateClassProp(stylingContext, classIndex, input, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n        }\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(index, lView);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, styles, directiveStylingIndex];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleMap, args);\n        }\n        else {\n            var tNode = getTNode(index, lView);\n            // inputs are only evaluated from a template binding into a directive, therefore,\n            // there should not be a situation where a directive host bindings function\n            // evaluates the inputs (this should only happen in the template function)\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n            updateStyleMap(stylingContext, styles);\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(index, lView);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, classes, directiveStylingIndex];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassMap, args);\n        }\n        else {\n            var tNode = getTNode(index, lView);\n            // inputs are only evaluated from a template binding into a directive, therefore,\n            // there should not be a situation where a directive host bindings function\n            // evaluates the inputs (this should only happen in the template function)\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            updateClassMap(stylingContext, classes);\n        }\n    }\n    /**\n     * Apply all style and class binding values to the element.\n     *\n     * This instruction is meant to be run after `styleMap`, `classMap`,\n     * `styleProp` or `classProp` instructions have been run and will\n     * only apply styling to the element if any styling bindings have been updated.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var index = getSelectedIndex();\n        var directiveStylingIndex = getActiveDirectiveStylingIndex() || DEFAULT_TEMPLATE_DIRECTIVE_INDEX;\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        // if a non-element value is being processed then we can't render values\n        // on the element at all therefore by setting the renderer to null then\n        // the styling apply code knows not to actually apply the values...\n        var renderer = tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var stylingContext = getStylingContext(index, lView);\n        var totalPlayersQueued = renderStyling(stylingContext, renderer, lView, isFirstRender, null, null, directiveStylingIndex);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n        // because select(n) may not run between every instruction, the cached styling\n        // context may not get cleared between elements. The reason for this is because\n        // styling bindings (like `[style]` and `[class]`) are not recognized as property\n        // bindings by default so a select(n) instruction is not generated. To ensure the\n        // context is loaded correctly for the next element the cache below is pre-emptively\n        // cleared because there is no code in Angular that applies more styling code after a\n        // styling flush has occurred. Note that this will be fixed once FW-1254 lands.\n        setCachedStylingContext(null);\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    function getStylingContext(index, lView) {\n        var context = getCachedStylingContext();\n        if (!context) {\n            context = getStylingContextFromLView(index + HEADER_OFFSET, lView);\n            setCachedStylingContext(context);\n        }\n        else if (ngDevMode) {\n            var actualContext = getStylingContextFromLView(index + HEADER_OFFSET, lView);\n            assertEqual(context, actualContext, 'The cached styling context is invalid');\n        }\n        return context;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        var renderer = lView[RENDERER];\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        if (attrs) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            setNodeStylingTemplate(tView, tNode, attrs, lastAttrIndex);\n            if (tNode.stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, tNode.stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, tNode.stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        var stylingContext = null;\n        if (hasClassInput(previousOrParentTNode)) {\n            stylingContext = getStylingContextFromLView(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            stylingContext =\n                stylingContext || getStylingContextFromLView(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                    element.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element.setAttributeNS(namespace, name, strValue) :\n                        element.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                var directiveStylingIndex = getActiveDirectiveStylingIndex();\n                if (tNode.stylingTemplate) {\n                    patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n                else {\n                    tNode.stylingTemplate =\n                        initializeStaticContext(attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        if (attrs) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            setNodeStylingTemplate(tView, tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(selectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingProjectionSelectorIndex(componentChild, selectors) : 0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer, nativeOnly) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var bindReconciledValue = ɵɵbind(value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, nativeOnly);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     *\n     * @codeGenApi\n     */\n    function ɵɵbind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n    * **TODO: Remove this function after `property` is in use**\n    * Update a property on an element.\n    *\n    * If the property name also exists as an input property on one of the element's directives,\n    * the component property will be set instead of the element property. This check must\n    * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n    *\n    * @param index The index of the element to update in the data array\n    * @param propName Name of property. Because it is going to DOM, this is not subject to\n    *        renaming as part of minification.\n    * @param value New value to write.\n    * @param sanitizer An optional function used to sanitize the value.\n    * @param nativeOnly Whether or not we should only set native properties and skip input check\n    * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n    */\n    function ɵɵelementProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n        }\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n     */\n    function ɵɵcomponentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /////////////////////////////////////////////////////////////////////\n    /// NEW INSTRUCTIONS\n    /////////////////////////////////////////////////////////////////////\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation1(prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation2(prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolationV(values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element, renderStringify(value)) :\n                element.textContent = renderStringify(value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContextFromLView(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n            setActiveHostElement(null);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$2) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var currentQueries = this._declarationParentView[QUERIES];\n                    // Query container may be missing if this view was created in a directive\n                    // constructor. Create it now to avoid losing results in embedded views.\n                    if (currentQueries && this._hostLContainer[QUERIES] == null) {\n                        this._hostLContainer[QUERIES] = currentQueries.container();\n                    }\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () {\n                        // Note that if there are no views, the container\n                        // length will be smaller than the header offset.\n                        var viewAmount = this._lContainer.length - CONTAINER_HEADER_OFFSET;\n                        return viewAmount > 0 ? viewAmount : 0;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-rc.0+123.sha-3aff79c.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(ɵɵinject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = (isInternalRootView || isIsolated) ?\n                createRootContext() :\n                rootViewInjector.get(ROOT_CONTEXT);\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        _global['ngI18nClosureMode'] =\n            // TODO(FW-1250): validate that this actually, you know, works.\n            typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list, mapFn) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(mapFn ? mapFn(item) : item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        ɵɵelementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    ɵɵelementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    ɵɵtextBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = ɵɵload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        ɵɵelementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @publicApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (placeholders === void 0) { placeholders = {}; }\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        return Object.keys(placeholders).length ?\n            input.replace(LOCALIZE_PH_REGEXP, function (match, key) { return placeholders[key] || ''; }) :\n            input;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode, false);\n            add(this.shallow, tNode, false);\n        };\n        LQueries_.prototype.insertNodeBeforeViews = function (tNode) {\n            add(this.deep, tNode, true);\n            add(this.shallow, tNode, true);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    /**\n     * Add query matches for a given node.\n     *\n     * @param query The first query in the linked list\n     * @param tNode The TNode to match against queries\n     * @param insertBeforeContainer Whether or not we should add matches before the last\n     * container array. This mode is necessary if the query container had to be created\n     * out of order (e.g. a view was created in a constructor)\n     */\n    function add(query, tNode, insertBeforeContainer) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result, insertBeforeContainer);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result, insertBeforeContainer);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue, insertBeforeViewMatches) {\n        // Views created in constructors may have their container values created too early. In this case,\n        // ensure template node results are spliced before container results. Otherwise, results inside\n        // embedded views will appear before results on parent template nodes when flattened.\n        insertBeforeViewMatches ? query.values.splice(-1, 0, matchingValue) :\n            query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = ɵɵviewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n     * Loads current View Query and moves the pointer/index to the next View Query in LView.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return ɵɵload(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = ɵɵcontentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵelementAttribute': ɵɵelementAttribute,\n        'ɵɵbind': ɵɵbind,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵinterpolation1': ɵɵinterpolation1,\n        'ɵɵinterpolation2': ɵɵinterpolation2,\n        'ɵɵinterpolation3': ɵɵinterpolation3,\n        'ɵɵinterpolation4': ɵɵinterpolation4,\n        'ɵɵinterpolation5': ɵɵinterpolation5,\n        'ɵɵinterpolation6': ɵɵinterpolation6,\n        'ɵɵinterpolation7': ɵɵinterpolation7,\n        'ɵɵinterpolation8': ɵɵinterpolation8,\n        'ɵɵinterpolationV': ɵɵinterpolationV,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵload': ɵɵload,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵelementProperty': ɵɵelementProperty,\n        'ɵɵcomponentHostSyntheticProperty': ɵɵcomponentHostSyntheticProperty,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadViewQuery': ɵɵloadViewQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵloadContentQuery': ɵɵloadContentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n        'ɵregisterNgModuleType': registerNgModuleType,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports, unwrapModuleWithProvidersImports).forEach(verifySemanticsOfNgModuleDef);\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports), resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(verifyDeclarationIsUnique);\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.template.ngPrivateData = undefined;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$2, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$2,\n            outputs: metadata.outputs || EMPTY_ARRAY$2,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$7 = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$2 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$7, undefined, undefined, ɵ1$2);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$8 = function (ngModule) { return ngModule; }, ɵ1$3 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$8, undefined, undefined, ɵ1$3);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContextFromLView(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContextFromLView(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * Walk the TNode tree to find matches for the predicate.\n     *\n     * @param parentElement the element from which the walk is started\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(getNativeByTNode(tNode, lView), predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild)\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            else {\n                // Otherwise, its children have to be processed.\n                if (tNode.child)\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode = head_1_1.value;\n                        _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                if (head) {\n                    var nextLView = componentView[PARENT];\n                    var nextTNode_1 = nextLView[TVIEW].data[head.index];\n                    _queryNodeChildrenR3(nextTNode_1, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n        }\n        else {\n            // Case 4: the TNode is a view.\n            if (tNode.child) {\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        // To determine the next node to be processed, we need to use the next or the projectionNext link,\n        // depending on whether the current node has been projected.\n        var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n        if (nextTNode) {\n            _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (debugNode && (elementsOnly ? debugNode instanceof DebugElement__POST_R3__ : true) &&\n                predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_b = NullInjector;\n    exports.ɵangular_packages_core_core_a = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_c = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_d = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bp = getRootContext;\n    exports.ɵangular_packages_core_core_bo = loadInternal;\n    exports.ɵangular_packages_core_core_g = createElementRef;\n    exports.ɵangular_packages_core_core_h = createTemplateRef;\n    exports.ɵangular_packages_core_core_i = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bn = noSideEffects;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bq = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵbind = ɵɵbind;\n    exports.ɵɵinterpolation1 = ɵɵinterpolation1;\n    exports.ɵɵinterpolation2 = ɵɵinterpolation2;\n    exports.ɵɵinterpolation3 = ɵɵinterpolation3;\n    exports.ɵɵinterpolation4 = ɵɵinterpolation4;\n    exports.ɵɵinterpolation5 = ɵɵinterpolation5;\n    exports.ɵɵinterpolation6 = ɵɵinterpolation6;\n    exports.ɵɵinterpolation7 = ɵɵinterpolation7;\n    exports.ɵɵinterpolation8 = ɵɵinterpolation8;\n    exports.ɵɵinterpolationV = ɵɵinterpolationV;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵloadViewQuery = ɵɵloadViewQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadContentQuery = ɵɵloadContentQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementProperty = ɵɵelementProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵcomponentHostSyntheticProperty = ɵɵcomponentHostSyntheticProperty;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementAttribute = ɵɵelementAttribute;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵload = ɵɵload;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}