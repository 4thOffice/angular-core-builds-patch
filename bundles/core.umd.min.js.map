{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","flags","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","R3ResolvedDependencyType","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","declarationMode","rootTNode","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","elementDepthCount","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","directiveStart","end","directiveEnd","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","allHooks","hooksToCall","callHooks","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","hostTElementNode","getHostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","NodeInjector","_tNode","_lView","getFactoryOf","typeAny","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","slice","getComponent","element","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","directive","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","removeListeners","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","NG_TEMPLATE_SELECTOR","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","sanitizer","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attr","patchInitialStylingValue","initialStyling","prop","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","input","isClassBased","directiveRef","directiveIndex","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","setProperty","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","renderComponentOrTemplate","templateFn","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","eventName","listenerFn","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","subscribe","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","element_1","removeAttribute","strValue","elementProperty","nativeOnly","dataValue","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","publicToDeclaredInputs","publicToMinifiedInputs","proto","declaredKey_1","privateMinKey_1","originalProperty","checkProto","setter_1","set","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","noop","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","_this","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","Function","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","enumerable","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","NgModuleFactoryLoader","modules","assertNotExisting","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","moduleQueue","flushingModuleQueue","isResolvedDeclaration","declaration","every","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$1","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","setScopeOnDeclaredComponents","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","flushModuleScopingQueueAsMuchAsPossible","hasSelectorScope","compileDirective","facade","typeArgumentCount","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","classList","styleName","eStyles","style","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_s","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_r","ɵangular_packages_core_core_g","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_m","ɵangular_packages_core_core_l","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_k","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.2.0-rc.0+46.sha-1e6c9be\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 128 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @param declarationMode indicates whether DECLARATION_VIEW or PARENT should be used to climb the\n     * tree.\n     * @returns The host node\n     */\n    function findComponentView(lView, declarationMode) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[declarationMode ? DECLARATION_VIEW : PARENT], declarationMode ? 'lView.declarationView' : 'lView.parent');\n            lView = lView[declarationMode ? DECLARATION_VIEW : PARENT];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    /**\n     * Return the host TElementNode of the starting LView\n     * @param lView the starting LView.\n     */\n    function getHostTElementNode(lView) {\n        return findComponentView(lView, true)[HOST_NODE];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n            currentView[FLAGS] &= ~32 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(currentView, allHooks, checkHooks, checkNoChangesMode) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        else {\n            executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\n            lView[FLAGS] |= 32 /* RunInit */;\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lView);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lView);\n            var parentLocation = NO_PARENT_INJECTOR;\n            var hostTElementNode = flags & exports.InjectFlags.Host ? getHostTElementNode(lView) : null;\n            // If we should skip this injector, or if there is no injector on this node, start by searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                    lView[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, false)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lView[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lView[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                    bloomHasToken(bloomHash, injectorIndex, lView)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 128 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 16 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~16 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 64 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idx = tCleanup[i + 1];\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var native = readElementValue(lView[idx]);\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        native.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(lView) {\n        var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(lView, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 1 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            Array.isArray(value[2 /* InitialStyleValuesPosition */]);\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = 0; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\n            2 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 4 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 128 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                setFirstTemplatePass(false);\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (isCreationMode(hostView)) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i++];\n            if (typeof attrName == 'number') {\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i++];\n                    var attrName_1 = attrs[i++];\n                    var attrVal = attrs[i++];\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                }\n                else {\n                    // All other `AttributeMarker`s are ignored here.\n                    break;\n                }\n            }\n            else {\n                /// attrName is string;\n                var attrVal = attrs[i++];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            tCleanup && tCleanup.push(eventName, tNode.index, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 2) {\n                    ngDevMode && assertDataInRange(lView, props[i]);\n                    var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 2) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 1]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static styling values to a host element.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array containing class and styling information. The values must be marked with\n     *              `AttributeMarker`.\n     *\n     *        ```\n     *        var attrs = [AttributeMarker.Classes, 'foo', 'bar',\n     *                     AttributeMarker.Styles, 'width', '100px', 'height, '200px']\n     *        elementHostAttrs(directive, attrs);\n     *        ```\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 2 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 3 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], tNode, lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 4 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 4 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 8 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView[FLAGS] |= 8 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 8 /* Dirty */;\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n        var rootContext = lView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        if (isCreationMode(view)) {\n            checkView(view, context); // creation mode pass\n        }\n        checkView(view, context); // update mode pass\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, hostView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, view, component) {\n        if (viewQuery && isCreationMode(view)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, view, component) {\n        if (viewQuery && !isCreationMode(view)) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n            4 /* CheckAlways */ | 128 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~1 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var publicToDeclaredInputs = definition.declaredInputs;\n        var publicToMinifiedInputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (publicName) {\n            if (publicToDeclaredInputs.hasOwnProperty(publicName)) {\n                var minifiedKey = publicToMinifiedInputs[publicName];\n                var declaredKey_1 = publicToDeclaredInputs[publicName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredKey_1];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredKey_1] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var publicName in publicToDeclaredInputs) {\n            _loop_1(publicName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR$1 = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.2.0-rc.0+46.sha-1e6c9be');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n                4 /* CheckAlways */ | 128 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            getLView()[getBindingRoot()] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing && existing.moduleType);\n        modules.set(id, factory);\n    }\n    function assertNotExisting(id, type) {\n        if (type) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$1(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringify$1(type) + \"' declared by the module '\" + stringify$1(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringify$1(type) + \" from \" + stringify$1(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringify$1).sort();\n                errors.push(\"Type \" + stringify$1(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringify$1(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringify$1(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringify$1(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$1(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify$1(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify$1(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringify$1(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_s = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_p = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_r = _localeFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_n = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_o = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_m = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_l = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_c = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_k = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bi = NG_INJECTABLE_DEF;\n    exports.ɵangular_packages_core_core_bc = getLView;\n    exports.ɵangular_packages_core_core_bd = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_be = nextContextImpl;\n    exports.ɵangular_packages_core_core_bh = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bl = loadInternal;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = createViewRef;\n    exports.ɵangular_packages_core_core_a = makeParamDecorator;\n    exports.ɵangular_packages_core_core_b = makePropDecorator;\n    exports.ɵangular_packages_core_core_bj = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}