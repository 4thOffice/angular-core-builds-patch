{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponent","isComponentDef","isRootView","elementDepthCount","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","_stylingState","_stateStorage","Map","_stylingElement","STYLING_INDEX_START_VALUE","BIT_MASK_START_VALUE","getStylingState","element","readFromMap","classesBitMask","classesIndex","stylesBitMask","stylesIndex","resetStylingState","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","view","getIsParent","setIsNotParent","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","getSelectedIndex","_currentSanitizer","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isDifferent","a","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","Function","RendererStyleFlags3","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","updateLastDirectiveIndex","lastDirectiveIndex","markContextToPersistState","setConfig","getConfig","getProp","getPropConfig","isSanitizationRequired","getGuardMask","setGuardMask","maskValue","config","getValuesCount","getBindingValue","offset","getDefaultValue","allowStylingFlush","isContextLocked","stateIsPersisted","getPropValuesStartPosition","hasValueChanged","compareValueA","compareValueB","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","setMapValue","getMapValue","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","ANIMATION_PROP_PREFIX","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","prop","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","DEFAULT_GUARD_MASK_VALUE","STYLING_INDEX_FOR_MAP_BINDING","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","deferredBindingQueue","updateClassBinding","bindingIndex","deferRegistration","forceUpdate","isMapBased","state","updateBindingData","updateStyleBinding","counterIndex","sanitizationRequired","deferBindingRegistration","flushDeferredBindings","registerBinding","changed","countId","bindingValue","registered","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","firstValueIndex","lastValueIndex","maybeApplyStyling","allowFlush","bitMask","styleSetter","styleSanitizer","lockAndFinalizeContext","initialValues","updateInitialStylingOnContext","initialStyling","lockContext","contextHasUpdates","applyStyling","bindingData","bitMaskValue","applyStylingFn","normalizeBitMaskValue","stylingMapsSyncFn","getStylingMapsSyncFn","_activeStylingMapApplyFn","mapsMode","valueApplied","valuesCountUpToDefault","defaultValue","valueAppliedWithinMap","setStyle","nativeStyle","style","DashCase","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","isClassBased","stylingMapArr","NO_CHANGE","ELEMENT_MARKER","COMMENT_MARKER","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","resolveInnerMapMode","isValueAllowedToBeApplied","useDefault","valueToApply","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","activateStylingMapFeature","setStylingMapsSyncFn","currentMode","isExactMatch","innerMode","doApplyValue","addItemToStylingMap","allowOverwrite","propAtIndex","applied","stylingMapToString","attrValue","stylingMapToStringMap","stringMap","TStylingContextDebug","enumerable","configurable","entries","guardMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","readLViewValue","TNode","tView_","propertyMetadataStartIndex","propertyMetadataEndIndex","localNames","initialInputs","tViews","projectionNext","projection","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","ɵɵselect","selectInternal","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","staticContentQueries","staticViewQueries","renderChildComponents","hostLView","renderComponent","refreshView","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","selectedIndex","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesAndLocals","localRefExtractor","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","directiveRegistry","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","setValue","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","executeActionOnElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","nativeInsertBefore","nativeRemoveNode","destroyNode","executeActionOnContainer","renderParent","anchor","executeActionOnView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","isIcuCase","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","viewIndexInContainer","nextViewIndex","tViewNodeChild","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNodes","tProjectionNode","selectorIndex","projectedView","nodeToProject","appendProjectedNode","appendProjectedChildren","ngContainerChildTNode","projectionView","projectedTNode","nodeOrContainer","viewRootTNode","executeActionOnNode","executeActionOnElementContainerOrIcuContainer","executeActionOnProjection","componentLView","projectionTNode","projectedComponentLView","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_super","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","createEmbeddedViewAndNode","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","injectorDefTypes","Set","_destroyed","dedupStack","injectorDef","processInjectorType","provider","processProvider","set","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","multiProviderMixError","staticError","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","useNew","recursivelyProcessProviders","resolvedProvider","resolveProvider","computeDeps","providerDeps","multiProvider","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","metadata","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵattribute","bound","interpolationV","isBindingUpdated","interpolation1","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵstyling","updateLastDirectiveIndex$1","getClassesContext","getStylesContext","getActiveDirectiveStylingIndex","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","_stylingProp","resolveStylePropValue","resolvedValue","deferStylingUpdate","ɵɵclassProp","defer","updated","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","ɵɵstylingApply","getRenderer","flushStyling","classesContext","stylesContext","persistState","allowFlushClasses","allowFlushStyles","classesFlushed","stylesFlushed","deleteStylingStateFromStorage","storeStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","getContext","allocTStylingContext","getActiveDirectiveSuperClassHeight","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextBinding","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","resetAllStylingState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","e_3","e_3_1","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","e_4","lViewResults","e_4_1","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","LOCALE_ID$1","TRANSLATIONS$1","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_getStylingDebugInfo","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","debugNode","getDebugNode","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.2+28.sha-4d43680.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n            stylingWritePersistedState: 0,\n            stylingReadPersistedState: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ɵɵdefineInjectable({ token: type, factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * // TODO(matsko): add updateMask info\n     *\n     * This file contains all state-based logic for styling in Angular.\n     *\n     * Styling in Angular is evaluated with a series of styling-specific\n     * template instructions which are called one after another each time\n     * change detection occurs in Angular.\n     *\n     * Styling makes use of various temporary, state-based variables between\n     * instructions so that it can better cache and optimize its values.\n     * These values are usually populated and cleared when an element is\n     * exited in change detection (once all the instructions are run for\n     * that element).\n     *\n     * There are, however, situations where the state-based values\n     * need to be stored and used at a later point. This ONLY occurs when\n     * there are template-level as well as host-binding-level styling\n     * instructions on the same element. The example below shows exactly\n     * what could be:\n     *\n     * ```html\n     * <!-- two sources of styling: the template and the directive -->\n     * <div [style.width]=\"width\" dir-that-sets-height></div>\n     * ```\n     *\n     * If and when this situation occurs, the current styling state is\n     * stored in a storage map value and then later accessed once the\n     * host bindings are evaluated. Once styling for the current element\n     * is over then the map entry will be cleared.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    var _stylingState = null;\n    var _stateStorage = new Map();\n    // this value is not used outside this file and is only here\n    // as a caching check for when the element changes.\n    var _stylingElement = null;\n    var STYLING_INDEX_START_VALUE = 1;\n    var BIT_MASK_START_VALUE = 0;\n    function getStylingState(element, readFromMap) {\n        if (!_stylingElement || element !== _stylingElement) {\n            _stylingElement = element;\n            if (readFromMap) {\n                _stylingState = _stateStorage.get(element) || null;\n                ngDevMode && ngDevMode.stylingReadPersistedState++;\n            }\n            _stylingState = _stylingState || {\n                classesBitMask: BIT_MASK_START_VALUE,\n                classesIndex: STYLING_INDEX_START_VALUE,\n                stylesBitMask: BIT_MASK_START_VALUE,\n                stylesIndex: STYLING_INDEX_START_VALUE,\n            };\n        }\n        return _stylingState;\n    }\n    function resetStylingState() {\n        _stylingState = null;\n        _stylingElement = null;\n    }\n    function storeStylingState(element, state) {\n        ngDevMode && ngDevMode.stylingWritePersistedState++;\n        _stateStorage.set(element, state);\n    }\n    function deleteStylingStateFromStorage(element) {\n        _stateStorage.delete(element);\n    }\n    function resetAllStylingState() {\n        resetStylingState();\n        _stateStorage.clear();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex === null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n        resetAllStylingState();\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New LView to become active\n     */\n    function leaveView(newView) {\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // we have now jumped to another element\n        // therefore the state is stale\n        resetStylingState();\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    var MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        // because map-based bindings deal with a dynamic set of values, there\n        // is no way to know ahead of time whether or not sanitization is required.\n        // For this reason the configuration will always mark sanitization as active\n        // (this means that when map-based values are applied then sanitization will\n        // be checked against each property).\n        var mapBasedConfig = 1 /* SanitizationRequired */;\n        return [\n            initialStyling || [''],\n            0 /* Initial */,\n            TEMPLATE_DIRECTIVE_INDEX,\n            mapBasedConfig,\n            0,\n            MAP_BASED_ENTRY_PROP_NAME,\n        ];\n    }\n    /**\n     * Sets the provided directive as the last directive index in the provided `TStylingContext`.\n     *\n     * Styling in Angular can be applied from the template as well as multiple sources of\n     * host bindings. This means that each binding function (the template function or the\n     * hostBindings functions) will generate styling instructions as well as a styling\n     * apply function (i.e. `stylingApply()`). Because host bindings functions and the\n     * template function are independent from one another this means that the styling apply\n     * function will be called multiple times. By tracking the last directive index (which\n     * is what happens in this function) the styling algorithm knows exactly when to flush\n     * styling (which is when the last styling apply function is executed).\n     */\n    function updateLastDirectiveIndex(context, lastDirectiveIndex) {\n        if (lastDirectiveIndex === TEMPLATE_DIRECTIVE_INDEX) {\n            var currentValue = context[2 /* LastDirectiveIndexPosition */];\n            if (currentValue > TEMPLATE_DIRECTIVE_INDEX) {\n                // This means that a directive or two contained a host bindings function, but\n                // now the template function also contains styling. When this combination of sources\n                // comes up then we need to tell the context to store the state between updates\n                // (because host bindings evaluation happens after template binding evaluation).\n                markContextToPersistState(context);\n            }\n        }\n        else {\n            context[2 /* LastDirectiveIndexPosition */] = lastDirectiveIndex;\n        }\n    }\n    function getConfig(context) {\n        return context[1 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[1 /* ConfigPosition */] = value;\n    }\n    function getProp(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigAndGuardOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) > 0;\n    }\n    function getGuardMask(context, index) {\n        var configGuardValue = context[index + 0 /* ConfigAndGuardOffset */];\n        return configGuardValue >> 1 /* TotalBits */;\n    }\n    function setGuardMask(context, index, maskValue) {\n        var config = getPropConfig(context, index);\n        var guardMask = maskValue << 1 /* TotalBits */;\n        context[index + 0 /* ConfigAndGuardOffset */] = config | guardMask;\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return (context && index === context[2 /* LastDirectiveIndexPosition */]) ? true :\n            false;\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n    function stateIsPersisted(context) {\n        return (getConfig(context) & 2 /* PersistStateValues */) > 0;\n    }\n    function markContextToPersistState(context) {\n        setConfig(context, getConfig(context) | 2 /* PersistStateValues */);\n    }\n    function getPropValuesStartPosition(context) {\n        return 6 /* MapBindingsBindingsStartPosition */ +\n            context[4 /* MapBindingsValuesCountPosition */];\n    }\n    function isMapBased(prop) {\n        return prop === MAP_BASED_ENTRY_PROP_NAME;\n    }\n    function hasValueChanged(a, b) {\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        // these are special cases for String based values (which are created as artifacts\n        // when sanitization is bypassed on a particular value)\n        if (compareValueA instanceof String) {\n            compareValueA = compareValueA.toString();\n        }\n        if (compareValueB instanceof String) {\n            compareValueB = compareValueB.toString();\n        }\n        return isDifferent(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[0 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            value.length >= 6 /* MapBindingsBindingsStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    var ANIMATION_PROP_PREFIX = '@';\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        var index = tNode.index;\n        var node = index == -1 ? null : unwrapRNode(lView[index]);\n        ngDevMode && node !== null && assertDomNode(node);\n        return node;\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class ABC extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        if (checkHooks !== null || firstPassHooks !== null) {\n            var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n                firstPassHooks :\n                checkHooks;\n            if (hooksToCall !== null) {\n                callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n            }\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        var flags = currentView[FLAGS];\n        if (currentNodeIndex == null && (flags & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            currentView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    /**\n     * Default size count value for a new entry in a context.\n     *\n     * A value of `1` is used here because each entry in the context has a default\n     * property.\n     */\n    var DEFAULT_SIZE_VALUE = 1;\n    var deferredBindingQueue = [];\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, element, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, false);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular CSS class need to be\n            // applied again because on or more of the bindings for the CSS\n            // class have changed.\n            state.classesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, element, prop, bindingIndex, value, sanitizer, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        var sanitizationRequired = isMapBased ?\n            true :\n            (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular property need to be\n            // applied again because on or more of the bindings for the CSS\n            // property have changed.\n            state.stylesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     * If the binding does get registered and the `deferRegistration` flag is true then the\n     * binding data will be queued up until the context is later flushed in `applyStyling`.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            data[bindingIndex] = value;\n        }\n        return changed;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired) {\n        deferredBindingQueue.unshift(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            var sanitizationRequired = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex, sanitizationRequired);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, because they do not have a property value\n     * (since it's a map), all map-based entries are stored in an already populated area of\n     * the context at the top (which is reserved for map-based entries).\n     */\n    function registerBinding(context, countId, prop, bindingValue, sanitizationRequired) {\n        var registered = false;\n        if (prop) {\n            // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n            var found = false;\n            var i = getPropValuesStartPosition(context);\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var p = getProp(context, i);\n                found = prop <= p;\n                if (found) {\n                    // all style/class bindings are sorted by property name\n                    if (prop < p) {\n                        allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                    }\n                    addBindingIntoContext(context, false, i, bindingValue, countId);\n                    break;\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            if (!found) {\n                allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n                registered = true;\n            }\n        }\n        else {\n            // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n            // there is no need to allocate the map-based binding region into the context\n            // since it is already there when the context is first created.\n            addBindingIntoContext(context, true, 3 /* MapBindingsPosition */, bindingValue, countId);\n            registered = true;\n        }\n        return registered;\n    }\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        // 1,2: splice index locations\n        // 3: each entry gets a config value (guard mask + flags)\n        // 4. each entry gets a size value (which is always one because there is always a default binding\n        // value)\n        // 5. the property that is getting allocated into the context\n        // 6. the default binding value (usually `null`)\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n        setGuardMask(context, index, DEFAULT_GUARD_MASK_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     *\n     * Note that this function also handles map-based bindings and will insert them\n     * at the top of the context.\n     */\n    function addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        var firstValueIndex = index + 3 /* BindingsStartOffset */;\n        var lastValueIndex = firstValueIndex + valuesCount;\n        if (!isMapBased) {\n            // prop-based values all have default values, but map-based entries do not.\n            // we want to access the index for the default value in this case and not just\n            // the bindings...\n            lastValueIndex--;\n        }\n        if (typeof bindingValue === 'number') {\n            // the loop here will check to see if the binding already exists\n            // for the property in the context. Why? The reason for this is\n            // because the styling context is not \"locked\" until the first\n            // flush has occurred. This means that if a repeated element\n            // registers its styling bindings then it will register each\n            // binding more than once (since its duplicated). This check\n            // will prevent that from happening. Note that this only happens\n            // when a binding is first encountered and not each time it is\n            // updated.\n            for (var i = firstValueIndex; i <= lastValueIndex; i++) {\n                var indexAtPosition = context[i];\n                if (indexAtPosition === bindingValue)\n                    return;\n            }\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            // now that a new binding index has been added to the property\n            // the guard mask bit value (at the `countId` position) needs\n            // to be included into the existing mask value.\n            var guardMask = getGuardMask(context, index) | (1 << countId);\n            setGuardMask(context, index, guardMask);\n        }\n        else if (bindingValue !== null && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the `stylingApply()` instruction (which is run at the very end of styling\n     * change detection) and will rely on any state values that are set from when\n     * any styling bindings update.\n     *\n     * This function may be called multiple times on the same element because it can\n     * be called from the template code as well as from host bindings. In order for\n     * styling to be successfully flushed to the element (which will only happen once\n     * despite this being called multiple times), the following criteria must be met:\n     *\n     * - `flushStyling` is called from the very last directive that has styling for\n     *    the element (see `allowStylingFlush()`).\n     * - one or more bindings for classes or styles has updated (this is checked by\n     *   examining the classes or styles bit mask).\n     *\n     * If the style and class values are successfully applied to the element then\n     * the temporary state values for the element will be cleared. Otherwise, if\n     * this did not occur then the styling state is persisted (see `state.ts` for\n     * more information on how this works).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var persistState = classesContext ? stateIsPersisted(classesContext) :\n            (stylesContext ? stateIsPersisted(stylesContext) : false);\n        var allowFlushClasses = allowStylingFlush(classesContext, directiveIndex);\n        var allowFlushStyles = allowStylingFlush(stylesContext, directiveIndex);\n        // deferred bindings are bindings which are scheduled to register with\n        // the context at a later point. These bindings can only registered when\n        // the context will be 100% flushed to the element.\n        if (deferredBindingQueue.length && (allowFlushClasses || allowFlushStyles)) {\n            flushDeferredBindings();\n        }\n        var state = getStylingState(element, persistState);\n        var classesFlushed = maybeApplyStyling(renderer, element, data, classesContext, allowFlushClasses, state.classesBitMask, setClass, null);\n        var stylesFlushed = maybeApplyStyling(renderer, element, data, stylesContext, allowFlushStyles, state.stylesBitMask, setStyle, styleSanitizer);\n        if (classesFlushed && stylesFlushed) {\n            resetStylingState();\n            if (persistState) {\n                deleteStylingStateFromStorage(element);\n            }\n        }\n        else if (persistState) {\n            storeStylingState(element, state);\n        }\n    }\n    function maybeApplyStyling(renderer, element, data, context, allowFlush, bitMask, styleSetter, styleSanitizer) {\n        if (allowFlush && context) {\n            lockAndFinalizeContext(context);\n            if (contextHasUpdates(context, bitMask)) {\n                ngDevMode && (styleSanitizer ? ngDevMode.stylesApplied++ : ngDevMode.classesApplied++);\n                applyStyling(context, renderer, element, data, bitMask, styleSetter, styleSanitizer);\n                return true;\n            }\n        }\n        return allowFlush;\n    }\n    function contextHasUpdates(context, bitMask) {\n        return context && bitMask > BIT_MASK_START_VALUE;\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     */\n    function lockAndFinalizeContext(context) {\n        if (!isContextLocked(context)) {\n            var initialValues = getStylingMapArray(context);\n            if (initialValues) {\n                updateInitialStylingOnContext(context, initialValues);\n            }\n            lockContext(context);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = getStylingMapsSyncFn();\n        var mapsGuardMask = getGuardMask(context, 3 /* MapBindingsPosition */);\n        var applyAllValues = (bitMask & mapsGuardMask) > 0;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var guardMask = getGuardMask(context, i);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var valuesCountUpToDefault = valuesCount - 1;\n                var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n                // case 1: apply prop-based values\n                // try to apply the binding values and see if a non-null\n                // value gets set for the styling binding\n                for (var j = 0; j < valuesCountUpToDefault; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    var value = bindingData[bindingIndex];\n                    if (isStylingValueDefined(value)) {\n                        var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                            sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                            value;\n                        applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                        valueApplied = true;\n                        break;\n                    }\n                }\n                // case 2: apply map-based values\n                // traverse through each map-based styling binding and update all values up to\n                // the provided `prop` value. If the property was not applied in the loop above\n                // then it will be attempted to be applied in the maps sync code below.\n                if (stylingMapsSyncFn) {\n                    // determine whether or not to apply the target property or to skip it\n                    var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                        2 /* ApplyTargetProp */);\n                    var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                    valueApplied = valueApplied || valueAppliedWithinMap;\n                }\n                // case 3: apply the default value\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        // the reason why this may be `null` is either because\n        // it's a container element or it's a part of a test\n        // environment that doesn't have styling. In either\n        // case it's safe not to apply styling to the element.\n        var nativeStyle = native.style;\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.setProperty(prop, value));\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.removeProperty(prop));\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (className !== '') {\n            // the reason why this may be `null` is either because\n            // it's a container element or it's a part of a test\n            // environment that doesn't have styling. In either\n            // case it's safe not to apply styling to the element.\n            var classList = native.classList;\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    (classList && classList.add(className));\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    (classList && classList.remove(className));\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a spart\n        // of a binding (since it's static)\n        var INITIAL_STYLING_COUNT_ID = -1;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, INITIAL_STYLING_COUNT_ID, prop, value, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `select(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, 0, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var targetPropValueWasApplied = false;\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (currentMapIndex < totalMaps) {\n            var bindingIndex = getBindingValue(context, 3 /* MapBindingsPosition */, currentMapIndex);\n            var stylingMapArr = data[bindingIndex];\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            while (cursor < stylingMapArr.length) {\n                var prop = getMapProp(stylingMapArr, cursor);\n                var iteratedTooFar = targetProp && prop > targetProp;\n                var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                var value = getMapValue(stylingMapArr, cursor);\n                var valueIsDefined = isStylingValueDefined(value);\n                // the recursive code is designed to keep applying until\n                // it reaches or goes past the target prop. If and when\n                // this happens then it will stop processing values, but\n                // all other map values must also catch up to the same\n                // point. This is why a recursive call is still issued\n                // even if the code has iterated too far.\n                var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                var innerProp = iteratedTooFar ? targetProp : prop;\n                var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n                if (iteratedTooFar) {\n                    if (!targetPropValueWasApplied) {\n                        targetPropValueWasApplied = valueApplied;\n                    }\n                    break;\n                }\n                if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                    var useDefault = isTargetPropMatched && !valueIsDefined;\n                    var valueToApply = useDefault ? defaultValue : value;\n                    var bindingIndexToApply = useDefault ? bindingIndex : null;\n                    var finalValue = sanitizer ?\n                        sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                        valueToApply;\n                    applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                    valueApplied = true;\n                }\n                targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                cursor += 2 /* TupleSize */;\n            }\n            setCurrentSyncCursor(currentMapIndex, cursor);\n            // this is a fallback case in the event that the styling map is `null` for this\n            // binding but there are other map-based bindings that need to be evaluated\n            // afterwards. If the `prop` value is falsy then the intention is to cycle\n            // through all of the properties in the remaining maps as well. If the current\n            // styling map is too short then there are no values to iterate over. In either\n            // case the follow-up maps need to be iterated over.\n            if (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp) {\n                return innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map.\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n        var innerMode = currentMode;\n        if (!valueIsDefined && !(currentMode & 4 /* SkipTargetProp */) &&\n            (isExactMatch || (currentMode & 1 /* ApplyAllValues */))) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the {key:value} map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 3 /* MapBindingsPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var valuesCount = getValuesCount(context, i);\n                    // the context may contain placeholder values which are populated ahead of time,\n                    // but contain no actual binding values. In this situation there is no point in\n                    // classifying this as an \"entry\" since no real data is stored here yet.\n                    if (valuesCount) {\n                        var prop = getProp(context, i);\n                        var guardMask = getGuardMask(context, i);\n                        var defaultValue = getDefaultValue(context, i);\n                        var sanitizationRequired = isSanitizationRequired(context, i);\n                        var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                        var sources = [];\n                        for (var j = 0; j < valuesCount; j++) {\n                            sources.push(context[bindingsStartPosition + j]);\n                        }\n                        entries[prop] = { prop: prop, guardMask: guardMask, sanitizationRequired: sanitizationRequired, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    }\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = getValuesCount(this.context, 3 /* MapBindingsPosition */) > 0;\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            applyStyling(this.context, null, mockElement, this._data, true, mapFn, sanitizer);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = ngDevMode && createNamedArrayType('LView');\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyMetadataStartIndex, //\n        propertyMetadataEndIndex, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyMetadataStartIndex = propertyMetadataStartIndex;\n            this.propertyMetadataEndIndex = propertyMetadataEndIndex;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 8 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 4 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 16 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 1 /* isComponent */)\n                    flags.push('TNodeFlags.isComponent');\n                if (this.flags & 32 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 2 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    var TViewData = ngDevMode && createNamedArrayType('TViewData');\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = ngDevMode && createNamedArrayType('LViewBlueprint');\n    var MatchesArray = ngDevMode && createNamedArrayType('MatchesArray');\n    var TViewComponents = ngDevMode && createNamedArrayType('TViewComponents');\n    var TNodeLocalNames = ngDevMode && createNamedArrayType('TNodeLocalNames');\n    var TNodeInitialInputs = ngDevMode && createNamedArrayType('TNodeInitialInputs');\n    var TNodeInitialData = ngDevMode && createNamedArrayType('TNodeInitialData');\n    var LCleanup = ngDevMode && createNamedArrayType('LCleanup');\n    var TCleanup = ngDevMode && createNamedArrayType('TCleanup');\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    queries: null,\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                var styles = isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView) :\n                    null;\n                var classes = isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true) :\n                    null;\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        selectInternal(lView, index);\n    }\n    function selectInternal(lView, index) {\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // The first node is not always the one at index 0, in case of i18n, index 0 can be the\n        // instruction `i18nStart` and the first node has the index 1 or more\n        if (index === 0 || !tView.firstChild) {\n            tView.firstChild = tNode;\n        }\n        // Now link ourselves into the tree.\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Used for creating the LView of a dynamic embedded view, either through\n     * ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, injectorIndex) {\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        return lView;\n    }\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        var oldView = enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView(oldView);\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var oldView = enterView(lView, lView[T_HOST]);\n        try {\n            resetPreOrderHookFlags(lView);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            // Resetting the bindingIndex of the current LView as the next steps may trigger change\n            // detection.\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n            leaveView(oldView);\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */) {\n                // When we're updating, have an inherent ɵɵselect(0) so we don't have to generate that\n                // instruction for most update blocks\n                selectInternal(lView, 0);\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // propertyMetadataStartIndex: number\n        -1, // propertyMetadataEndIndex: number\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyMetadataStartIndex: -1,\n                propertyMetadataEndIndex: -1,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries) {\n                    tNode.flags |= 4 /* hasContentQuery */;\n                }\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.attrs !== null) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags = 1 /* isComponent */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[hostTNode.index], hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        componentView[T_HOST] = hostTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ngDevMode && createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        var view = getComponentViewByInstance(component);\n        checkNoChangesInternal(view, component);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeActionOnElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped\n            // in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Insert */) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 1 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 2 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                executeActionOnContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 0 /* Insert */ : 1 /* Detach */;\n            executeActionOnView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        executeActionOnView(lView[RENDERER], 1 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                executeActionOnView(renderer, 2 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode);\n        var renderParent = parent.parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (renderParent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = parent && parent.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then its direct parent node is the renderer.\n            if (isIcuCase && parent.flags & 2 /* isProjected */) {\n                return getNativeByTNode(parent, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(renderParent, 3 /* Element */);\n            if (renderParent.flags & 1 /* isComponent */ && !isIcuCase) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[renderParent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(renderParent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_1, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            return tViewNodeChild !== null ? getNativeByTNodeOrNull(tViewNodeChild, lView) :\n                lContainer[NATIVE];\n        }\n        else {\n            return lContainer[NATIVE];\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target LView)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (!(nodeToProject.flags & 32 /* isDetached */)) {\n                    if (nodeToProject.type === 1 /* Projection */) {\n                        appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                    }\n                    else {\n                        // This flag must be set now or we won't know that this node is projected\n                        // if the nodes are inserted into a container later.\n                        nodeToProject.flags |= 2 /* isProjected */;\n                        appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                    }\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Loops over all children of a TNode container and appends them to the DOM\n     *\n     * @param ngContainerChildTNode The first child of the TNode container\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedChildren(ngContainerChildTNode, tProjectionNode, currentView, projectionView) {\n        while (ngContainerChildTNode) {\n            appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n            ngContainerChildTNode = ngContainerChildTNode.next;\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else if (projectedTNode.type === 5 /* IcuContainer */) {\n            // The node we are adding is an ICU container which is why we also need to project all the\n            // children nodes that might have been created previously and are linked to this anchor\n            var ngContainerChildTNode = projectedTNode.child;\n            appendProjectedChildren(ngContainerChildTNode, ngContainerChildTNode, projectionView, projectionView);\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                appendProjectedChildren(projectedTNode.child, tProjectionNode, currentView, projectionView);\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n    /**\n     * `executeActionOnView` performs an operation on the view as specified in `action` (insert, detach,\n     * destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. While the recursive implementation is not the\n     * most efficient one, trying to unroll the nodes non-recursively results in very complex code that\n     * is very hard (to maintain). We are sacrificing a bit of performance for readability using a\n     * recursive implementation.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        while (viewRootTNode !== null) {\n            executeActionOnNode(renderer, action, lView, viewRootTNode, renderParent, beforeNode);\n            viewRootTNode = viewRootTNode.next;\n        }\n    }\n    /**\n     * `executeActionOnProjection` performs an operation on the projection specified by `action`\n     * (insert, detach, destroy).\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode projection TNode to process\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnProjection(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode && assertDefined(componentNode.projection, 'Element nodes for which projection is processed must have projection defined.');\n        var nodeToProject = componentNode.projection[tProjectionNode.projection];\n        if (nodeToProject !== undefined) {\n            if (Array.isArray(nodeToProject)) {\n                for (var i = 0; i < nodeToProject.length; i++) {\n                    var rNode = nodeToProject[i];\n                    ngDevMode && assertDomNode(rNode);\n                    executeActionOnElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n                }\n            }\n            else {\n                var projectionTNode = nodeToProject;\n                var projectedComponentLView = componentLView[PARENT];\n                while (projectionTNode !== null) {\n                    executeActionOnNode(renderer, action, projectedComponentLView, projectionTNode, renderParent, beforeNode);\n                    projectionTNode = projectionTNode.projectionNext;\n                }\n            }\n        }\n    }\n    /**\n     * `executeActionOnContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeNodeAction)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            executeActionOnElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            executeActionOnView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n    /**\n     * `executeActionOnElementContainerOrIcuContainer` performs an operation on the ng-container node\n     * and its child nodes as specified by the `action` (insert, detach, destroy).\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tNode The TNode associated with the `ElementContainer` or `IcuContainer`.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var node = lView[tNode.index];\n        executeActionOnElementOrContainer(action, renderer, renderParent, node, beforeNode);\n        var childTNode = tNode.child;\n        while (childTNode) {\n            executeActionOnNode(renderer, action, lView, childTNode, renderParent, beforeNode);\n            childTNode = childTNode.next;\n        }\n    }\n    function executeActionOnNode(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var nodeType = tNode.type;\n        if (!(tNode.flags & 32 /* isDetached */)) {\n            if (nodeType === 4 /* ElementContainer */ || nodeType === 5 /* IcuContainer */) {\n                executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else if (nodeType === 1 /* Projection */) {\n                executeActionOnProjection(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                executeActionOnElementOrContainer(action, renderer, renderParent, lView[tNode.index], beforeNode);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createEmbeddedViewAndNode(embeddedTView, context, this._declarationView, this._declarationTContainer.injectorIndex);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponent(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef !== null) {\n            return injectableDef.factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = new Array(paramLength).fill('?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param lView Current view\n     * @param value Value to diff\n     */\n    function bind(lView, value) {\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementAttributeInternal(index, name, bound, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas);\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tContainerNode, localRefExtractor);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling() {\n        var tView = getLView()[TVIEW];\n        if (tView.firstTemplatePass) {\n            updateLastDirectiveIndex$1(getPreviousOrParentTNode(), getActiveDirectiveStylingIndex());\n        }\n    }\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `select(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(getSelectedIndex(), bindingIndex, className, value, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     */\n    function _stylingProp(elementIndex, bindingIndex, prop, value, isClassBased, defer) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var updated = false;\n        if (value !== NO_CHANGE) {\n            if (isClassBased) {\n                updated = updateClassBinding(getClassesContext(tNode), lView, native, prop, bindingIndex, value, defer, false);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updated = updateStyleBinding(getStylesContext(tNode), lView, native, prop, bindingIndex, value, sanitizer, defer, false);\n            }\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased, defer) {\n        activateStylingMapFeature();\n        var lView = getLView();\n        var valueHasChanged = false;\n        if (value !== NO_CHANGE) {\n            var tNode = getTNode(elementIndex, lView);\n            var native = getNativeByTNode(tNode, lView);\n            var oldValue = lView[bindingIndex];\n            valueHasChanged = hasValueChanged(oldValue, value);\n            var stylingMapArr = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            if (isClassBased) {\n                updateClassBinding(context, lView, native, null, bindingIndex, stylingMapArr, defer, valueHasChanged);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updateStyleBinding(context, lView, native, null, bindingIndex, stylingMapArr, sanitizer, defer, valueHasChanged);\n            }\n        }\n        return valueHasChanged;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context)) {\n                var inputs = tNode.inputs[isClassBased ? 'class' : 'style'];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n            }\n            lView[bindingIndex] = newValue;\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length > 0) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be called from the template and hostBindings\n     * functions and may be called multiple times depending whether multiple\n     * sources of styling exist. If called multiple times, only the last call\n     * to `stlyingApply()` will render styling to the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var elementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        var sanitizer = getCurrentStyleSanitizer();\n        flushStyling(renderer, lView, getClassesContext(tNode), getStylesContext(tNode), native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || [''];\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || [''];\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex$1(tNode, directiveIndex) {\n        updateLastDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateLastDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not a style/class binding update should be applied later.\n     *\n     * This function will decide whether a binding should be applied immediately\n     * or later (just before the styles/classes are flushed to the element). The\n     * reason why this feature exists is because of super/sub directive inheritance.\n     * Angular will evaluate host bindings on the super directive first and the sub\n     * directive, but the styling bindings on the sub directive are of higher priority\n     * than the super directive. For this reason all styling bindings that take place\n     * in this circumstance will need to be deferred until later so that they can be\n     * applied together and in a different order (the algorithm handles that part).\n     */\n    function deferStylingUpdate() {\n        return getActiveDirectiveSuperClassHeight() > 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n        if (hasClassInput(tNode) && tNode.classes) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode) && tNode.styles) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = getInitialStylingValue(context) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        attachPatchData(native, lView);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(numProjectionSlots).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var interpolatedValue = interpolation1(getLView(), prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var interpolatedValue = interpolation2(getLView(), prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var interpolatedValue = interpolation3(getLView(), prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var interpolatedValue = interpolation4(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var interpolatedValue = interpolation5(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var interpolatedValue = interpolation6(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var interpolatedValue = interpolation7(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var interpolatedValue = interpolation8(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var interpolatedValue = interpolationV(getLView(), values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        ngDevMode && ngDevMode.rendererSetText++;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(value) {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            textBindingInternal(lView, index, renderStringify(bound));\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, true);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(benlesh): remove bind call here.\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bound, sanitizer, true, loadComponentRenderer);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = (e_1 = void 0, __values(features)), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵselect(0);\n     *        ɵɵtextBinding(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.2+28.sha-4d43680.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(viewData, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, viewData) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            var tProjectionNode = tNode;\n            appendProjectedNodes(viewData, tProjectionNode, tProjectionNode.projection, findComponentView(viewData));\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        // Define this node as detached so that we don't risk projecting it\n        removedPhTNode.flags |= 32 /* isDetached */;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var lView = getLView();\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        var expression = bind(lView, value);\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @codeGenApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        if (placeholders !== undefined && Object.keys(placeholders).length) {\n            return input.replace(LOCALIZE_PH_REGEXP, function (_, key) { return placeholders[key] || ''; });\n        }\n        return input;\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = new Array(noOfInheritedQueries);\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries[i] = parentLQuery.clone();\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            var e_1, _a;\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.elementStart(tView, tNode);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            var e_2, _a;\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.elementEnd(tNode);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            var e_3, _a;\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.template(tView, tNode);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = new Array(tQueryMatches.length / 2);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result[i / 2] = null;\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result[i / 2] =\n                        createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read);\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var e_4, _a;\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        try {\n                            for (var _b = (e_4 = void 0, __values(declarationLContainer[MOVED_VIEWS])), _c = _b.next(); !_c.done; _c = _b.next()) {\n                                var embeddedLView = _c.value;\n                                collectQueryResults(embeddedLView, childQueryIndex, result);\n                            }\n                        }\n                        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                        finally {\n                            try {\n                                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                            }\n                            finally { if (e_4) throw e_4.error; }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = ɵɵdefineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = ɵɵdefineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = ɵɵdefineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = ɵɵdefineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element);\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _getStylingDebugInfo(element, isClassBased) {\n        if (element) {\n            var context = loadLContextFromNode(element);\n            var lView = context.lView;\n            var tData = lView[TVIEW].data;\n            var tNode = tData[context.nodeIndex];\n            if (isClassBased) {\n                return isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true).values :\n                    stylingMapToStringMap(tNode.classes);\n            }\n            else {\n                return isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView, false).values :\n                    stylingMapToStringMap(tNode.styles);\n            }\n        }\n        return {};\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}