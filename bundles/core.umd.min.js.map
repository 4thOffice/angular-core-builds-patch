{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ΔdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjectable","ΔdefineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","Δinject","inject","ɵɵinject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","angularCoreDiEnv","ΔgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","USE_VALUE$2","EMPTY_ARRAY","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","render2CompileInjectable","injectableType","throwMultipleComponentError","tNode","tagName","throwMixedMultiProviderError","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$1","NULL_INJECTOR","getNullInjector","createInjector","defType","parent","additionalProviders","R3Injector","_this","records","Map","injectorDefTypes","Set","onDestroy","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","set","makeRecord","isRootInjector","has","enumerable","configurable","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","ngModule","defName","isDuplicate","add","imported","pop","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","console","warn","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","input","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","slice","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multiProvider","multiProviderMixError","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ɵChangeDetectorStatus","ViewEncapsulation","componentNeedsResolution","old","response","noSideEffects","EMPTY_OBJ","EMPTY_ARRAY$2","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ΔdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ΔsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ΔdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ΔsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ΔdefineBase","baseDefinition","ΔdefineDirective","ΔdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ΔresolveWindow","element","ownerDocument","defaultView","ΔresolveDocument","ΔresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","throwError","TYPE","ACTIVE_INDEX","NATIVE","CONTAINER_HEADER_OFFSET","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","isStylingContext","getNativeByIndex","lView","getNativeByTNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","registerPreOrderHooks","directiveIndex","directiveDef","tView","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","elementDepthCount","stylingContext","setCachedStylingContext","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","ΔenableBindings","ΔdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","getActiveDirectiveId","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","getActiveDirectiveSuperClassHeight","getActiveDirectiveSuperClassDepth","ΔrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","getSelectedIndex","_currentNamespace","ΔnamespaceSVG","ΔnamespaceMathML","ΔnamespaceHTML","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ΔsanitizeHtml","getSanitizer","sanitize","HTML","document","ΔsanitizeStyle","unsafeStyle","STYLE","ΔsanitizeUrl","unsafeUrl","URL","ΔsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ΔsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","ΔsanitizeUrlOrResourceUrl","ΔdefaultStyleSanitizer","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","DEFAULT_TEMPLATE_DIRECTIVE_INDEX","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","initialStyles","initialClasses","allocateOrUpdateDirectiveIntoContext","singlePropValuesIndex","styleSanitizer","directiveRegistry","limit","propValuesStartPosition","getStylingContextFromLView","viewData","storageIndex","wrapper","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrsLength","accumulatedClasses","accumulatedStyles","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ΔgetInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","ELEMENT_MARKER","COMMENT_MARKER","_stylingMode","runtimeIsNewStylingInUse","NO_CHANGE","enqueueHostInstruction","priority","instructionFn","instructionFnArgs","buffer","findNextInsertionIndex","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","updateClassMap","classesInput","updateStylingMap","updateStyleMap","stylesInput","entryIsClassBased","isMultiValueCacheHit","newValue","readCachedMapValue","propNames","playerBuilder","ClassAndStylePlayerBuilder","rawValue","playerBuilderPosition","playerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","setPlayerBuilder","applyAll","getMultiClassesStartIndex","getMultiStylesStartIndex","patchStylingMapIntoContext","ctxStart","ctxEnd","cacheValue","dirty","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setContextPlayersDirty","updateClassProp","offset","forceOverride","updateSingleStylingValue","updateStyleProp","isClassBased","singleIndex","getSinglePropIndexValue","currValue","currFlag","currDirective","value_1","currPlayerIndex","newIndex","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","store","DashCase","removeStyle","removeProperty","className","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","initialValue","a","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","keyValues","singlePropOffsetRegistryIndex","offsets","dirs","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","registerMultiMapEntry","count","staticStyles","getBindingNameFromIndex","updateContextDirectiveIndex","getConfig","getProp$1","getGuardMask","getValuesCount","getValue$1","getDefaultValue","allowStylingFlush","lockContext","setConfig","isContextLocked","currentStyleIndex","currentClassIndex","stylesBitMask","classesBitMask","deferredBindingQueue","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","DEFAULT_MASK_VALUE","DEFAULT_BINDING_INDEX_VALUE","BIT_MASK_APPLY_ALL","updateBindingData","counterIndex","bindingIndex","deferRegistration","deferBindingRegistration","flushDeferredBindings","registerBinding","countId","bindingValue","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","lastValueIndex","applyStyling","bindingData","bitMask","applyStylingFn","forceApplyDefaultValues","processAllEntries","guardMask","isFinalValue","valueToApply","setStyle$1","setClass$1","classList","TStylingContextDebug","entries","defaultValue","bindingsStartPosition","sources","NodeStylingDebug","_data","_contextDebug","debug","contextEntries","finalValues","_mapValues","sourceValues","finalValue","toDebug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","componentLViewDebug","classes","newStyles","newClasses","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","attrValue","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","isSelectorInSelectorList","list","selectorListLoop","currentSelectorInList","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","selectedIndex","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentView","componentTView","checkView","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElementNS","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","executeTemplate","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","setNodeStylingTemplate","attrsStartIndex","stylingAttrsStartIndex","executeContentQueries","isContentQueryHost","createDirectivesAndLocals","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","propertyMetadataStartIndex","propertyMetadataEndIndex","initialInputs","tViews","projectionNext","projection","onElementCreationFns","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","privateName","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","lViewOrLContainer","markViewDirty","parent_2","scheduleTick","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","applyOnCreateInstructions","fns","ΔallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","markDirty","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","firstView","lContainer","head","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","detachView","removeIndex","viewToDetach","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","Δcontainer","containerInternal","addTContainerToQueries","Δtemplate","tContainerNode","ΔcontainerRefreshStart","ΔcontainerRefreshEnd","nextIndex","insertNodeBeforeViews","addNode","comment","createComment","Δreference","getContextLView","Δload","ΔdirectiveInject","ΔinjectAttribute","getStylesContext","getContext","getClassesContext","getActiveDirectiveStylingIndex","Δstyling","classBindingNames","styleBindingNames","directiveStylingIndex","getActiveDirectiveStylingIndex$1","stylingInit","updateLastDirectiveIndex","initStyling","registerHostDirective","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","staticModeOnly","hyphenateEntries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","ΔstyleProp","styleIndex","valueToAdd","resolveStylePropValue","getStylingContext","styleProp","updateStyleBinding","ΔclassProp","classIndex","booleanOrNull","classProp","updateClassBinding","ΔstyleMap","styleInputVal","forceStylesAsString","ΔclassMap","classInputVal","forceClassesAsString","ΔstylingApply","runtimeAllowOldStyling","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","allowFlush","flushQueue","isContextDirty","flushPlayerBuilders","multiStartIndex","directiveIndex_1","playersStartIndex","playerInsertionIndex","oldPlayer","stylingApply","getRenderer","getNativeFromLView","applyClasses","isFirstPass","applyStyles","getCachedStylingContext","ΔelementStart","initialStylesIndex","initialClassesIndex","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","registerInitialStylingIntoContext","classesContext","stylesContext","currentQueries","clone","ΔelementEnd","decreaseElementDepthCount","getInitialStyleStringValue","initialStyleValues","styleString","Δelement","ΔelementAttribute","strValue","ΔelementHostAttrs","hostElementIndex","ΔelementContainerStart","ΔelementContainerEnd","ΔembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","ΔembeddedViewEnd","viewHost","ΔgetCurrentView","isPromise","isObservable","subscribe","Δlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ΔcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","cleanupFn","listen","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ΔnextContext","ΔprojectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","Δprojection","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","Δproperty","bindReconciledValue","Δbind","ΔelementProperty","ΔcomponentHostSyntheticProperty","ΔinterpolationV","Δinterpolation1","v0","Δinterpolation2","i0","v1","Δinterpolation3","i1","v2","Δinterpolation4","i2","v3","Δinterpolation5","i3","v4","Δinterpolation6","i4","v5","Δinterpolation7","i5","v6","Δinterpolation8","i6","v7","ΔpropertyInterpolate","ΔpropertyInterpolate1","interpolatedValue","ΔpropertyInterpolate2","ΔpropertyInterpolate3","ΔpropertyInterpolate4","ΔpropertyInterpolate5","ΔpropertyInterpolate6","ΔpropertyInterpolate7","ΔpropertyInterpolate8","ΔpropertyInterpolateV","Δselect","Δtext","textNative","ΔtextBinding","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","ΔNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ΔInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ΔProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","componentFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","componentRef","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","addAllToArray","items","flatten","mapFn","ngI18nClosureMode","goog","getMsg","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","Δi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","cursor","Δi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","shift","Δi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","Δi18n","Δi18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","Δi18nExp","expression","Δi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","Δi18nLocalize","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","_r3Injector","NgModuleFactory$1","moduleRef","ΔpureFunction0","slotOffset","pureFn","thisArg","ΔpureFunction1","exp","ΔpureFunction2","ΔpureFunction3","ΔpureFunction4","ΔpureFunction5","exp5","ΔpureFunction6","exp6","ΔpureFunction7","exp7","ΔpureFunction8","exp8","ΔpureFunctionV","exps","Δpipe","pipeName","getPipeDef$1","pipeInstance","ΔpipeBind1","unwrapValue$1","isPure","transform","ΔpipeBind2","ΔpipeBind3","ΔpipeBind4","ΔpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","insertBeforeContainer","addMatch","matchingValue","insertBeforeViewMatches","createPredicate","_valuesTree","_static","storeCleanupWithContext","ΔqueryRefresh","queryListImpl","ΔstaticViewQuery","ΔviewQuery","ΔloadViewQuery","ΔcontentQuery","contentQuery","tViewContentQueries","ΔstaticContentQuery","ΔloadContentQuery","ΔtemplateRefExtractor","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","_loop_1","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","eAttrs","lContext","eClasses","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNodeChildrenInContainerR3","nextLView","childView","debugNode","getDebugNode","_nativeNodeToDebugNode","getDebugNode__PRE_R3__","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS$1","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_f","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_b","ɵangular_packages_core_core_a","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bp","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bq","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","viewAmount","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-rc.0+241.sha-f03475c.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ΔdefineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ΔdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ΔdefineInjectable;\n    /**\n     * @deprecated delete before v8. Use `defineInjectable`, which is also deprecated, but will be\n     * around until v10.\n     * @publicApi\n     */\n    var ɵɵdefineInjectable = ΔdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ΔdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ΔdefineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function Δinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = Δinject;\n    /**\n     * @deprecated delete by v8, use `inject`.\n     * @codeGenApi\n     */\n    var ɵɵinject = Δinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(Δinject(type, flags));\n            }\n            else {\n                args.push(Δinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ΔdefineInjectable': ΔdefineInjectable,\n        'ΔdefineInjector': ΔdefineInjector,\n        'Δinject': Δinject,\n        'ΔgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return Δinject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$4 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$4);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ΔdefineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            if (parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n                parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n                    parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef !== null) {\n            return injectableDef.factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = new Array(paramLength).fill('?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return inheritedInjectableDef.factory;\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return Δinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ΔdefineInjectable({\n            providedIn: 'any',\n            factory: function () { return Δinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$5 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$5, Query);\n    var ɵ1$1 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$1, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            stylingProp: 0,\n            stylingPropCacheMiss: 0,\n            stylingApply: 0,\n            stylingApplyCacheMiss: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        _global['ngDevMode'] = newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$2 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY$2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ΔdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$2,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ΔdefineInjectable({ factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ΔsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ΔdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$2,\n            declarations: def.declarations || EMPTY_ARRAY$2,\n            imports: def.imports || EMPTY_ARRAY$2,\n            exports: def.exports || EMPTY_ARRAY$2,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ΔsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY$2;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY$2;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY$2;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ΔdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ΔdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ΔdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ΔdefineDirective = ΔdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ΔdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'function')\n            return value.name || value;\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type;\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$6 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$6)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ΔresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ΔresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ΔresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, QUERIES and T_HOST are indices 3, 4, 5 and 6.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 7;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    var stylingContext = null;\n    /**\n     * Gets the most recent styling context value.\n     *\n     * Note that only one styling context is stored at a given time.\n     */\n    function getCachedStylingContext() {\n        return stylingContext;\n    }\n    /**\n     * Sets the most recent styling context value.\n     *\n     * Note that only one styling context is stored at a given time.\n     *\n     * @param context The styling context value that will be stored\n     */\n    function setCachedStylingContext(context) {\n        stylingContext = context;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ΔdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ΔenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ΔenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ΔdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ΔenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ΔdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex == null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ΔrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        setCachedStylingContext(null);\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // remove the styling context from the cache\n        // because we are now on a different element\n        setCachedStylingContext(null);\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ΔnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ΔnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements no `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ΔnamespaceHTML() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ΔsanitizeResourceUrl;\n        }\n        return ΔsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ΔdefaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image' ||\n                prop === 'clip-path';\n        }\n        return ΔsanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$7 = function (hostElement, rendererType) { return document; };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$7\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$2;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The default directive styling index value for template-based bindings.\n     *\n     * All host-level bindings (e.g. `hostStyleProp` and `hostStyleMap`) are\n     * assigned a directive styling index value based on the current directive\n     * uniqueId and the directive super-class inheritance depth. But for template\n     * bindings they always have the same directive styling index value.\n     */\n    var DEFAULT_TEMPLATE_DIRECTIVE_INDEX = 0;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateOrUpdateDirectiveIntoContext(context, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropValuesIndex, styleSanitizer) {\n        if (singlePropValuesIndex === void 0) { singlePropValuesIndex = -1; }\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        var limit = index + 2 /* Size */;\n        for (var i = directiveRegistry.length; i < limit; i += 2 /* Size */) {\n            // -1 is used to signal that the directive has been allocated, but\n            // no actual style or class bindings have been registered yet...\n            directiveRegistry.push(-1, null);\n        }\n        var propValuesStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        if (singlePropValuesIndex >= 0 && directiveRegistry[propValuesStartPosition] === -1) {\n            directiveRegistry[propValuesStartPosition] = singlePropValuesIndex;\n            directiveRegistry[index + 1 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 10 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `styling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContextFromLView(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContextFromLView(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[9 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[9 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ΔgetFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ΔgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ΔgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var _stylingMode = 0;\n    function runtimeIsNewStylingInUse() {\n        return _stylingMode > 0 /* UseOld */;\n    }\n    function runtimeAllowOldStyling() {\n        return _stylingMode < 2 /* UseNew */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /*\n     * This file contains the logic to defer all hostBindings-related styling code to run\n     * at a later point, instead of immediately (as is the case with how template-level\n     * styling instructions are run).\n     *\n     * Certain styling instructions, present within directives, components and sub-classed\n     * directives, are evaluated at different points (depending on priority) and will therefore\n     * not be applied to the styling context of an element immediately. They are instead\n     * designed to be applied just before styling is applied to an element.\n     *\n     * (The priority for when certain host-related styling operations are executed is discussed\n     * more within `interfaces/styling.ts`.)\n     */\n    function registerHostDirective(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (!buffer) {\n            buffer = context[8 /* HostInstructionsQueue */] = [DEFAULT_TEMPLATE_DIRECTIVE_INDEX];\n        }\n        buffer[0 /* LastRegisteredDirectiveIndexPosition */] = directiveIndex;\n    }\n    /**\n     * Queues a styling instruction to be run just before `renderStyling()` is executed.\n     */\n    function enqueueHostInstruction(context, priority, instructionFn, instructionFnArgs) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        // Buffer may be null if host element is a template node. In this case, just ignore the style.\n        if (buffer != null) {\n            var index = findNextInsertionIndex(buffer, priority);\n            buffer.splice(index, 0, priority, instructionFn, instructionFnArgs);\n        }\n    }\n    /**\n     * Figures out where exactly to to insert the next host instruction queue entry.\n     */\n    function findNextInsertionIndex(buffer, priority) {\n        for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n            var p = buffer[i + 0 /* DirectiveIndexOffset */];\n            if (p > priority) {\n                return i;\n            }\n        }\n        return buffer.length;\n    }\n    /**\n     * Iterates through the host instructions queue (if present within the provided\n     * context) and executes each queued instruction entry.\n     */\n    function flushQueue(context) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n                var fn = buffer[i + 1 /* InstructionFnOffset */];\n                var args = buffer[i + 2 /* ParamsOffset */];\n                fn.apply(this, args);\n            }\n            buffer.length = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Determines whether or not to allow the host instructions queue to be flushed or not.\n     *\n     * Because the hostBindings function code is unaware of the presence of other host bindings\n     * (as well as the template function) then styling is evaluated multiple times per element.\n     * To prevent style and class values from being applied to the element multiple times, a\n     * flush is only allowed when the last directive (the directive that was registered into\n     * the styling context) attempts to render its styling.\n     */\n    function allowFlush(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            return buffer[0 /* LastRegisteredDirectiveIndexPosition */] ===\n                directiveIndex;\n        }\n        return true;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveIndex);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveIndex) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex);\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveIndex, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var isNewDirective = findOrPatchDirectiveIntoRegistry(context, directiveIndex, false, styleSanitizer);\n        if (!isNewDirective) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 10 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `styleProp`\n        // and the `classProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveIndex, staticModeOnly, styleSanitizer) {\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        var singlePropStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        // this means that the directive has already been registered into the registry\n        if (index < directiveRegistry.length &&\n            directiveRegistry[singlePropStartPosition] >= 0)\n            return false;\n        var singlePropsStartIndex = staticModeOnly ? -1 : context[5 /* SinglePropOffsetPositions */].length;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropsStartIndex, styleSanitizer);\n        return true;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi class values to the context.\n     *\n     * This function will iterate over the provided `classesInput` values and\n     * insert/update or remove them from the context at exactly the right spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngClass` and `[class]`\n     * both update the `foo` className value at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. (This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateClassMap(context, classesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateStylingMap(context, classesInput, true, directiveIndex);\n    }\n    /**\n     * Registers the provided multi style values to the context.\n     *\n     * This function will iterate over the provided `stylesInput` values and\n     * insert/update or remove them from the context at exactly the right spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. (This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStyleMap(context, stylesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateStylingMap(context, stylesInput, false, directiveIndex);\n    }\n    function updateStylingMap(context, input, entryIsClassBased, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        ngDevMode && (entryIsClassBased ? ngDevMode.classMap++ : ngDevMode.styleMap++);\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, input))\n            return;\n        input =\n            input === NO_CHANGE ? readCachedMapValue(context, entryIsClassBased, directiveIndex) : input;\n        var element = context[0 /* ElementPosition */];\n        var playerBuilder = input instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(input, element, entryIsClassBased ? 1 /* Class */ : 2 /* Style */) :\n            null;\n        var rawValue = playerBuilder ? input.value : input;\n        // the position is always the same, but whether the player builder gets set\n        // at all (depending if its set) will be reflected in the index value below...\n        var playerBuilderPosition = entryIsClassBased ? 1 /* ClassMapPlayerBuilderPosition */ :\n            3 /* StyleMapPlayerBuilderPosition */;\n        var playerBuilderIndex = playerBuilder ? playerBuilderPosition : 0;\n        var playerBuildersAreDirty = false;\n        if (hasPlayerBuilderChanged(context, playerBuilder, playerBuilderPosition)) {\n            setPlayerBuilder(context, playerBuilder, playerBuilderPosition);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        var startIndex;\n        var endIndex;\n        var propNames;\n        var applyAll = false;\n        if (entryIsClassBased) {\n            if (typeof rawValue == 'string') {\n                propNames = rawValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a className string implies that all those classes are added\n                applyAll = true;\n            }\n            else {\n                propNames = rawValue ? Object.keys(rawValue) : EMPTY_ARRAY$2;\n            }\n            startIndex = getMultiClassesStartIndex(context);\n            endIndex = context.length;\n        }\n        else {\n            startIndex = getMultiStylesStartIndex(context);\n            endIndex = getMultiClassesStartIndex(context);\n            propNames = rawValue ? Object.keys(rawValue) : EMPTY_ARRAY$2;\n        }\n        var values = (rawValue || EMPTY_OBJ);\n        patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, startIndex, endIndex, propNames, applyAll || values, input, entryIsClassBased);\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n        ngDevMode && (entryIsClassBased ? ngDevMode.classMapCacheMiss++ : ngDevMode.styleMapCacheMiss++);\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, true, directiveIndex, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, false, directiveIndex, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveIndex, forceOverride) {\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        ngDevMode && ngDevMode.stylingProp++;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n            ngDevMode && ngDevMode.stylingPropCacheMiss++;\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var totalPlayersQueued = 0;\n        ngDevMode && ngDevMode.stylingApply++;\n        // this prevents multiple attempts to render style/class values on\n        // the same element...\n        if (allowFlush(context, directiveIndex)) {\n            // all styling instructions present within any hostBindings functions\n            // do not update the context immediately when called. They are instead\n            // queued up and applied to the context right at this point. Why? This\n            // is because Angular evaluates component/directive and directive\n            // sub-class code at different points and it's important that the\n            // styling values are applied to the context in the right order\n            // (see `interfaces/styling.ts` for more information).\n            flushQueue(context);\n            if (isContextDirty(context)) {\n                ngDevMode && ngDevMode.stylingApplyCacheMiss++;\n                // this is here to prevent things like <ng-container [style] [class]>...</ng-container>\n                // or if there are any host style or class bindings present in a directive set on\n                // a container node\n                var native = context[0 /* ElementPosition */];\n                var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n                var multiStartIndex = getMultiStylesStartIndex(context);\n                for (var i = 10 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                    // there is no point in rendering styles that have not changed on screen\n                    if (isDirty(context, i)) {\n                        var flag = getPointers(context, i);\n                        var directiveIndex_1 = getDirectiveIndexFromEntry(context, i);\n                        var prop = getProp(context, i);\n                        var value = getValue(context, i);\n                        var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex_1) : null;\n                        var playerBuilder = getPlayerBuilder(context, i);\n                        var isClassBased = flag & 2 /* Class */ ? true : false;\n                        var isInSingleRegion = i < multiStartIndex;\n                        var valueToApply = value;\n                        // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                        // this check implies that a single value was removed and we\n                        // should now defer to a multi value and use that (if set).\n                        if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                            // single values ALWAYS have a reference to a multi index\n                            var multiIndex = getMultiOrSingleIndex(flag);\n                            valueToApply = getValue(context, multiIndex);\n                        }\n                        // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                        // the initial value will always be a string or null,\n                        // therefore we can safely adopt it in case there's nothing else\n                        // note that this should always be a falsy check since `false` is used\n                        // for both class and style comparisons (styles can't be false and false\n                        // classes are turned off and should therefore defer to their initial values)\n                        // Note that we ignore class-based deferals because otherwise a class can never\n                        // be removed in the case that it exists as true in the initial classes list...\n                        if (!valueExists(valueToApply, isClassBased)) {\n                            valueToApply = getInitialValue(context, flag);\n                        }\n                        // if the first render is true then we do not want to start applying falsy\n                        // values to the DOM element's styling. Otherwise then we know there has\n                        // been a change and even if it's falsy then it's removing something that\n                        // was truthy before.\n                        var doApplyValue = renderer && (isFirstRender ? valueToApply : true);\n                        if (doApplyValue) {\n                            if (isClassBased) {\n                                setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                            }\n                            else {\n                                setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                            }\n                        }\n                        setDirty(context, i, false);\n                    }\n                }\n                if (flushPlayerBuilders) {\n                    var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                    var playerContext = getPlayerContext(context);\n                    var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                    for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                        var builder = playerContext[i];\n                        var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                        var oldPlayer = playerContext[playerInsertionIndex];\n                        if (builder) {\n                            var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                            if (player !== undefined) {\n                                if (player != null) {\n                                    var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                    wasQueued && totalPlayersQueued++;\n                                }\n                                if (oldPlayer) {\n                                    oldPlayer.destroy();\n                                }\n                            }\n                        }\n                        else if (oldPlayer) {\n                            // the player builder has been removed ... therefore we should delete the associated\n                            // player\n                            oldPlayer.destroy();\n                        }\n                    }\n                    setContextPlayersDirty(context, false);\n                }\n                setContextDirty(context, false);\n            }\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 10 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[9 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[9 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[9 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 2 /* Size */) +\n            0 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 2 /* Size */ +\n            1 /* StyleSanitizerOffset */] ||\n            dirs[1 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n    function assertValidDirectiveIndex(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        if (index >= dirs.length ||\n            dirs[index + 0 /* SinglePropValuesIndexOffset */] === -1) {\n            throw new Error('The provided directive is not registered with the styling context');\n        }\n    }\n\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     */\n    function allocStylingContext$1() {\n        return [0 /* Initial */, 0];\n    }\n    /**\n     * Temporary function that allows for a string-based property name to be\n     * obtained from an index-based property identifier.\n     *\n     * This function will be removed once the new styling refactor code (which\n     * lives inside of `render3/styling_next/`) replaces the existing styling\n     * implementation.\n     */\n    function getBindingNameFromIndex(stylingContext, offset, directiveIndex, isClassBased) {\n        var singleIndex = getSinglePropIndexValue(stylingContext, directiveIndex, offset, isClassBased);\n        return getProp(stylingContext, singleIndex);\n    }\n    function updateContextDirectiveIndex(context, index) {\n        context[1 /* MaxDirectiveIndexPosition */] = index;\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function getProp$1(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getGuardMask(context, index) {\n        return context[index + 0 /* MaskOffset */];\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getValue$1(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return index === context[1 /* MaxDirectiveIndexPosition */];\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     */\n    // the values below are global to all styling code below. Each value\n    // will either increment or mutate each time a styling instruction is\n    // executed. Do not modify the values below.\n    var currentStyleIndex = 0;\n    var currentClassIndex = 0;\n    var stylesBitMask = 0;\n    var classesBitMask = 0;\n    var deferredBindingQueue = [];\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_SIZE_VALUE = 1;\n    var DEFAULT_MASK_VALUE = 0;\n    var DEFAULT_BINDING_INDEX_VALUE = -1;\n    var BIT_MASK_APPLY_ALL = -1;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time its called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, prop, bindingIndex, value, deferRegistration) {\n        var index = currentClassIndex++;\n        if (updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration)) {\n            classesBitMask |= 1 << index;\n        }\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time its called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, prop, bindingIndex, value, deferRegistration) {\n        var index = currentStyleIndex++;\n        if (updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration)) {\n            stylesBitMask |= 1 << index;\n        }\n    }\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex);\n            }\n        }\n        if (data[bindingIndex] !== value) {\n            data[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex) {\n        deferredBindingQueue.splice(0, 0, context, counterIndex, prop, bindingIndex);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     */\n    function registerBinding(context, countId, prop, bindingValue) {\n        var i = 2 /* ValuesStartPosition */;\n        var found = false;\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var p = getProp$1(context, i);\n            found = prop <= p;\n            if (found) {\n                // all style/class bindings are sorted by property name\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId);\n                break;\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop);\n            addBindingIntoContext(context, i, bindingValue, countId);\n        }\n    }\n    function allocateNewContextEntry(context, index, prop) {\n        context.splice(index, 0, DEFAULT_MASK_VALUE, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        // -1 is used because we want the last value that's in the list (not the next slot)\n        var lastValueIndex = index + 3 /* BindingsStartOffset */ + valuesCount - 1;\n        if (typeof bindingValue === 'number') {\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            context[index + 0 /* MaskOffset */] |= 1 << countId;\n        }\n        else if (typeof bindingValue === 'string' && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all class entries in the provided context to the provided element.\n     */\n    function applyClasses(renderer, data, context, element, directiveIndex) {\n        if (allowStylingFlush(context, directiveIndex)) {\n            var isFirstPass = isContextLocked(context);\n            isFirstPass && lockContext(context);\n            applyStyling(context, renderer, element, data, classesBitMask, setClass$1, isFirstPass);\n            currentClassIndex = 0;\n            classesBitMask = 0;\n        }\n    }\n    /**\n     * Applies all style entries in the provided context to the provided element.\n     */\n    function applyStyles(renderer, data, context, element, directiveIndex) {\n        if (allowStylingFlush(context, directiveIndex)) {\n            var isFirstPass = isContextLocked(context);\n            isFirstPass && lockContext(context);\n            applyStyling(context, renderer, element, data, stylesBitMask, setStyle$1, isFirstPass);\n            currentStyleIndex = 0;\n            stylesBitMask = 0;\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMask, applyStylingFn, forceApplyDefaultValues) {\n        deferredBindingQueue.length && flushDeferredBindings();\n        if (bitMask) {\n            var processAllEntries = bitMask === BIT_MASK_APPLY_ALL;\n            var i = 2 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var guardMask = getGuardMask(context, i);\n                // the guard mask value is non-zero if and when\n                // there are binding values present for the property.\n                // If there are ONLY static values (i.e. `style=\"prop:val\")\n                // then the guard value will stay as zero.\n                var processEntry = processAllEntries || (guardMask ? (bitMask & guardMask) : forceApplyDefaultValues);\n                if (processEntry) {\n                    var prop = getProp$1(context, i);\n                    var limit = valuesCount - 1;\n                    for (var j = 0; j <= limit; j++) {\n                        var isFinalValue = j === limit;\n                        var bindingValue = getValue$1(context, i, j);\n                        var bindingIndex = isFinalValue ? DEFAULT_BINDING_INDEX_VALUE : bindingValue;\n                        var valueToApply = isFinalValue ? bindingValue : bindingData[bindingIndex];\n                        if (isValueDefined(valueToApply) || isFinalValue) {\n                            applyStylingFn(renderer, element, prop, valueToApply, bindingIndex);\n                            break;\n                        }\n                    }\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n        }\n    }\n    function isValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle$1 = function (renderer, native, prop, value) {\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass$1 = function (renderer, native, className, value) {\n        if (className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native.classList.add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native.classList.remove(className);\n            }\n        }\n    };\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 2 /* ValuesStartPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp$1(context, i);\n                    var guardMask = getGuardMask(context, i);\n                    var valuesCount = getValuesCount(context, i);\n                    var defaultValue = getDefaultValue(context, i);\n                    var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < valuesCount; j++) {\n                        sources.push(context[bindingsStartPosition + j]);\n                    }\n                    entries[prop] = { prop: prop, guardMask: guardMask, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data) {\n            this.context = context;\n            this._data = _data;\n            this._contextDebug = this.context.debug;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `StylingSummary`.\n             */\n            get: function () {\n                var _this = this;\n                var contextEntries = this._contextDebug.entries;\n                var finalValues = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    finalValues[prop] = { value: value, bindingIndex: bindingIndex };\n                });\n                var entries = {};\n                var values = this.values;\n                var props = Object.keys(values);\n                for (var i = 0; i < props.length; i++) {\n                    var prop = props[i];\n                    var contextEntry = contextEntries[prop];\n                    var sourceValues = contextEntry.sources.map(function (v) {\n                        var value;\n                        var bindingIndex;\n                        if (typeof v === 'number') {\n                            value = _this._data[v];\n                            bindingIndex = v;\n                        }\n                        else {\n                            value = v;\n                            bindingIndex = null;\n                        }\n                        return { bindingIndex: bindingIndex, value: value };\n                    });\n                    var finalValue = finalValues[prop];\n                    var bindingIndex = finalValue.bindingIndex;\n                    bindingIndex = bindingIndex === DEFAULT_BINDING_INDEX_VALUE ? null : bindingIndex;\n                    entries[prop] = { prop: prop, value: finalValue.value, bindingIndex: bindingIndex, sourceValues: sourceValues };\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var mapFn = function (renderer, element, prop, value, bindingIndex) {\n                fn(prop, value, bindingIndex);\n            };\n            applyStyling(this.context, null, mockElement, this._data, BIT_MASK_APPLY_ALL, mapFn);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = isStylingContext(rawValue) ? null : toDebug(readLViewValue(rawValue));\n                var styles = null;\n                var classes = null;\n                if (runtimeIsNewStylingInUse()) {\n                    styles = tNode.newStyles ? new NodeStylingDebug(tNode.newStyles, lView) : null;\n                    classes = tNode.newClasses ? new NodeStylingDebug(tNode.newClasses, lView) : null;\n                }\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the parsed ngProjectAs selector from the node's attributes.\n     * If present, it will check whether the ngProjectAs selector matches any of the projection\n     * selectors.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    var ɵ0$8 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$8)();\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                executeTemplate(tView.template, getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                templateFn && executeTemplate(templateFn, 1 /* Create */, context);\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && executeTemplate(templateFn, 2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    function executeTemplate(templateFn, rf, context) {\n        ΔnamespaceHTML();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Appropriately sets `stylingTemplate` on a TNode\n     *\n     * Does not apply styles to DOM nodes\n     *\n     * @param tNode The node whose `stylingTemplate` to set\n     * @param attrs The attribute array source to set the attributes from\n     * @param attrsStartIndex Optional start index to start processing the `attrs` from\n     */\n    function setNodeStylingTemplate(tView, tNode, attrs, attrsStartIndex) {\n        if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, attrsStartIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n            }\n        }\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n            // TODO (matsko): rename this to `styles` once the old styling impl is gone\n            newStyles: null,\n            // TODO (matsko): rename this to `classes` once the old styling impl is gone\n            newClasses: null,\n        };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n    * Mapping between attributes names that don't correspond to their element property names.\n    */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            tNode,\n            native,\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current[ACTIVE_INDEX] === -1 && isLContainer(current)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < current.length; i++) {\n                    var dynamicViewData = current[i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(hostView) || isCreationMode(lView)) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            executeTemplate(templateFn, getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ΔallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                    var firstView = nodeOrContainer[CONTAINER_HEADER_OFFSET];\n                    if (firstView) {\n                        currentView = firstView;\n                        nextTNode = currentView[TVIEW].node;\n                        // When the walker enters a container, then the beforeNode has to become the local native\n                        // comment node.\n                        beforeNode = nodeOrContainer[NATIVE];\n                    }\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                var firstView = lContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView) {\n                    currentView = firstView;\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                if (tNode.flags & 2 /* isProjected */) {\n                    nextTNode = tNode.projectionNext;\n                }\n                else if (tNode.type === 4 /* ElementContainer */) {\n                    nextTNode = tNode.child || tNode.next;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or find a lContainer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            if (isLContainer(currentView)) {\n                                tNode = currentView[T_HOST];\n                                currentView = currentView[PARENT];\n                                beforeNode = currentView[tNode.index][NATIVE];\n                                break;\n                            }\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.type === 4 /* ElementContainer */ && tNode.child || tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            lContainer.splice(CONTAINER_HEADER_OFFSET + index, 0, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            lContainer.splice(CONTAINER_HEADER_OFFSET + removeIndex, 1);\n            addRemoveViewFromContainer(viewToDetach, false);\n            if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n                !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n                viewToDetach[QUERIES].removeView();\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, lContainer) {\n        var containerNative = lContainer[NATIVE];\n        if (index + 1 < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            var view = lContainer[CONTAINER_HEADER_OFFSET + index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function Δcontainer(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function Δtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ΔcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ΔcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n    * Reporting a TContainer node queries is a 2-step process as we need to:\n    * - check if the container node itself is matching (query might match a <ng-template> node);\n    * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n    * container.\n    *\n    * Those 2 operations need to happen in the specific order (match the container node itself, then\n    * prepare space for nodes from views).\n    */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            var lContainer = lView[tContainerNode.index];\n            if (lContainer[QUERIES]) {\n                // Query container should only exist if it was created through a dynamic view\n                // in a directive constructor. In this case, we must splice the template\n                // matches in before the view matches to ensure query results in embedded views\n                // don't clobber query results on the template node itself.\n                queries.insertNodeBeforeViews(tContainerNode);\n            }\n            else {\n                queries.addNode(tContainerNode);\n                lContainer[QUERIES] = queries.container();\n            }\n        }\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function Δreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @codeGenApi\n     */\n    function Δload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ΔdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return Δinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ΔinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     */\n    function stylingInit() {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var tNode = getTNode(index, lView);\n        updateLastDirectiveIndex(tNode, getActiveDirectiveStylingIndex());\n    }\n    /**\n     * Mirror implementation of the `styleProp()` instruction (found in `instructions/styling.ts`).\n     */\n    function styleProp(prop, value, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var tNode = getTNode(index, lView);\n        var tContext = getStylesContext(tNode);\n        var defer = getActiveDirectiveSuperClassHeight() > 0;\n        updateStyleBinding(tContext, lView, prop, bindingIndex, value, defer);\n    }\n    /**\n     * Mirror implementation of the `classProp()` instruction (found in `instructions/styling.ts`).\n     */\n    function classProp(className, value) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var tNode = getTNode(index, lView);\n        var tContext = getClassesContext(tNode);\n        var defer = getActiveDirectiveSuperClassHeight() > 0;\n        updateClassBinding(tContext, lView, className, bindingIndex, value, defer);\n    }\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * The new styling refactor ensures that styling flushing is called\n     * automatically when a template function exits or a follow-up element\n     * is visited (i.e. when `select(n)` is called). Because the `select(n)`\n     * instruction is not fully implemented yet (it doesn't actually execute\n     * host binding instruction code at the right time), this means that a\n     * styling apply function is still needed.\n     *\n     * This function is a mirror implementation of the `stylingApply()`\n     * instruction (found in `instructions/styling.ts`).\n     */\n    function stylingApply() {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeFromLView(index, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        applyClasses(renderer, lView, getClassesContext(tNode), native, directiveIndex);\n        applyStyles(renderer, lView, getStylesContext(tNode), native, directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.newClasses : tNode.newStyles;\n        if (!context) {\n            context = allocStylingContext$1();\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.newClasses = context;\n            }\n            else {\n                tNode.newStyles = context;\n            }\n        }\n        return context;\n    }\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * The purpose of this function is to traverse through the LView data\n     * for a specific element index and return the native node. Because the\n     * current implementation relies on there being a styling context array,\n     * the code below will need to loop through these array values until it\n     * gets a native element node.\n     *\n     * Note that this code is temporary and will disappear once the new\n     * styling refactor lands in its entirety.\n     */\n    function getNativeFromLView(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper[0 /* ElementPosition */];\n        }\n        else {\n            return slotValue;\n        }\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingIntoContext(tNode, attrs, startIndex) {\n        var classesContext;\n        var stylesContext;\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classesContext = classesContext || getClassesContext(tNode);\n                registerBinding(classesContext, -1, attr, true);\n            }\n            else if (mode == 2 /* Styles */) {\n                stylesContext = stylesContext || getStylesContext(tNode);\n                registerBinding(stylesContext, -1, attr, attrs[++i]);\n            }\n        }\n    }\n    /**\n     * Mirror implementation of the same function found in `instructions/styling.ts`.\n     */\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex(tNode, directiveIndex) {\n        updateContextDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateContextDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n\n    /*\n     * The contents of this file include the instructions for all styling-related\n     * operations in Angular.\n     *\n     * The instructions present in this file are:\n     *\n     * Template level styling instructions:\n     * - styling\n     * - styleMap\n     * - classMap\n     * - styleProp\n     * - classProp\n     * - stylingApply\n     */\n    /**\n     * Allocates style and class binding properties on the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note that this is only used\n     * for binding values (see `elementStart` to learn how to assign static styling\n     * values to an element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `classProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `styleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *\n     * Note that this will allocate the provided style/class bindings to the host element if\n     * this function is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function Δstyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            // this is temporary hack to get the existing styling instructions to\n            // play ball with the new refactored implementation.\n            // TODO (matsko): remove this once the old implementation is not needed.\n            if (runtimeIsNewStylingInUse()) {\n                stylingInit();\n            }\n            // despite the binding being applied in a queue (below), the allocation\n            // of the directive into the context happens right away. The reason for\n            // this is to retain the ordering of the directives (which is important\n            // for the prioritization of bindings).\n            allocateOrUpdateDirectiveIntoContext(tNode.stylingTemplate, directiveStylingIndex);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () {\n                initStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex);\n                registerHostDirective(tNode.stylingTemplate, directiveStylingIndex);\n            });\n        }\n        else {\n            // calling the function below ensures that the template's binding values\n            // are applied as the first set of bindings into the context. If any other\n            // styling bindings are set on the same element (by directives and/or\n            // components) then they will be applied at the end of the `elementEnd`\n            // instruction (because directives are created first before styling is\n            // executed for a new element).\n            initStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        }\n    }\n    function initStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex) {\n        updateContextWithBindings(tNode.stylingTemplate, directiveStylingIndex, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param value New value to write (falsy to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ΔstyleProp(styleIndex, value, suffix, forceOverride) {\n        var index = getSelectedIndex();\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        var stylingContext = getStylingContext(index, getLView());\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, styleIndex, valueToAdd, directiveStylingIndex, forceOverride];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleProp, args);\n        }\n        else {\n            updateStyleProp(stylingContext, styleIndex, valueToAdd, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n        }\n        if (runtimeIsNewStylingInUse()) {\n            var prop = getBindingNameFromIndex(stylingContext, styleIndex, directiveStylingIndex, false);\n            // the reason why we cast the value as `boolean` is\n            // because the new styling refactor does not yet support\n            // sanitization or animation players.\n            styleProp(prop, value, suffix);\n        }\n    }\n    function resolveStylePropValue(value, suffix) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        return valueToAdd;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `styling` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the styling priority structure.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ΔclassProp(classIndex, value, forceOverride) {\n        var index = getSelectedIndex();\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        var stylingContext = getStylingContext(index, getLView());\n        if (directiveStylingIndex) {\n            var args = [stylingContext, classIndex, input, directiveStylingIndex, forceOverride];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassProp, args);\n        }\n        else {\n            updateClassProp(stylingContext, classIndex, input, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n        }\n        if (runtimeIsNewStylingInUse()) {\n            var prop = getBindingNameFromIndex(stylingContext, classIndex, directiveStylingIndex, true);\n            // the reason why we cast the value as `boolean` is\n            // because the new styling refactor does not yet support\n            // sanitization or animation players.\n            classProp(prop, input);\n        }\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ΔstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(index, lView);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, styles, directiveStylingIndex];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleMap, args);\n        }\n        else {\n            var tNode = getTNode(index, lView);\n            // inputs are only evaluated from a template binding into a directive, therefore,\n            // there should not be a situation where a directive host bindings function\n            // evaluates the inputs (this should only happen in the template function)\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n            updateStyleMap(stylingContext, styles);\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ΔclassMap(classes) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(index, lView);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, classes, directiveStylingIndex];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassMap, args);\n        }\n        else {\n            var tNode = getTNode(index, lView);\n            // inputs are only evaluated from a template binding into a directive, therefore,\n            // there should not be a situation where a directive host bindings function\n            // evaluates the inputs (this should only happen in the template function)\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            updateClassMap(stylingContext, classes);\n        }\n    }\n    /**\n     * Apply all style and class binding values to the element.\n     *\n     * This instruction is meant to be run after `styleMap`, `classMap`,\n     * `styleProp` or `classProp` instructions have been run and will\n     * only apply styling to the element if any styling bindings have been updated.\n     *\n     * @codeGenApi\n     */\n    function ΔstylingApply() {\n        var index = getSelectedIndex();\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1() || DEFAULT_TEMPLATE_DIRECTIVE_INDEX;\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        // if a non-element value is being processed then we can't render values\n        // on the element at all therefore by setting the renderer to null then\n        // the styling apply code knows not to actually apply the values...\n        var renderer = tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var stylingContext = getStylingContext(index, lView);\n        if (runtimeAllowOldStyling()) {\n            var totalPlayersQueued = renderStyling(stylingContext, renderer, lView, isFirstRender, null, null, directiveStylingIndex);\n            if (totalPlayersQueued > 0) {\n                var rootContext = getRootContext(lView);\n                scheduleTick(rootContext, 2 /* FlushPlayers */);\n            }\n        }\n        // because select(n) may not run between every instruction, the cached styling\n        // context may not get cleared between elements. The reason for this is because\n        // styling bindings (like `[style]` and `[class]`) are not recognized as property\n        // bindings by default so a select(n) instruction is not generated. To ensure the\n        // context is loaded correctly for the next element the cache below is pre-emptively\n        // cleared because there is no code in Angular that applies more styling code after a\n        // styling flush has occurred. Note that this will be fixed once FW-1254 lands.\n        setCachedStylingContext(null);\n        if (runtimeIsNewStylingInUse()) {\n            stylingApply();\n        }\n    }\n    function getActiveDirectiveStylingIndex$1() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    function getStylingContext(index, lView) {\n        var context = getCachedStylingContext();\n        if (!context) {\n            context = getStylingContextFromLView(index + HEADER_OFFSET, lView);\n            setCachedStylingContext(context);\n        }\n        else if (ngDevMode) {\n            var actualContext = getStylingContextFromLView(index + HEADER_OFFSET, lView);\n            assertEqual(context, actualContext, 'The cached styling context is invalid');\n        }\n        return context;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ΔelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        var renderer = lView[RENDERER];\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        var lastAttrIndex = -1;\n        if (attrs) {\n            lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            setNodeStylingTemplate(tView, tNode, attrs, lastAttrIndex);\n            if (tNode.stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, tNode.stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, tNode.stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        if (runtimeIsNewStylingInUse() && lastAttrIndex >= 0) {\n            registerInitialStylingIntoContext(tNode, attrs, lastAttrIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ΔelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        var stylingContext = null;\n        if (hasClassInput(previousOrParentTNode)) {\n            stylingContext = getStylingContextFromLView(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            stylingContext =\n                stylingContext || getStylingContextFromLView(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function Δelement(index, name, attrs, localRefs) {\n        ΔelementStart(index, name, attrs, localRefs);\n        ΔelementEnd();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ΔelementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                    element.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element.setAttributeNS(namespace, name, strValue) :\n                        element.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ΔelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n                if (tNode.stylingTemplate) {\n                    patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n                else {\n                    tNode.stylingTemplate =\n                        initializeStaticContext(attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ΔelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        if (attrs) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            setNodeStylingTemplate(tView, tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ΔelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ΔembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ΔembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ΔgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function Δlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ΔcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ΔnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     *\n     * @codeGenApi\n     */\n    function ΔprojectionDef(selectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingProjectionSelectorIndex(componentChild, selectors) : 0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function Δprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function Δproperty(propName, value, sanitizer, nativeOnly) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var bindReconciledValue = Δbind(value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, nativeOnly);\n        }\n        return Δproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     *\n     * @codeGenApi\n     */\n    function Δbind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n    * **TODO: Remove this function after `property` is in use**\n    * Update a property on an element.\n    *\n    * If the property name also exists as an input property on one of the element's directives,\n    * the component property will be set instead of the element property. This check must\n    * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n    *\n    * @param index The index of the element to update in the data array\n    * @param propName Name of property. Because it is going to DOM, this is not subject to\n    *        renaming as part of minification.\n    * @param value New value to write.\n    * @param sanitizer An optional function used to sanitize the value.\n    * @param nativeOnly Whether or not we should only set native properties and skip input check\n    * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n    */\n    function ΔelementProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n        }\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n     */\n    function ΔcomponentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ΔinterpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /////////////////////////////////////////////////////////////////////\n    /// NEW INSTRUCTIONS\n    /////////////////////////////////////////////////////////////////////\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate(propName, v0, sanitizer) {\n        ΔpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ΔpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation1(prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation2(prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation3(prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolateV(propName, values, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ΔinterpolationV(values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function Δselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `Δselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function Δtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ΔtextBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element, renderStringify(value)) :\n                element.textContent = renderStringify(value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContextFromLView(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n            setActiveHostElement(null);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ΔNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ΔInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ΔNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$2) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ΔdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ΔdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ΔProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var currentQueries = this._declarationParentView[QUERIES];\n                    // Query container may be missing if this view was created in a directive\n                    // constructor. Create it now to avoid losing results in embedded views.\n                    if (currentQueries && this._hostLContainer[QUERIES] == null) {\n                        this._hostLContainer[QUERIES] = currentQueries.container();\n                    }\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () {\n                        // Note that if there are no views, the container\n                        // length will be smaller than the header offset.\n                        var viewAmount = this._lContainer.length - CONTAINER_HEADER_OFFSET;\n                        return viewAmount > 0 ? viewAmount : 0;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-rc.0+241.sha-f03475c.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ΔdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ΔdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(Δinject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = (isInternalRootView || isIsolated) ?\n                createRootContext() :\n                rootViewInjector.get(ROOT_CONTEXT);\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // tslint:disable-next-line:no-toplevel-property-access\n        _global['ngI18nClosureMode'] =\n            // TODO(FW-1250): validate that this actually, you know, works.\n            // tslint:disable-next-line:no-toplevel-property-access\n            typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list, mapFn) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(mapFn ? mapFn(item) : item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function Δi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function Δi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function Δi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        ΔelementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    ΔelementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    ΔtextBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = Δload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function Δi18n(index, message, subTemplateIndex) {\n        Δi18nStart(index, message, subTemplateIndex);\n        Δi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function Δi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        ΔelementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     *\n     * @codeGenApi\n     */\n    function Δi18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function Δi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @publicApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function Δi18nLocalize(input, placeholders) {\n        if (placeholders === void 0) { placeholders = {}; }\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        return Object.keys(placeholders).length ?\n            input.replace(LOCALIZE_PH_REGEXP, function (match, key) { return placeholders[key] || ''; }) :\n            input;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            var moduleType = this.moduleType;\n            var moduleRef = new NgModuleRef$1(moduleType, parentInjector);\n            var ngModuleDef = getNgModuleDef(moduleType);\n            ngModuleDef && ngModuleDef.id &&\n                registerNgModuleType(ngModuleDef.id, moduleType);\n            return moduleRef;\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function Δpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ΔpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ΔpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ΔpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ΔpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ?\n            ΔpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ΔpipeBindV(index, slotOffset, values) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode, false);\n            add(this.shallow, tNode, false);\n        };\n        LQueries_.prototype.insertNodeBeforeViews = function (tNode) {\n            add(this.deep, tNode, true);\n            add(this.shallow, tNode, true);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    /**\n     * Add query matches for a given node.\n     *\n     * @param query The first query in the linked list\n     * @param tNode The TNode to match against queries\n     * @param insertBeforeContainer Whether or not we should add matches before the last\n     * container array. This mode is necessary if the query container had to be created\n     * out of order (e.g. a view was created in a constructor)\n     */\n    function add(query, tNode, insertBeforeContainer) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result, insertBeforeContainer);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result, insertBeforeContainer);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue, insertBeforeViewMatches) {\n        // Views created in constructors may have their container values created too early. In this case,\n        // ensure template node results are spliced before container results. Otherwise, results inside\n        // embedded views will appear before results on parent template nodes when flattened.\n        insertBeforeViewMatches ? query.values.splice(-1, 0, matchingValue) :\n            query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ΔqueryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ΔstaticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = ΔviewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ΔviewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n     * Loads current View Query and moves the pointer/index to the next View Query in LView.\n     *\n     * @codeGenApi\n     */\n    function ΔloadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return Δload(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ΔcontentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ΔstaticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = ΔcontentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ΔloadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ΔtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$9 = function () { return ({\n        'ΔdefineBase': ΔdefineBase,\n        'ΔdefineComponent': ΔdefineComponent,\n        'ΔdefineDirective': ΔdefineDirective,\n        'ΔdefineInjectable': ΔdefineInjectable,\n        'ΔdefineInjector': ΔdefineInjector,\n        'ΔdefineNgModule': ΔdefineNgModule,\n        'ΔdefinePipe': ΔdefinePipe,\n        'ΔdirectiveInject': ΔdirectiveInject,\n        'ΔgetFactoryOf': ΔgetFactoryOf,\n        'ΔgetInheritedFactory': ΔgetInheritedFactory,\n        'Δinject': Δinject,\n        'ΔinjectAttribute': ΔinjectAttribute,\n        'ΔtemplateRefExtractor': ΔtemplateRefExtractor,\n        'ΔNgOnChangesFeature': ΔNgOnChangesFeature,\n        'ΔProvidersFeature': ΔProvidersFeature,\n        'ΔInheritDefinitionFeature': ΔInheritDefinitionFeature,\n        'ΔelementAttribute': ΔelementAttribute,\n        'Δbind': Δbind,\n        'Δcontainer': Δcontainer,\n        'ΔnextContext': ΔnextContext,\n        'ΔcontainerRefreshStart': ΔcontainerRefreshStart,\n        'ΔcontainerRefreshEnd': ΔcontainerRefreshEnd,\n        'ΔnamespaceHTML': ΔnamespaceHTML,\n        'ΔnamespaceMathML': ΔnamespaceMathML,\n        'ΔnamespaceSVG': ΔnamespaceSVG,\n        'ΔenableBindings': ΔenableBindings,\n        'ΔdisableBindings': ΔdisableBindings,\n        'ΔallocHostVars': ΔallocHostVars,\n        'ΔelementStart': ΔelementStart,\n        'ΔelementEnd': ΔelementEnd,\n        'Δelement': Δelement,\n        'ΔelementContainerStart': ΔelementContainerStart,\n        'ΔelementContainerEnd': ΔelementContainerEnd,\n        'ΔpureFunction0': ΔpureFunction0,\n        'ΔpureFunction1': ΔpureFunction1,\n        'ΔpureFunction2': ΔpureFunction2,\n        'ΔpureFunction3': ΔpureFunction3,\n        'ΔpureFunction4': ΔpureFunction4,\n        'ΔpureFunction5': ΔpureFunction5,\n        'ΔpureFunction6': ΔpureFunction6,\n        'ΔpureFunction7': ΔpureFunction7,\n        'ΔpureFunction8': ΔpureFunction8,\n        'ΔpureFunctionV': ΔpureFunctionV,\n        'ΔgetCurrentView': ΔgetCurrentView,\n        'ΔrestoreView': ΔrestoreView,\n        'Δinterpolation1': Δinterpolation1,\n        'Δinterpolation2': Δinterpolation2,\n        'Δinterpolation3': Δinterpolation3,\n        'Δinterpolation4': Δinterpolation4,\n        'Δinterpolation5': Δinterpolation5,\n        'Δinterpolation6': Δinterpolation6,\n        'Δinterpolation7': Δinterpolation7,\n        'Δinterpolation8': Δinterpolation8,\n        'ΔinterpolationV': ΔinterpolationV,\n        'Δlistener': Δlistener,\n        'Δload': Δload,\n        'Δprojection': Δprojection,\n        'ΔelementProperty': ΔelementProperty,\n        'ΔcomponentHostSyntheticProperty': ΔcomponentHostSyntheticProperty,\n        'ΔcomponentHostSyntheticListener': ΔcomponentHostSyntheticListener,\n        'ΔpipeBind1': ΔpipeBind1,\n        'ΔpipeBind2': ΔpipeBind2,\n        'ΔpipeBind3': ΔpipeBind3,\n        'ΔpipeBind4': ΔpipeBind4,\n        'ΔpipeBindV': ΔpipeBindV,\n        'ΔprojectionDef': ΔprojectionDef,\n        'Δproperty': Δproperty,\n        'ΔpropertyInterpolate': ΔpropertyInterpolate,\n        'ΔpropertyInterpolate1': ΔpropertyInterpolate1,\n        'ΔpropertyInterpolate2': ΔpropertyInterpolate2,\n        'ΔpropertyInterpolate3': ΔpropertyInterpolate3,\n        'ΔpropertyInterpolate4': ΔpropertyInterpolate4,\n        'ΔpropertyInterpolate5': ΔpropertyInterpolate5,\n        'ΔpropertyInterpolate6': ΔpropertyInterpolate6,\n        'ΔpropertyInterpolate7': ΔpropertyInterpolate7,\n        'ΔpropertyInterpolate8': ΔpropertyInterpolate8,\n        'ΔpropertyInterpolateV': ΔpropertyInterpolateV,\n        'Δpipe': Δpipe,\n        'ΔqueryRefresh': ΔqueryRefresh,\n        'ΔviewQuery': ΔviewQuery,\n        'ΔstaticViewQuery': ΔstaticViewQuery,\n        'ΔstaticContentQuery': ΔstaticContentQuery,\n        'ΔloadViewQuery': ΔloadViewQuery,\n        'ΔcontentQuery': ΔcontentQuery,\n        'ΔloadContentQuery': ΔloadContentQuery,\n        'Δreference': Δreference,\n        'ΔelementHostAttrs': ΔelementHostAttrs,\n        'ΔclassMap': ΔclassMap,\n        'Δstyling': Δstyling,\n        'ΔstyleMap': ΔstyleMap,\n        'ΔstyleProp': ΔstyleProp,\n        'ΔstylingApply': ΔstylingApply,\n        'ΔclassProp': ΔclassProp,\n        'Δselect': Δselect,\n        'Δtemplate': Δtemplate,\n        'Δtext': Δtext,\n        'ΔtextBinding': ΔtextBinding,\n        'ΔembeddedViewStart': ΔembeddedViewStart,\n        'ΔembeddedViewEnd': ΔembeddedViewEnd,\n        'Δi18n': Δi18n,\n        'Δi18nAttributes': Δi18nAttributes,\n        'Δi18nExp': Δi18nExp,\n        'Δi18nStart': Δi18nStart,\n        'Δi18nEnd': Δi18nEnd,\n        'Δi18nApply': Δi18nApply,\n        'Δi18nPostprocess': Δi18nPostprocess,\n        'Δi18nLocalize': Δi18nLocalize,\n        'ΔresolveWindow': ΔresolveWindow,\n        'ΔresolveDocument': ΔresolveDocument,\n        'ΔresolveBody': ΔresolveBody,\n        'ΔsetComponentScope': ΔsetComponentScope,\n        'ΔsetNgModuleScope': ΔsetNgModuleScope,\n        'ΔsanitizeHtml': ΔsanitizeHtml,\n        'ΔsanitizeStyle': ΔsanitizeStyle,\n        'ΔdefaultStyleSanitizer': ΔdefaultStyleSanitizer,\n        'ΔsanitizeResourceUrl': ΔsanitizeResourceUrl,\n        'ΔsanitizeScript': ΔsanitizeScript,\n        'ΔsanitizeUrl': ΔsanitizeUrl,\n        'ΔsanitizeUrlOrResourceUrl': ΔsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$9)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports, unwrapModuleWithProvidersImports).forEach(verifySemanticsOfNgModuleDef);\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports), resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(verifyDeclarationIsUnique);\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.template.ngPrivateData = undefined;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$2, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$2,\n            outputs: metadata.outputs || EMPTY_ARRAY$2,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$a = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$2 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$a, undefined, undefined, ɵ1$2);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (ngModule) { return ngModule; }, ɵ1$3 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$b, undefined, undefined, ɵ1$3);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ΔdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext$1(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContextFromLView(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContextFromLView(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * Walk the TNode tree to find matches for the predicate.\n     *\n     * @param parentElement the element from which the walk is started\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(getNativeByTNode(tNode, lView), predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild)\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            else {\n                // Otherwise, its children have to be processed.\n                if (tNode.child)\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode = head_1_1.value;\n                        _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                if (head) {\n                    var nextLView = componentView[PARENT];\n                    var nextTNode_1 = nextLView[TVIEW].data[head.index];\n                    _queryNodeChildrenR3(nextTNode_1, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n        }\n        else {\n            // Case 4: the TNode is a view.\n            if (tNode.child) {\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        // To determine the next node to be processed, we need to use the next or the projectionNext link,\n        // depending on whether the current node has been projected.\n        var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n        if (nextTNode) {\n            _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (debugNode && (elementsOnly ? debugNode instanceof DebugElement__POST_R3__ : true) &&\n                predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_b = NullInjector;\n    exports.ɵangular_packages_core_core_a = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_c = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_d = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bp = getRootContext;\n    exports.ɵangular_packages_core_core_bo = loadInternal;\n    exports.ɵangular_packages_core_core_g = createElementRef;\n    exports.ɵangular_packages_core_core_h = createTemplateRef;\n    exports.ɵangular_packages_core_core_i = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bn = noSideEffects;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bq = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ΔdefineInjectable = ΔdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.ΔdefineInjector = ΔdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.Δinject = Δinject;\n    exports.inject = inject;\n    exports.ɵɵinject = ɵɵinject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ΔdefineBase = ΔdefineBase;\n    exports.ΔdefineComponent = ΔdefineComponent;\n    exports.ΔdefineDirective = ΔdefineDirective;\n    exports.ΔdefinePipe = ΔdefinePipe;\n    exports.ΔdefineNgModule = ΔdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ΔdirectiveInject = ΔdirectiveInject;\n    exports.ΔinjectAttribute = ΔinjectAttribute;\n    exports.ΔgetFactoryOf = ΔgetFactoryOf;\n    exports.ΔgetInheritedFactory = ΔgetInheritedFactory;\n    exports.ΔsetComponentScope = ΔsetComponentScope;\n    exports.ΔsetNgModuleScope = ΔsetNgModuleScope;\n    exports.ΔtemplateRefExtractor = ΔtemplateRefExtractor;\n    exports.ΔProvidersFeature = ΔProvidersFeature;\n    exports.ΔInheritDefinitionFeature = ΔInheritDefinitionFeature;\n    exports.ΔNgOnChangesFeature = ΔNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.Δcontainer = Δcontainer;\n    exports.ΔnextContext = ΔnextContext;\n    exports.ΔelementStart = ΔelementStart;\n    exports.ΔnamespaceHTML = ΔnamespaceHTML;\n    exports.ΔnamespaceMathML = ΔnamespaceMathML;\n    exports.ΔnamespaceSVG = ΔnamespaceSVG;\n    exports.Δelement = Δelement;\n    exports.Δlistener = Δlistener;\n    exports.Δtext = Δtext;\n    exports.ΔembeddedViewStart = ΔembeddedViewStart;\n    exports.Δprojection = Δprojection;\n    exports.Δbind = Δbind;\n    exports.Δinterpolation1 = Δinterpolation1;\n    exports.Δinterpolation2 = Δinterpolation2;\n    exports.Δinterpolation3 = Δinterpolation3;\n    exports.Δinterpolation4 = Δinterpolation4;\n    exports.Δinterpolation5 = Δinterpolation5;\n    exports.Δinterpolation6 = Δinterpolation6;\n    exports.Δinterpolation7 = Δinterpolation7;\n    exports.Δinterpolation8 = Δinterpolation8;\n    exports.ΔinterpolationV = ΔinterpolationV;\n    exports.ΔpipeBind1 = ΔpipeBind1;\n    exports.ΔpipeBind2 = ΔpipeBind2;\n    exports.ΔpipeBind3 = ΔpipeBind3;\n    exports.ΔpipeBind4 = ΔpipeBind4;\n    exports.ΔpipeBindV = ΔpipeBindV;\n    exports.ΔpureFunction0 = ΔpureFunction0;\n    exports.ΔpureFunction1 = ΔpureFunction1;\n    exports.ΔpureFunction2 = ΔpureFunction2;\n    exports.ΔpureFunction3 = ΔpureFunction3;\n    exports.ΔpureFunction4 = ΔpureFunction4;\n    exports.ΔpureFunction5 = ΔpureFunction5;\n    exports.ΔpureFunction6 = ΔpureFunction6;\n    exports.ΔpureFunction7 = ΔpureFunction7;\n    exports.ΔpureFunction8 = ΔpureFunction8;\n    exports.ΔpureFunctionV = ΔpureFunctionV;\n    exports.ΔgetCurrentView = ΔgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ΔrestoreView = ΔrestoreView;\n    exports.ΔcontainerRefreshStart = ΔcontainerRefreshStart;\n    exports.ΔcontainerRefreshEnd = ΔcontainerRefreshEnd;\n    exports.ΔqueryRefresh = ΔqueryRefresh;\n    exports.ΔviewQuery = ΔviewQuery;\n    exports.ΔstaticViewQuery = ΔstaticViewQuery;\n    exports.ΔstaticContentQuery = ΔstaticContentQuery;\n    exports.ΔloadViewQuery = ΔloadViewQuery;\n    exports.ΔcontentQuery = ΔcontentQuery;\n    exports.ΔloadContentQuery = ΔloadContentQuery;\n    exports.ΔelementEnd = ΔelementEnd;\n    exports.ΔelementProperty = ΔelementProperty;\n    exports.Δproperty = Δproperty;\n    exports.ΔpropertyInterpolate = ΔpropertyInterpolate;\n    exports.ΔpropertyInterpolate1 = ΔpropertyInterpolate1;\n    exports.ΔpropertyInterpolate2 = ΔpropertyInterpolate2;\n    exports.ΔpropertyInterpolate3 = ΔpropertyInterpolate3;\n    exports.ΔpropertyInterpolate4 = ΔpropertyInterpolate4;\n    exports.ΔpropertyInterpolate5 = ΔpropertyInterpolate5;\n    exports.ΔpropertyInterpolate6 = ΔpropertyInterpolate6;\n    exports.ΔpropertyInterpolate7 = ΔpropertyInterpolate7;\n    exports.ΔpropertyInterpolate8 = ΔpropertyInterpolate8;\n    exports.ΔpropertyInterpolateV = ΔpropertyInterpolateV;\n    exports.ΔcomponentHostSyntheticProperty = ΔcomponentHostSyntheticProperty;\n    exports.ΔcomponentHostSyntheticListener = ΔcomponentHostSyntheticListener;\n    exports.ΔprojectionDef = ΔprojectionDef;\n    exports.Δreference = Δreference;\n    exports.ΔenableBindings = ΔenableBindings;\n    exports.ΔdisableBindings = ΔdisableBindings;\n    exports.ΔallocHostVars = ΔallocHostVars;\n    exports.ΔelementAttribute = ΔelementAttribute;\n    exports.ΔelementContainerStart = ΔelementContainerStart;\n    exports.ΔelementContainerEnd = ΔelementContainerEnd;\n    exports.Δstyling = Δstyling;\n    exports.ΔstyleMap = ΔstyleMap;\n    exports.ΔclassMap = ΔclassMap;\n    exports.ΔstyleProp = ΔstyleProp;\n    exports.ΔstylingApply = ΔstylingApply;\n    exports.ΔclassProp = ΔclassProp;\n    exports.ΔelementHostAttrs = ΔelementHostAttrs;\n    exports.Δselect = Δselect;\n    exports.ΔtextBinding = ΔtextBinding;\n    exports.Δtemplate = Δtemplate;\n    exports.ΔembeddedViewEnd = ΔembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.Δload = Δload;\n    exports.Δpipe = Δpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.Δi18n = Δi18n;\n    exports.Δi18nAttributes = Δi18nAttributes;\n    exports.Δi18nExp = Δi18nExp;\n    exports.Δi18nStart = Δi18nStart;\n    exports.Δi18nEnd = Δi18nEnd;\n    exports.Δi18nApply = Δi18nApply;\n    exports.Δi18nPostprocess = Δi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.Δi18nLocalize = Δi18nLocalize;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ΔresolveWindow = ΔresolveWindow;\n    exports.ΔresolveDocument = ΔresolveDocument;\n    exports.ΔresolveBody = ΔresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ΔsanitizeHtml = ΔsanitizeHtml;\n    exports.ΔsanitizeStyle = ΔsanitizeStyle;\n    exports.ΔdefaultStyleSanitizer = ΔdefaultStyleSanitizer;\n    exports.ΔsanitizeScript = ΔsanitizeScript;\n    exports.ΔsanitizeUrl = ΔsanitizeUrl;\n    exports.ΔsanitizeResourceUrl = ΔsanitizeResourceUrl;\n    exports.ΔsanitizeUrlOrResourceUrl = ΔsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}