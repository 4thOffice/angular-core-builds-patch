{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","metadata","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ViewEncapsulation","Set","componentNeedsResolution","old","response","ngDevModeResetPerfCounters","firstTemplatePass","tNode","tView","rendererCreateTextNode","rendererSetText","rendererCreateElement","rendererAddEventListener","rendererSetAttribute","rendererRemoveAttribute","rendererSetProperty","rendererSetClassName","rendererAddClass","rendererRemoveClass","rendererSetStyle","rendererRemoveStyle","rendererDestroy","rendererDestroyNode","rendererMoveNode","rendererRemoveNode","rendererCreateComment","stylingMap","stylingMapCacheMiss","stylingProp","stylingPropCacheMiss","stylingApply","stylingApplyCacheMiss","EMPTY_OBJ","EMPTY_ARRAY","renderStringify","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","throwError","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","NATIVE","VIEWS","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","getNativeByIndex","lView","getNativeByTNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","elementDepthCount","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","ɵɵenableBindings","ɵɵdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","getSelectedIndex","RendererStyleFlags3","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","DEFAULT_TEMPLATE_DIRECTIVE_INDEX","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","sanitizer","initialStyles","initialClasses","allocateOrUpdateDirectiveIntoContext","singlePropValuesIndex","styleSanitizer","directiveRegistry","limit","propValuesStartPosition","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","destroy","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ɵɵdefaultStyleSanitizer","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","ELEMENT_MARKER","COMMENT_MARKER","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","bindingIndex","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","throwMultipleComponentError","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","attrValue","NO_CHANGE","enqueueHostInstruction","priority","instructionFn","instructionFnArgs","buffer","findNextInsertionIndex","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","isMultiValueCacheHit","ignoreAllStyleUpdates","readCachedMapValue","classesPlayerBuilder","ClassAndStylePlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","playerBuildersAreDirty","classesPlayerBuilderIndex","hasPlayerBuilderChanged","setPlayerBuilder","stylesPlayerBuilderIndex","multiStylesStartIndex","getMultiStylesStartIndex","multiClassesStartIndex","getMultiClassesStartIndex","multiClassesEndIndex","totalNewEntries","patchStylingMapIntoContext","setContextPlayersDirty","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","updateClassProp","offset","input","forceOverride","updateSingleStylingValue","updateStyleProp","isClassBased","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","value_1","currPlayerIndex","newIndex","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","store","DashCase","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","a","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","keyValues","dirs","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","registerMultiMapEntry","count","staticStyles","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","isSelectorInSelectorList","list","selectorListLoop","currentSelectorInList","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentView","componentTView","checkView","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElementNS","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","setNodeStylingTemplate","attrsStartIndex","stylingAttrsStartIndex","executeContentQueries","isContentQueryHost","createDirectivesAndLocals","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","propertyMetadataStartIndex","propertyMetadataEndIndex","initialInputs","tViews","projectionNext","projection","onElementCreationFns","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","privateName","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","lViewOrLContainer","markViewDirty","parent_2","scheduleTick","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","applyOnCreateInstructions","fns","ɵɵallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","markDirty","getLContainer","embeddedView","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","head","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","views","detachView","removeIndex","viewToDetach","removeView","destroyLView","destroyViewTree","rootView","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","ɵɵcontainer","containerInternal","addTContainerToQueries","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","addNode","comment","createComment","ɵɵreference","getContextLView","ɵɵload","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","accumulatedClasses","accumulatedStyles","ɵɵelementStyling","classBindingNames","styleBindingNames","initElementStyling","ɵɵelementHostStyling","directiveStylingIndex","getActiveDirectiveStylingIndex","registerHostDirective","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","staticModeOnly","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","ɵɵelementStyleProp","styleIndex","valueToAdd","resolveStylePropValue","ɵɵelementHostStyleProp","hostElementIndex","ɵɵelementClassProp","classIndex","booleanOrNull","ɵɵelementHostClassProp","ɵɵelementStylingMap","classes","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","ɵɵelementHostStylingMap","ɵɵelementStylingApply","elementStylingApplyInternal","ɵɵelementHostStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","allowFlush","flushQueue","isContextDirty","flushPlayerBuilders","multiStartIndex","directiveIndex_1","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","ɵɵelementStart","initialStylesIndex","initialClassesIndex","getElementDepthCount","increaseElementDepthCount","currentQueries","clone","ɵɵelementEnd","decreaseElementDepthCount","getInitialStyleStringValue","initialStyleValues","styleString","ɵɵelement","ɵɵelementAttribute","strValue","ɵɵelementHostAttrs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","cleanupFn","listen","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","ɵɵprojection","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵbind","ɵɵelementProperty","ɵɵcomponentHostSyntheticProperty","ɵɵinterpolationV","ɵɵinterpolation1","v0","ɵɵinterpolation2","i0","v1","ɵɵinterpolation3","i1","v2","ɵɵinterpolation4","i2","v3","ɵɵinterpolation5","i3","v4","ɵɵinterpolation6","i4","v5","ɵɵinterpolation7","i5","v6","ɵɵinterpolation8","i6","v7","ɵɵselect","ɵɵtext","textNative","ɵɵtextBinding","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","move","shift","commentNode","nativeNextSibling","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","goog","getMsg","LocaleDataIndex","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","addAllToArray","items","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","cursor","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","expression","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","setLocaleId","localeId","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","resultsTree","flatten","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","ɵɵqueryRefresh","queryListImpl","ɵɵstaticViewQuery","ɵɵviewQuery","ɵɵloadViewQuery","ɵɵcontentQuery","contentQuery","tViewContentQueries","ɵɵstaticContentQuery","ɵɵloadContentQuery","ɵɵtemplateRefExtractor","angularCoreEnv","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$3","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$1","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesInheritance","part","viewQueries","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","LOCALE_ID$1","TRANSLATIONS$1","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNodeChildrenInContainerR3","nextLView","childView","debugNode","getDebugNode","_nativeNodeToDebugNode","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetLocaleId","ɵDEFAULT_LOCALE_ID","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.12+16.sha-8027b3e.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵinject instead.\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n            stylingMap: 0,\n            stylingMapCacheMiss: 0,\n            stylingProp: 0,\n            stylingPropCacheMiss: 0,\n            stylingApply: 0,\n            stylingApplyCacheMiss: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        _global['ngDevMode'] = newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof _global['ngDevMode'] === 'undefined' || _global['ngDevMode']) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        var ngModuleDef = getNgModuleDef(type, true);\n        ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n        ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n        ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, QUERIES and T_HOST are indices 3, 4, 5 and 6.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 7;\n    var VIEWS = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n            activeDirectiveId = MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        ngDevMode &&\n            assertGreaterThan(_selectedIndex, -1, 'select() should be called prior to retrieving the selected index');\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements no `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The default directive styling index value for template-based bindings.\n     *\n     * All host-level bindings (e.g. `hostStyleProp` and `hostStylingMap`) are\n     * assigned a directive styling index value based on the current directive\n     * uniqueId and the directive super-class inheritance depth. But for template\n     * bindings they always have the same directive styling index value.\n     */\n    var DEFAULT_TEMPLATE_DIRECTIVE_INDEX = 0;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateOrUpdateDirectiveIntoContext(context, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropValuesIndex, styleSanitizer) {\n        if (singlePropValuesIndex === void 0) { singlePropValuesIndex = -1; }\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        var limit = index + 2 /* Size */;\n        for (var i = directiveRegistry.length; i < limit; i += 2 /* Size */) {\n            // -1 is used to signal that the directive has been allocated, but\n            // no actual style or class bindings have been registered yet...\n            directiveRegistry.push(-1, null);\n        }\n        var propValuesStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        if (singlePropValuesIndex >= 0 && directiveRegistry[propValuesStartPosition] === -1) {\n            directiveRegistry[propValuesStartPosition] = singlePropValuesIndex;\n            directiveRegistry[index + 1 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 10 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[9 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[9 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return ɵɵsanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer[VIEWS].map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /*\n     * This file contains the logic to defer all hostBindings-related styling code to run\n     * at a later point, instead of immediately (as is the case with how template-level\n     * styling instructions are run).\n     *\n     * Certain styling instructions, present within directives, components and sub-classed\n     * directives, are evaluated at different points (depending on priority) and will therefore\n     * not be applied to the styling context of an element immediately. They are instead\n     * designed to be applied just before styling is applied to an element.\n     *\n     * (The priority for when certain host-related styling operations are executed is discussed\n     * more within `interfaces/styling.ts`.)\n     */\n    function registerHostDirective(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (!buffer) {\n            buffer = context[8 /* HostInstructionsQueue */] = [DEFAULT_TEMPLATE_DIRECTIVE_INDEX];\n        }\n        buffer[0 /* LastRegisteredDirectiveIndexPosition */] = directiveIndex;\n    }\n    /**\n     * Queues a styling instruction to be run just before `renderStyling()` is executed.\n     */\n    function enqueueHostInstruction(context, priority, instructionFn, instructionFnArgs) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        var index = findNextInsertionIndex(buffer, priority);\n        buffer.splice(index, 0, priority, instructionFn, instructionFnArgs);\n    }\n    /**\n     * Figures out where exactly to to insert the next host instruction queue entry.\n     */\n    function findNextInsertionIndex(buffer, priority) {\n        for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n            var p = buffer[i + 0 /* DirectiveIndexOffset */];\n            if (p > priority) {\n                return i;\n            }\n        }\n        return buffer.length;\n    }\n    /**\n     * Iterates through the host instructions queue (if present within the provided\n     * context) and executes each queued instruction entry.\n     */\n    function flushQueue(context) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n                var fn = buffer[i + 1 /* InstructionFnOffset */];\n                var args = buffer[i + 2 /* ParamsOffset */];\n                fn.apply(this, args);\n            }\n            buffer.length = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Determines whether or not to allow the host instructions queue to be flushed or not.\n     *\n     * Because the hostBindings function code is unaware of the presence of other host bindings\n     * (as well as the template function) then styling is evaluated multiple times per element.\n     * To prevent style and class values from being applied to the element multiple times, a\n     * flush is only allowed when the last directive (the directive that was registered into\n     * the styling context) attempts to render its styling.\n     */\n    function allowFlush(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            return buffer[0 /* LastRegisteredDirectiveIndexPosition */] ===\n                directiveIndex;\n        }\n        return true;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveIndex);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveIndex) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex);\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveIndex, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var isNewDirective = findOrPatchDirectiveIntoRegistry(context, directiveIndex, false, styleSanitizer);\n        if (!isNewDirective) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 10 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveIndex, staticModeOnly, styleSanitizer) {\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        var singlePropStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        // this means that the directive has already been registered into the registry\n        if (index < directiveRegistry.length &&\n            directiveRegistry[singlePropStartPosition] >= 0)\n            return false;\n        var singlePropsStartIndex = staticModeOnly ? -1 : context[5 /* SinglePropOffsetPositions */].length;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropsStartIndex, styleSanitizer);\n        return true;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        ngDevMode && ngDevMode.stylingMap++;\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[0 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput['value'] : stylesInput;\n        var classNames = EMPTY_ARRAY;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassesStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n        ngDevMode && ngDevMode.stylingMapCacheMiss++;\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, true, directiveIndex, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, false, directiveIndex, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveIndex, forceOverride) {\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        ngDevMode && ngDevMode.stylingProp++;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n            ngDevMode && ngDevMode.stylingPropCacheMiss++;\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var totalPlayersQueued = 0;\n        ngDevMode && ngDevMode.stylingApply++;\n        // this prevents multiple attempts to render style/class values on\n        // the same element...\n        if (allowFlush(context, directiveIndex)) {\n            // all styling instructions present within any hostBindings functions\n            // do not update the context immediately when called. They are instead\n            // queued up and applied to the context right at this point. Why? This\n            // is because Angular evaluates component/directive and directive\n            // sub-class code at different points and it's important that the\n            // styling values are applied to the context in the right order\n            // (see `interfaces/styling.ts` for more information).\n            flushQueue(context);\n            if (isContextDirty(context)) {\n                ngDevMode && ngDevMode.stylingApplyCacheMiss++;\n                // this is here to prevent things like <ng-container [style] [class]>...</ng-container>\n                // or if there are any host style or class bindings present in a directive set on\n                // a container node\n                var native = context[0 /* ElementPosition */];\n                var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n                var multiStartIndex = getMultiStylesStartIndex(context);\n                for (var i = 10 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                    // there is no point in rendering styles that have not changed on screen\n                    if (isDirty(context, i)) {\n                        var flag = getPointers(context, i);\n                        var directiveIndex_1 = getDirectiveIndexFromEntry(context, i);\n                        var prop = getProp(context, i);\n                        var value = getValue(context, i);\n                        var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex_1) : null;\n                        var playerBuilder = getPlayerBuilder(context, i);\n                        var isClassBased = flag & 2 /* Class */ ? true : false;\n                        var isInSingleRegion = i < multiStartIndex;\n                        var valueToApply = value;\n                        // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                        // this check implies that a single value was removed and we\n                        // should now defer to a multi value and use that (if set).\n                        if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                            // single values ALWAYS have a reference to a multi index\n                            var multiIndex = getMultiOrSingleIndex(flag);\n                            valueToApply = getValue(context, multiIndex);\n                        }\n                        // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                        // the initial value will always be a string or null,\n                        // therefore we can safely adopt it in case there's nothing else\n                        // note that this should always be a falsy check since `false` is used\n                        // for both class and style comparisons (styles can't be false and false\n                        // classes are turned off and should therefore defer to their initial values)\n                        // Note that we ignore class-based deferals because otherwise a class can never\n                        // be removed in the case that it exists as true in the initial classes list...\n                        if (!valueExists(valueToApply, isClassBased)) {\n                            valueToApply = getInitialValue(context, flag);\n                        }\n                        // if the first render is true then we do not want to start applying falsy\n                        // values to the DOM element's styling. Otherwise then we know there has\n                        // been a change and even if it's falsy then it's removing something that\n                        // was truthy before.\n                        var doApplyValue = renderer && (isFirstRender ? valueToApply : true);\n                        if (doApplyValue) {\n                            if (isClassBased) {\n                                setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                            }\n                            else {\n                                setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                            }\n                        }\n                        setDirty(context, i, false);\n                    }\n                }\n                if (flushPlayerBuilders) {\n                    var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                    var playerContext = getPlayerContext(context);\n                    var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                    for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                        var builder = playerContext[i];\n                        var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                        var oldPlayer = playerContext[playerInsertionIndex];\n                        if (builder) {\n                            var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                            if (player !== undefined) {\n                                if (player != null) {\n                                    var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                    wasQueued && totalPlayersQueued++;\n                                }\n                                if (oldPlayer) {\n                                    oldPlayer.destroy();\n                                }\n                            }\n                        }\n                        else if (oldPlayer) {\n                            // the player builder has been removed ... therefore we should delete the associated\n                            // player\n                            oldPlayer.destroy();\n                        }\n                    }\n                    setContextPlayersDirty(context, false);\n                }\n                setContextDirty(context, false);\n            }\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 10 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[9 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[9 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[9 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 2 /* Size */) +\n            0 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 2 /* Size */ +\n            1 /* StyleSanitizerOffset */] ||\n            dirs[1 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n    function assertValidDirectiveIndex(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        if (index >= dirs.length ||\n            dirs[index + 0 /* SinglePropValuesIndexOffset */] === -1) {\n            throw new Error('The provided directive is not registered with the styling context');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the parsed ngProjectAs selector from the node's attributes.\n     * If present, it will check whether the ngProjectAs selector matches any of the projection\n     * selectors.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        setActiveHostElement(currentElementIndex);\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                        instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        // Each directive gets a uniqueId value that is the same for both\n                        // create and update calls when the hostBindings function is called. The\n                        // directive uniqueId is not set anywhere--it is just incremented between\n                        // each hostBindings call and is useful for helping instruction code\n                        // uniquely determine which directive is currently active when executed.\n                        incrementActiveDirectiveId();\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n        setActiveHostElement(null);\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                ɵɵnamespaceHTML();\n                // Reset the selected index so we can assert that `select` was called later\n                setSelectedIndex(-1);\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    ɵɵnamespaceHTML();\n                    // Reset the selected index so we can assert that `select` was called later\n                    setSelectedIndex(-1);\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Appropriately sets `stylingTemplate` on a TNode\n     *\n     * Does not apply styles to DOM nodes\n     *\n     * @param tNode The node whose `stylingTemplate` to set\n     * @param attrs The attribute array source to set the attributes from\n     * @param attrsStartIndex Optional start index to start processing the `attrs` from\n     */\n    function setNodeStylingTemplate(tView, tNode, attrs, attrsStartIndex) {\n        if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, attrsStartIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n            }\n        }\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n    * Mapping between attributes names that don't correspond to their element property names.\n    */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        setActiveHostElement(elementIndex);\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                // Each directive gets a uniqueId value that is the same for both\n                // create and update calls when the hostBindings function is called. The\n                // directive uniqueId is not set anywhere--it is just incremented between\n                // each hostBindings call and is useful for helping instruction code\n                // uniquely determine which directive is currently active when executed.\n                incrementActiveDirectiveId();\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n        setActiveHostElement(null);\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            tNode,\n            native,\n            [],\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container = current;\n                for (var i = 0; i < container[VIEWS].length; i++) {\n                    var dynamicViewData = container[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(hostView) || isCreationMode(lView)) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            ɵɵnamespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            // Reset the selected index so we can assert that `select` was called later\n            setSelectedIndex(-1);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                    if (nodeOrContainer[VIEWS].length) {\n                        currentView = nodeOrContainer[VIEWS][0];\n                        nextTNode = currentView[TVIEW].node;\n                        // When the walker enters a container, then the beforeNode has to become the local native\n                        // comment node.\n                        beforeNode = nodeOrContainer[NATIVE];\n                    }\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                if (tNode.flags & 2 /* isProjected */) {\n                    nextTNode = tNode.projectionNext;\n                }\n                else if (tNode.type === 4 /* ElementContainer */) {\n                    nextTNode = tNode.child || tNode.next;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or find a lContainer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            if (isLContainer(currentView)) {\n                                tNode = currentView[T_HOST];\n                                currentView = currentView[PARENT];\n                                beforeNode = currentView[tNode.index][NATIVE];\n                                break;\n                            }\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.type === 4 /* ElementContainer */ && tNode.child || tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var views = lViewOrLContainer[VIEWS];\n                if (views.length > 0)\n                    next = views[0];\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var views = lContainer[VIEWS];\n        ngDevMode && assertDefined(views, 'Container must have views');\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n            !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[PARENT] = null;\n        viewToDetach[NEXT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n    * Reporting a TContainer node queries is a 2-step process as we need to:\n    * - check if the container node itself is matching (query might match a <ng-template> node);\n    * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n    * container.\n    *\n    * Those 2 operations need to happen in the specific order (match the container node itself, then\n    * prepare space for nodes from views).\n    */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /*\n     * The contents of this file include the instructions for all styling-related\n     * operations in Angular.\n     *\n     * The instructions present in this file are:\n     *\n     * Template level styling instructions:\n     * - elementStyling\n     * - elementStylingMap\n     * - elementStyleProp\n     * - elementClassProp\n     * - elementStylingApply\n     *\n     * Host bindings level styling instructions:\n     * - elementHostStyling\n     * - elementHostStylingMap\n     * - elementHostStyleProp\n     * - elementHostClassProp\n     * - elementHostStylingApply\n     */\n    /**\n     * Allocates style and class binding properties on the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note that this is only used\n     * for binding values (see `elementStart` to learn how to assign static styling\n     * values to an element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        // calling the function below ensures that the template's binding values\n        // are applied as the first set of bindings into the context. If any other\n        // styling bindings are set on the same element (by directives and/or\n        // components) then they will be applied at the end of the `elementEnd`\n        // instruction (because directives are created first before styling is\n        // executed for a new element).\n        initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n    }\n    /**\n     * Allocates style and class binding properties on the host element during creation mode\n     * within the host bindings function of a directive or component.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class host bindings on the host element of a directive or\n     * component. Note that this is only used for binding values (see `elementHostAttrs`\n     * to learn how to assign static styling values to the host element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementHostClassProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementHostStyleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the provided `directive` and\n     *        will not be used if the same property is assigned in another directive or\n     *        on the element directly.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostStyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        // despite the binding being applied in a queue (below), the allocation\n        // of the directive into the context happens right away. The reason for\n        // this is to retain the ordering of the directives (which is important\n        // for the prioritization of bindings).\n        allocateOrUpdateDirectiveIntoContext(tNode.stylingTemplate, directiveStylingIndex);\n        var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n        fns.push(function () {\n            initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex);\n            registerHostDirective(tNode.stylingTemplate, directiveStylingIndex);\n        });\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex) {\n        updateContextWithBindings(tNode.stylingTemplate, directiveStylingIndex, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStylingMap` or any static styles that are\n     * present from when the element was created with `elementStyling`).\n     *\n     * Note that the styling element is updated as part of `elementStylingApply`.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStyling`.\n     * @param value New value to write (falsy to remove). Note that if a directive also\n     *        attempts to write to the same binding value (via `elementHostStyleProp`)\n     *        then it will only be able to do so if the binding value assigned via\n     *        `elementStyleProp` is falsy (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStyleProp(index, styleIndex, value, suffix, forceOverride) {\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n    }\n    /**\n     * Update a host style binding value on the host element within a component/directive.\n     *\n     * If the style value is falsy then it will be removed from the host element\n     * (or assigned a different value depending if there are any styles placed\n     * on the same element with `elementHostStylingMap` or any static styles that\n     * are present from when the element was patched with `elementHostStyling`).\n     *\n     * Note that the styling applied to the host element once\n     * `elementHostStylingApply` is called.\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementHostStyling`.\n     * @param value New value to write (falsy to remove). The value may or may not\n     *        be applied to the element depending on the template/component/directive\n     *        prioritization (see `interfaces/styling.ts`)\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostStyleProp(styleIndex, value, suffix, forceOverride) {\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(hostElementIndex + HEADER_OFFSET, lView);\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        var args = [stylingContext, styleIndex, valueToAdd, directiveStylingIndex, forceOverride];\n        enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleProp, args);\n    }\n    function resolveStylePropValue(value, suffix) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        return valueToAdd;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `elementStyling` within the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStyling` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the styling priority structure.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementClassProp(index, classIndex, value, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n    }\n    /**\n     * Update a class host binding for a directive's/component's host element within\n     * the host bindings function.\n     *\n     * This instruction is meant to handle the `@HostBinding('class.foo')` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `elementHostStyling` within the creation block.\n     *\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementHostStlying` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the stylings priority structure.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostClassProp(classIndex, value, forceOverride) {\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(hostElementIndex + HEADER_OFFSET, lView);\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        var args = [stylingContext, classIndex, input, directiveStylingIndex, forceOverride];\n        enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassProp, args);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literals on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles/classes are applied to the element they will then be updated with\n     * respect to any styles/classes set with `elementStyleProp` or `elementClassProp`. If any\n     * styles or classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `elementStylingApply` is called.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStylingMap(index, classes, styles) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n            classes = NO_CHANGE;\n        }\n        if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            var initialStyles = getInitialClassNameValue(stylingContext);\n            var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n            setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n            styles = NO_CHANGE;\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    /**\n     * Update style and/or class host bindings using object literals on an element within the host\n     * bindings function for a directive/component.\n     *\n     * This instruction is meant to apply styling via the `@HostBinding('style')` and\n     * `@HostBinding('class')` bindings for a component's or directive's host element.\n     * When styles/classes are applied to the host element they will then be updated\n     * with respect to any styles/classes set with `elementHostStyleProp` or\n     * `elementHostClassProp`. If any styles or classes are set to falsy then they\n     * will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until\n     * `elementHostStylingApply` is called.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostStylingMap(classes, styles) {\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(hostElementIndex + HEADER_OFFSET, lView);\n        var args = [stylingContext, classes, styles, directiveStylingIndex];\n        enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStylingMap, args);\n    }\n    /**\n     * Apply all style and class binding values to the element.\n     *\n     * This instruction is meant to be run after `elementStylingMap`, `elementStyleProp`\n     * or `elementClassProp` instructions have been run and will only apply styling to\n     * the element if any styling bindings have been updated.\n     *\n     * @param index Index of the element's with which styling is associated.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStylingApply(index) {\n        elementStylingApplyInternal(DEFAULT_TEMPLATE_DIRECTIVE_INDEX, index);\n    }\n    /**\n     * Apply all style and class host binding values to the element.\n     *\n     * This instruction is meant to be run after `elementHostStylingMap`,\n     * `elementHostStyleProp` or `elementHostClassProp` instructions have\n     * been run and will only apply styling to the host element if any\n     * styling bindings have been updated.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostStylingApply() {\n        elementStylingApplyInternal(getActiveDirectiveStylingIndex(), getSelectedIndex());\n    }\n    function elementStylingApplyInternal(directiveStylingIndex, index) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        // if a non-element value is being processed then we can't render values\n        // on the element at all therefore by setting the renderer to null then\n        // the styling apply code knows not to actually apply the values...\n        var renderer = tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        var totalPlayersQueued = renderStyling(stylingContext, renderer, lView, isFirstRender, null, null, directiveStylingIndex);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        var renderer = lView[RENDERER];\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        if (attrs) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            setNodeStylingTemplate(tView, tNode, attrs, lastAttrIndex);\n            if (tNode.stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, tNode.stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, tNode.stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                    element.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element.setAttributeNS(namespace, name, strValue) :\n                        element.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                var directiveStylingIndex = getActiveDirectiveStylingIndex();\n                if (tNode.stylingTemplate) {\n                    patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n                else {\n                    tNode.stylingTemplate =\n                        initializeStaticContext(attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        if (attrs) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            setNodeStylingTemplate(tView, tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (tCleanup[i] === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                i += 2;\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            return listenerFn(e);\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e);\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(selectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingProjectionSelectorIndex(componentChild, selectors) : 0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     *\n     * @codeGenApi\n     */\n    function ɵɵbind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n    * **TODO: Remove this function after `property` is in use**\n    * Update a property on an element.\n    *\n    * If the property name also exists as an input property on one of the element's directives,\n    * the component property will be set instead of the element property. This check must\n    * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n    *\n    * @param index The index of the element to update in the data array\n    * @param propName Name of property. Because it is going to DOM, this is not subject to\n    *        renaming as part of minification.\n    * @param value New value to write.\n    * @param sanitizer An optional function used to sanitize the value.\n    * @param nativeOnly Whether or not we should only set native properties and skip input check\n    * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n    */\n    function ɵɵelementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n     */\n    function ɵɵcomponentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        setSelectedIndex(index);\n        var lView = getLView();\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element, renderStringify(value)) :\n                element.textContent = renderStringify(value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n            setActiveHostElement(null);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        // because inheritance is unknown during compile time, the runtime code\n                        // needs to be informed of the super-class depth so that instruction code\n                        // can distinguish one host bindings function from another. The reason why\n                        // relying on the directive uniqueId exclusively is not enough is because the\n                        // uniqueId value and the directive instance stay the same between hostBindings\n                        // calls throughout the directive inheritance chain. This means that without\n                        // a super-class depth value, there is no way to know whether a parent or\n                        // sub-class host bindings function is currently being executed.\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            // The reason why we increment first and then decrement is so that parent\n                            // hostBindings calls have a higher id value compared to sub-class hostBindings\n                            // calls (this way the leaf directive is always at a super-class depth of 0).\n                            adjustActiveDirectiveSuperClassDepthPosition(1);\n                            try {\n                                superHostBindings_1(rf, ctx, elementIndex);\n                            }\n                            finally {\n                                adjustActiveDirectiveSuperClassDepthPosition(-1);\n                            }\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                var prevViewQuery_1 = definition.viewQuery;\n                var superViewQuery_1 = superDef.viewQuery;\n                if (superViewQuery_1) {\n                    if (prevViewQuery_1) {\n                        definition.viewQuery = function (rf, ctx) {\n                            superViewQuery_1(rf, ctx);\n                            prevViewQuery_1(rf, ctx);\n                        };\n                    }\n                    else {\n                        definition.viewQuery = superViewQuery_1;\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            _loop_1();\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.12+16.sha-8027b3e.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(ɵɵinject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (typeof _global['ngI18nClosureMode'] === 'undefined') {\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        _global['ngI18nClosureMode'] =\n            // TODO(FW-1250): validate that this actually, you know, works.\n            typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        ɵɵelementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    ɵɵelementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    ɵɵtextBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = ɵɵload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        ɵɵelementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @codeGenApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (placeholders === void 0) { placeholders = {}; }\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        return Object.keys(placeholders).length ?\n            input.replace(LOCALIZE_PH_REGEXP, function (match, key) { return placeholders[key] || ''; }) :\n            input;\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        // We determine whether a class has its own metadata by taking the metadata from the parent\n        // constructor and checking whether it's the same as the subclass metadata below. We can't use\n        // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n        // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n        var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n        var parentConstructor = parentPrototype && parentPrototype.constructor;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined &&\n                (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined &&\n                (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = ɵɵviewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n     * Loads current View Query and moves the pointer/index to the next View Query in LView.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return ɵɵload(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = ɵɵcontentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵelementAttribute': ɵɵelementAttribute,\n        'ɵɵbind': ɵɵbind,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵinterpolation1': ɵɵinterpolation1,\n        'ɵɵinterpolation2': ɵɵinterpolation2,\n        'ɵɵinterpolation3': ɵɵinterpolation3,\n        'ɵɵinterpolation4': ɵɵinterpolation4,\n        'ɵɵinterpolation5': ɵɵinterpolation5,\n        'ɵɵinterpolation6': ɵɵinterpolation6,\n        'ɵɵinterpolation7': ɵɵinterpolation7,\n        'ɵɵinterpolation8': ɵɵinterpolation8,\n        'ɵɵinterpolationV': ɵɵinterpolationV,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵload': ɵɵload,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵelementProperty': ɵɵelementProperty,\n        'ɵɵcomponentHostSyntheticProperty': ɵɵcomponentHostSyntheticProperty,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadViewQuery': ɵɵloadViewQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵloadContentQuery': ɵɵloadContentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵelementStyling': ɵɵelementStyling,\n        'ɵɵelementStylingMap': ɵɵelementStylingMap,\n        'ɵɵelementStyleProp': ɵɵelementStyleProp,\n        'ɵɵelementStylingApply': ɵɵelementStylingApply,\n        'ɵɵelementClassProp': ɵɵelementClassProp,\n        'ɵɵelementHostStyling': ɵɵelementHostStyling,\n        'ɵɵelementHostStylingMap': ɵɵelementHostStylingMap,\n        'ɵɵelementHostStyleProp': ɵɵelementHostStyleProp,\n        'ɵɵelementHostStylingApply': ɵɵelementHostStylingApply,\n        'ɵɵelementHostClassProp': ɵɵelementHostClassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten$1(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$3,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten$1(imports.map(computeCombinedExports), resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(verifyDeclarationIsUnique);\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$1(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.template.ngPrivateData = undefined;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        typeArgumentCount: 0,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the `Input` and `Output` decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0] || name;\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = ɵɵdefineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = ɵɵdefineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = ɵɵdefineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                setLocaleId(localeId);\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = ɵɵdefineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * Walk the TNode tree to find matches for the predicate.\n     *\n     * @param parentElement the element from which the walk is started\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(getNativeByTNode(tNode, lView), predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild)\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            else {\n                // Otherwise, its children have to be processed.\n                if (tNode.child)\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode = head_1_1.value;\n                        _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                if (head) {\n                    var nextLView = componentView[PARENT];\n                    var nextTNode_1 = nextLView[TVIEW].data[head.index];\n                    _queryNodeChildrenR3(nextTNode_1, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n        }\n        else {\n            // Case 4: the TNode is a view.\n            if (tNode.child) {\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        // To determine the next node to be processed, we need to use the next or the projectionNext link,\n        // depending on whether the current node has been projected.\n        var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n        if (nextTNode) {\n            _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = 0; i < lContainer[VIEWS].length; i++) {\n            var childView = lContainer[VIEWS][i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (debugNode && (elementsOnly ? debugNode instanceof DebugElement__POST_R3__ : true) &&\n                predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵbind = ɵɵbind;\n    exports.ɵɵinterpolation1 = ɵɵinterpolation1;\n    exports.ɵɵinterpolation2 = ɵɵinterpolation2;\n    exports.ɵɵinterpolation3 = ɵɵinterpolation3;\n    exports.ɵɵinterpolation4 = ɵɵinterpolation4;\n    exports.ɵɵinterpolation5 = ɵɵinterpolation5;\n    exports.ɵɵinterpolation6 = ɵɵinterpolation6;\n    exports.ɵɵinterpolation7 = ɵɵinterpolation7;\n    exports.ɵɵinterpolation8 = ɵɵinterpolation8;\n    exports.ɵɵinterpolationV = ɵɵinterpolationV;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵloadViewQuery = ɵɵloadViewQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadContentQuery = ɵɵloadContentQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementProperty = ɵɵelementProperty;\n    exports.ɵɵcomponentHostSyntheticProperty = ɵɵcomponentHostSyntheticProperty;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementAttribute = ɵɵelementAttribute;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementStyling = ɵɵelementStyling;\n    exports.ɵɵelementStylingMap = ɵɵelementStylingMap;\n    exports.ɵɵelementStyleProp = ɵɵelementStyleProp;\n    exports.ɵɵelementStylingApply = ɵɵelementStylingApply;\n    exports.ɵɵelementClassProp = ɵɵelementClassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵelementHostStyling = ɵɵelementHostStyling;\n    exports.ɵɵelementHostStylingMap = ɵɵelementHostStylingMap;\n    exports.ɵɵelementHostStyleProp = ɵɵelementHostStyleProp;\n    exports.ɵɵelementHostClassProp = ɵɵelementHostClassProp;\n    exports.ɵɵelementHostStylingApply = ɵɵelementHostStylingApply;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵload = ɵɵload;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}