{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","error_1","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","elementDepthCount","bindingsEnabled","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","activeDirectiveId","hasActiveElementFlag","flag","_selectedIndex","setActiveHostElement","elementIndex","getSelectedIndex","executeElementExitFn","setSelectedIndex","previousOrParentTNode","isParent","_elementExitFn","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","view","getIsParent","setIsNotParent","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","selectView","newView","hostTNode","oldView","_currentSanitizer","RendererStyleFlags3","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","getConfig","hasConfig","allowDirectStyling","hostBindingsMode","allow","config","contextIsLocked","getLockedConfig","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","bindingIndex","getValue","isContextLocked","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","isHostStylingActive","directiveOrSourceId","stylingMapToString","isClassBased","str","prop","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentView","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","lastDirectClassMap","lastDirectStyleMap","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","bindingValue","totalSources","addNewSourceColumn","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","lockAndFinalizeContext","updateInitialStylingOnContext","initialStyling","hasInitialStyling","lockContext","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","applyStylingValue","applyFn","valueToApply","findAndApplyMapValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","buildConfig","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","_debugContext","overrideSanitizer","_mapValues","mockElement","mapFn","hasMapBindings","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","templateBindingsLocked","hostBindingsLocked","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","bindingStartIndex","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","selectedIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","inputsStore","outputsStore","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","isComponent","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","getHostNative","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","tViewNodeChild","currentChild","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","tNodeType","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ngFactoryDef","metadata","compileFactory","injectFn","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","provider","processProvider","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","resolveProvider","computeDeps","providerDeps","staticError","useNew","multiProviderMixError","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","recursivelyProcessProviders","resolvedProvider","multiProvider","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","constsIndex","tViewConsts","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","isHostStyling","getClassesContext","getStylesContext","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","applyStylingMapDirectly","initialStyles","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","hasDirectives","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","DirectiveDefFlags","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","Math","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","propertyName","splitByComma","piece","static","compilePipe","ngPipeDef","getPipeMetadata","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_classesProxy","element_1","createProxy","handler","g","Proxy","contains","toggle","ownKeys","getOwnPropertyDescriptor","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵINJECTOR_SCOPE","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵallowSanitizationBypassAndThrow","ɵgetSanitizationBypassType","ɵunwrapSafeValue","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_PIPE_DEF","ɵNG_MOD_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.10+83.sha-ac745c8.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error_1 = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error_1.name = 'NullInjectorError';\n                throw error_1;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var activeDirectiveId = 0;\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (_selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        _selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (getSelectedIndex() !== elementIndex) {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = 0;\n        }\n    }\n    var _elementExitFn = null;\n    function executeElementExitFn() {\n        _elementExitFn();\n        // TODO (matsko|misko): remove this unassignment once the state management of\n        //                      global variables are better managed.\n        _selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        _elementExitFn = fn;\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param host Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function selectView(newView, hostTNode) {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n    }\n    /* tslint:disable */\n    var _selectedIndex = -1 << 1 /* Size */;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index << 1 /* Size */;\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64; // @\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling, hasDirectives) {\n        initialStyling = initialStyling || allocStylingMapArray();\n        var config = 0 /* Initial */;\n        if (hasDirectives) {\n            config |= 1 /* HasDirectives */;\n        }\n        if (initialStyling.length > 1 /* ValuesStartPosition */) {\n            config |= 16 /* HasInitialStyling */;\n        }\n        return [\n            config,\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray() {\n        return [''];\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function hasConfig(context, flag) {\n        return (getConfig(context) & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. there are no directives present AND ngDevMode is falsy\n     * 2. context is locked for template or host bindings (depending on `hostBindingsMode`)\n     * 3. There are no collisions (i.e. properties with more than one binding) across multiple\n     *    sources (i.e. template + directive, directive + directive, directive + component)\n     */\n    function allowDirectStyling(context, hostBindingsMode) {\n        var allow = false;\n        var config = getConfig(context);\n        var contextIsLocked = (config & getLockedConfig(hostBindingsMode)) !== 0;\n        var hasNoDirectives = (config & 1 /* HasDirectives */) === 0;\n        // if no directives are present then we do not need populate a context at all. This\n        // is because duplicate prop bindings cannot be registered through the template. If\n        // and when this happens we can safely apply the value directly without context\n        // resolution...\n        if (hasNoDirectives) {\n            // `ngDevMode` is required to be checked here because tests/debugging rely on the context being\n            // populated. If things are in production mode then there is no need to build a context\n            // therefore the direct apply can be allowed (even on the first update).\n            allow = ngDevMode ? contextIsLocked : true;\n        }\n        else if (contextIsLocked) {\n            var hasNoCollisions = (config & 8 /* HasCollisions */) === 0;\n            var hasOnlyMapsOrOnlyProps = (config & 6 /* HasPropAndMapBindings */) !== 6 /* HasPropAndMapBindings */;\n            allow = hasNoCollisions && hasOnlyMapsOrOnlyProps;\n        }\n        return allow;\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function patchConfig(context, flag) {\n        context[0 /* ConfigPosition */] |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[1 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex > 0 ? data[bindingIndex] : null;\n    }\n    function lockContext(context, hostBindingsMode) {\n        patchConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function isContextLocked(context, hostBindingsMode) {\n        return hasConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function getLockedConfig(hostBindingsMode) {\n        return hostBindingsMode ? 256 /* HostBindingsLocked */ :\n            128 /* TemplateBindingsLocked */;\n    }\n    function getPropValuesStartPosition(context) {\n        var startPosition = 3 /* ValuesStartPosition */;\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[2 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 3 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n        lastDirectClassMap: null,\n        lastDirectStyleMap: null,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n            _state.lastDirectClassMap = null;\n            _state.lastDirectStyleMap = null;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        if (value !== NO_CHANGE) {\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        if (value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        if (!isContextLocked(context, hostBindingsMode)) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tNode.firstTemplatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired);\n            patchConfig(context, hostBindingsMode ? 64 /* HasHostBindings */ : 32 /* HasTemplateBindings */);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = (getConfig(context) & 64 /* HasHostBindings */) &&\n                !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, data, prop);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, data, prop) {\n        var valuesCount = getValuesCount(context);\n        if (prop !== null && hasConfig(context, 2 /* HasPropBindings */)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 3 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            var bindingsStart = 3 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, countId, sourceIndex, prop, bindingValue, sanitizationRequired) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 3 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(context, 8 /* HasCollisions */);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 3 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[1 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            if (!isContextLocked(stylesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(stylesContext, hostBindingsMode);\n            }\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode);\n            }\n        }\n        if (classesContext) {\n            if (!isContextLocked(classesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(classesContext, hostBindingsMode);\n            }\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     *\n     * Note that the `TStylingContext` styling context contains two locks: one for template bindings\n     * and another for host bindings. Either one of these locks will be set when styling is applied\n     * during the template binding flush and/or during the host bindings flush.\n     */\n    function lockAndFinalizeContext(context, hostBindingsMode) {\n        var initialValues = getStylingMapArray(context);\n        updateInitialStylingOnContext(context, initialValues);\n        lockContext(context, hostBindingsMode);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, COUNT_ID_FOR_STYLING, 0, prop, value, false);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(context, 16 /* HasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 3 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has three different cases that can occur (for each item in the map):\n     *\n     * - Case 1: Attempt to apply the current value in the map to the element (if it's `non null`).\n     *\n     * - Case 2: If a map value fails to be applied then the algorithm will find a matching entry in\n     *           the initial values present in the context and attempt to apply that.\n     *\n     * - Default Case: If the initial value cannot be applied then a default value of `null` will be\n     *                 applied (which will remove the style/class value from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, element, data, bindingIndex, map, isClassBased, applyFn, sanitizer, forceUpdate) {\n        if (forceUpdate || hasValueChanged(data[bindingIndex], map)) {\n            setValue(data, bindingIndex, map);\n            var initialStyles = hasConfig(context, 16 /* HasInitialStyling */) ? getStylingMapArray(context) : null;\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                // case 1: apply the map value (if it exists)\n                var applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n                // case 2: apply the initial value (if it exists)\n                if (!applied && initialStyles) {\n                    applied = findAndApplyMapValue(renderer, element, applyFn, initialStyles, prop, bindingIndex, sanitizer);\n                }\n                // default case: apply `null` to remove the value\n                if (!applied) {\n                    applyFn(renderer, element, prop, null, bindingIndex);\n                }\n            }\n            var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n            if (isClassBased) {\n                state.lastDirectClassMap = map;\n            }\n            else {\n                state.lastDirectStyleMap = map;\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has four different cases that can occur:\n     *\n     * - Case 1: Apply the provided prop/value (style or class) entry to the element\n     *           (if it is `non null`).\n     *\n     * - Case 2: If value does not get applied (because its `null` or `undefined`) then the algorithm\n     *           will check to see if a styling map value was applied to the element as well just\n     *           before this (via `styleMap` or `classMap`). If and when a map is present then the\n      *          algorithm will find the matching property in the map and apply its value.\n      *\n     * - Case 3: If a map value fails to be applied then the algorithm will check to see if there\n     *           are any initial values present and attempt to apply a matching value based on\n     *           the target prop.\n     *\n     * - Default Case: If a matching initial value cannot be applied then a default value\n     *                 of `null` will be applied (which will remove the style/class value\n     *                 from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, element, data, bindingIndex, prop, value, isClassBased, applyFn, sanitizer) {\n        var applied = false;\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            // case 1: apply the provided value (if it exists)\n            applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n            // case 2: find the matching property in a styling map and apply the detected value\n            if (!applied && hasConfig(context, 4 /* HasMapBindings */)) {\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                var map = isClassBased ? state.lastDirectClassMap : state.lastDirectStyleMap;\n                applied = map ?\n                    findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) :\n                    false;\n            }\n            // case 3: apply the initial value (if it exists)\n            if (!applied && hasConfig(context, 16 /* HasInitialStyling */)) {\n                var map = getStylingMapArray(context);\n                applied =\n                    map ? findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex) : false;\n            }\n            // default case: apply `null` to remove the value\n            if (!applied) {\n                applyFn(renderer, element, prop, null, bindingIndex);\n            }\n        }\n        return applied;\n    }\n    function applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 2 /* SanitizeOnly */) : valueToApply;\n            applyFn(renderer, element, prop, valueToApply, bindingIndex);\n            return true;\n        }\n        return false;\n    }\n    function findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p === prop) {\n                var valueToApply = getMapValue(map, i);\n                valueToApply =\n                    sanitizer ? sanitizer(prop, valueToApply, 2 /* SanitizeOnly */) : valueToApply;\n                applyFn(renderer, element, prop, valueToApply, bindingIndex);\n                return true;\n            }\n            if (p > prop) {\n                break;\n            }\n        }\n        return false;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            // Use `isStylingValueDefined` to account for falsy values that should be bound like 0.\n            if (isStylingValueDefined(value)) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 3 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n            this._debugContext = isStylingContext(context) ?\n                new TStylingContextDebug(context) :\n                context;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"context\", {\n            get: function () { return this._debugContext; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = hasConfig(this.context.context, 4 /* HasMapBindings */);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context.context, null, mockElement, this._data, true, mapFn, sanitizer, false);\n            // and also the host bindings\n            applyStylingViaContext(this.context.context, null, mockElement, this._data, true, mapFn, sanitizer, true);\n        };\n        return NodeStylingDebug;\n    }());\n    function buildConfig(context) {\n        var hasMapBindings = hasConfig(context, 4 /* HasMapBindings */);\n        var hasPropBindings = hasConfig(context, 2 /* HasPropBindings */);\n        var hasCollisions = hasConfig(context, 8 /* HasCollisions */);\n        var hasTemplateBindings = hasConfig(context, 32 /* HasTemplateBindings */);\n        var hasHostBindings = hasConfig(context, 64 /* HasHostBindings */);\n        var templateBindingsLocked = hasConfig(context, 128 /* TemplateBindingsLocked */);\n        var hostBindingsLocked = hasConfig(context, 256 /* HostBindingsLocked */);\n        var allowDirectStyling$1 = allowDirectStyling(context, false) || allowDirectStyling(context, true);\n        return {\n            hasMapBindings: hasMapBindings,\n            hasPropBindings: hasPropBindings,\n            hasCollisions: hasCollisions,\n            hasTemplateBindings: hasTemplateBindings,\n            hasHostBindings: hasHostBindings,\n            templateBindingsLocked: templateBindingsLocked,\n            hostBindingsLocked: hostBindingsLocked,\n            allowDirectStyling: allowDirectStyling$1,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = NG_DEV_MODE && createNamedArrayType('LView') || null;\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 64 /* hasInitialStyling */)\n                    flags.push('TNodeFlags.hasInitialStyling');\n                if (this.flags & 256 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 128 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"bindingIndex\", {\n            get: function () { return this._raw_lView[BINDING_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, lView) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            selectView(oldView, null);\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingRoot(lView[BINDING_INDEX] = tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            selectView(oldView, null);\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        if ((tNode.flags & 256 /* hasHostBindings */) === 256 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TAttributes[]\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, publicName, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, publicName, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            inputsStore = generatePropertyAliases(directiveDef.inputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: publicName\n             * i+2: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+2]\n             */\n            for (var i = 0; i < dataValue.length; i += 3) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 2], value);\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName) || typeof Node !== 'function' || !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries !== null)\n                    tNode.flags |= 8 /* hasContentQuery */;\n                if (def.hostBindings !== null)\n                    tNode.flags |= 256 /* hasHostBindings */;\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.attrs !== null) {\n            setInputsFromAttrs(lView, directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        var view = getComponentViewByInstance(component);\n        checkNoChangesInternal(view, component);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            if (tViewNodeChild !== null) {\n                if (tViewNodeChild.type === 4 /* ElementContainer */ ||\n                    tViewNodeChild.type === 5 /* IcuContainer */) {\n                    var currentChild = tViewNodeChild.child;\n                    while (currentChild && (currentChild.type === 4 /* ElementContainer */ ||\n                        currentChild.type === 5 /* IcuContainer */)) {\n                        currentChild = currentChild.child;\n                    }\n                    tViewNodeChild = currentChild || tViewNodeChild;\n                }\n                return getNativeByTNodeOrNull(tViewNodeChild, lView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 128 /* isDetached */) !== 128 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // FIXME: ngModuleRef is optional, so its type allows \"undefined\", whereas the code\n                        // below is passing null for the default/absent value.\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponentHost(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n            Object.defineProperty(type, NG_INJECTABLE_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        ngFactoryDef =\n                            getCompilerFacade().compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                                name: metadata.name,\n                                type: metadata.type,\n                                typeArgumentCount: metadata.typeArgumentCount,\n                                deps: reflectDependencies(type),\n                                injectFn: 'inject',\n                                isPipe: false\n                            });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param constsIndex Index of template in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, constsIndex, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex]);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(getNativeByTNode(tNode, lView), lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(getSelectedIndex(), bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(elementIndex, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var hostBindingsMode = isHostStyling();\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (!isContextLocked(context, hostBindingsMode)) {\n            patchConfig(context, 2 /* HasPropBindings */);\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, native, lView, bindingIndex, prop, value, isClassBased, isClassBased ? setClass : setStyle, sanitizer);\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value);\n            }\n            else {\n                updated = updateStyleViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false);\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true);\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var directiveIndex = getActiveDirectiveId();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = lView[bindingIndex];\n        var hostBindingsMode = isHostStyling();\n        var sanitizer = getCurrentStyleSanitizer();\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (!isContextLocked(context, hostBindingsMode)) {\n            patchConfig(context, 4 /* HasMapBindings */);\n        }\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingMapDirectly(renderer, context, native, lView, bindingIndex, stylingMapArr, isClassBased, isClassBased ? setClass : setStyle, sanitizer, valueHasChanged);\n        }\n        else {\n            updated = valueHasChanged;\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged);\n            }\n            else {\n                updateStyleViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context, false)) {\n                var inputName = isClassBased ? 'class' : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, classesContext, stylesContext, native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray();\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray();\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        if (hasAdditionalInitialStyling) {\n            tNode.flags |= 64 /* hasInitialStyling */;\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            var hasDirectives = isDirectiveHost(tNode);\n            context = allocTStylingContext(context, hasDirectives);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param constsIndex Index of the element in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, constsIndex, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        var consts = tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, consts);\n        if (consts != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, consts);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, consts, lastAttrIndex);\n            }\n        }\n        if ((tNode.flags & 64 /* hasInitialStyling */) === 64 /* hasInitialStyling */) {\n            renderInitialStyling(renderer, native, tNode);\n        }\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param constsIndex Index of the element in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, constsIndex, localRefs) {\n        ɵɵelementStart(index, name, constsIndex, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param constsIndex Index of the container in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, constsIndex, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        var tViewConsts = tView.consts;\n        var consts = tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, consts);\n        if (consts && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, consts, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param constsIndex Index of the container in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, constsIndex, localRefs) {\n        ɵɵelementContainerStart(index, constsIndex, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        selectView(lContainer[PARENT], null);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs != null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, lView[BINDING_INDEX] - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    lView[BINDING_INDEX] - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = selectView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            selectView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DirectiveDefFlags;\n    (function (DirectiveDefFlags) {\n        DirectiveDefFlags[DirectiveDefFlags[\"ContentQuery\"] = 2] = \"ContentQuery\";\n    })(DirectiveDefFlags || (DirectiveDefFlags = {}));\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ngInjectableDef = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.10+83.sha-ac745c8.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = selectView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                selectView(oldLView, null);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, lView, /* markAsDetached */ true);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 128 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearRegisteredModuleState() {\n        modules.clear();\n    }\n    function getRegisteredModulesState() {\n        return new Map(modules);\n    }\n    function restoreRegisteredModulesState(moduleMap) {\n        modules = new Map(moduleMap);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error_1 = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error_1.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error_1.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error_1.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error_1.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign({}, meta.metadata, { injectFn: 'directiveInject', isPipe: false }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign({}, metadata, { injectFn: 'directiveInject', isPipe: true }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ɵfac = function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); };\n        ApplicationInitStatus.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function (t) { return ApplicationInitStatus.ɵfac(t); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ɵfac = function Console_Factory(t) { return new (t || Console)(); };\n        Console.ngInjectableDef = ɵɵdefineInjectable({ token: Console, factory: function (t) { return Console.ɵfac(t); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ɵfac = function Compiler_Factory(t) { return new (t || Compiler)(); };\n        Compiler.ngInjectableDef = ɵɵdefineInjectable({ token: Compiler, factory: function (t) { return Compiler.ɵfac(t); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ɵfac = function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); };\n        Testability.ngInjectableDef = ɵɵdefineInjectable({ token: Testability, factory: function (t) { return Testability.ɵfac(t); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ɵfac = function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); };\n        TestabilityRegistry.ngInjectableDef = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function (t) { return TestabilityRegistry.ɵfac(t); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__POST_R3__;\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ɵfac = function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); };\n        PlatformRef.ngInjectableDef = ɵɵdefineInjectable({ token: PlatformRef, factory: function (t) { return PlatformRef.ɵfac(t); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ɵfac = function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); };\n        ApplicationRef.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationRef, factory: function (t) { return ApplicationRef.ɵfac(t); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ɵfac = function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); };\n        SystemJsNgModuleLoader.ngInjectableDef = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function (t) { return SystemJsNgModuleLoader.ɵfac(t); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an instance of a `Proxy` and creates with an empty target object and binds it to the\n     * provided handler.\n     *\n     * The reason why this function exists is because IE doesn't support\n     * the `Proxy` class. For this reason an error must be thrown.\n     */\n    function createProxy(handler) {\n        var g = _global;\n        if (!g.Proxy) {\n            throw new Error('Proxy is not supported in this browser');\n        }\n        return new g.Proxy({}, handler);\n    }\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                if (!this._classesProxy) {\n                    var element_1 = this.nativeElement;\n                    // we use a proxy here because VE code expects `.classes` to keep\n                    // track of which classes have been added and removed. Because we\n                    // do not make use of a debug renderer anymore, the return value\n                    // must always be `false` in the event that a class does not exist\n                    // on the element (even if it wasn't added and removed beforehand).\n                    this._classesProxy = createProxy({\n                        get: function (target, prop) {\n                            return element_1 ? element_1.classList.contains(prop) : false;\n                        },\n                        set: function (target, prop, value) {\n                            return element_1 ? element_1.classList.toggle(prop, !!value) : false;\n                        },\n                        ownKeys: function () { return element_1 ? Array.from(element_1.classList).sort() : []; },\n                        getOwnPropertyDescriptor: function (k) {\n                            // we use a special property descriptor here so that enumeration operations\n                            // such as `Object.keys` will work on this proxy.\n                            return {\n                                enumerable: true,\n                                configurable: true,\n                            };\n                        },\n                    });\n                }\n                return this._classesProxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ɵmod = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please add `import \\'@angular/localize/init\\';` to your polyfills.ts file.');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode$1;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}